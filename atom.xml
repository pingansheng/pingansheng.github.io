<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Peter I/O</title>
  
  <link href="//atom.xml" rel="self"/>
  
  <link href="https://pingansheng.github.io/"/>
  <updated>2024-02-24T14:01:14.472Z</updated>
  <id>https://pingansheng.github.io/</id>
  
  <author>
    <name>PeterPing</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MySql核心要点：三大日志</title>
    <link href="https://pingansheng.github.io/2024/02/24/MySQL%E6%A0%B8%E5%BF%83%E8%A6%81%E7%82%B9%EF%BC%9A%E4%B8%89%E5%A4%A7%E6%97%A5%E5%BF%97/"/>
    <id>https://pingansheng.github.io/2024/02/24/MySQL核心要点：三大日志/</id>
    <published>2024-02-24T02:48:49.000Z</published>
    <updated>2024-02-24T14:01:14.472Z</updated>
    
    <content type="html"><![CDATA[<h3 id="UnDoLog"><a href="#UnDoLog" class="headerlink" title="UnDoLog"></a>UnDoLog</h3><ul>
<li>是 Innodb 存储引擎层生成的日志，实现了事务中的原子性，主要用于事务回滚和 MVCC。</li>
</ul>
<p>undo log 是一种用于撤销回退的日志。在事务没提交之前，MySQL 会先记录更新前的数据到 undo log 日志文件里面，当事务回滚时，可以利用 undo log 来进行回滚。</p>
<p>一条记录的每一次更新操作产生的 undo log 格式都有一个 roll_pointer 指针和一个 trx_id 事务id：</p>
<p>通过 trx_id 可以知道该记录是被哪个事务修改的；<br>通过 roll_pointer 指针可以将这些 undo log 串成一个链表，这个链表就被称为版本链。</p>
<p>undo log 还有一个作用，通过 ReadView + undo log 实现 MVCC（多版本并发控制）。</p>
<p>对于「读提交」和「可重复读」隔离级别的事务来说，它们的快照读（普通 select 语句）是通过 Read View + undo log 来实现的，它们的区别在于创建 Read View 的时机不同：</p>
<ul>
<li>「读提交」隔离级别是在每个 select 都会生成一个新的 Read View，也意味着，事务期间的多次读取同一条数据，前后两次读的数据可能会出现不一致，因为可能这期间另外一个事务修改了该记录，并提交了事务。</li>
<li>「可重复读」隔离级别是启动事务时生成一个 Read View，然后整个事务期间都在用这个 Read View，这样就保证了在事务期间读到的数据都是事务启动前的记录。</li>
</ul>
<p>这两个隔离级别实现是通过「事务的 Read View 里的字段」和「记录中的两个隐藏列（trx_id 和 roll_pointer）」的比对，如果不满足可见行，就会顺着 undo log 版本链里找到满足其可见性的记录，从而控制并发事务访问同一个记录时的行为，这就叫 MVCC（多版本并发控制）。</p>
<p>因此，undo log 两大作用：</p>
<blockquote>
<ul>
<li><strong>实现事务回滚，保障事务的原子性。</strong> 事务处理过程中，如果出现了错误或者用户执 行了 ROLLBACK 语句，MySQL 可以利用 undo log 中的历史数据将数据恢复到事务开始之前的状态。</li>
<li><strong>实现 MVCC（多版本并发控制）关键因素之一。</strong> MVCC 是通过 ReadView + undo log 实现的。undo log 为每条记录保存多份历史数据，MySQL 在执行快照读（普通 select 语句）的时候，会根据事务的 Read View 里的信息，顺着 undo log 的版本链找到满足其可见性的记录。</li>
</ul>
</blockquote>
<h3 id="RedoLog与BufferPool"><a href="#RedoLog与BufferPool" class="headerlink" title="RedoLog与BufferPool"></a>RedoLog与BufferPool</h3><h4 id="BufferPool"><a href="#BufferPool" class="headerlink" title="BufferPool"></a>BufferPool</h4><p>MySQL 的数据都是存在磁盘中的，那么我们要更新一条记录的时候，得先要从磁盘读取该记录，然后在内存中修改这条记录。那修改完这条记录是选择直接写回到磁盘，还是选择缓存起来呢？</p>
<p>当然是缓存起来好，这样下次有查询语句命中了这条记录，直接读取缓存中的记录，就不需要从磁盘获取数据了。</p>
<p>为此，Innodb 存储引擎设计了一个缓冲池（Buffer Pool），来提高数据库的读写性能。 层级关系是：</p>
<pre><code>Mysql（Server Innodb(BufferPool)） -&gt; 操作系统 -&gt; 磁盘（数据页（数据行））
</code></pre><p>有了 Buffer Poo 后：</p>
<ul>
<li><p>当读取数据时，如果数据存在于 Buffer Pool 中，客户端就会直接读取 Buffer Pool 中的数据，否则再去磁盘中读取。</p>
</li>
<li><p>当修改数据时，如果数据存在于 Buffer Pool 中，那直接修改 Buffer Pool 中数据所在的页，然后将其页设置为脏页（该页的内存数据和磁盘上的数据已经不一致），为了减少磁盘I/O，不会立即将脏页写入磁盘，后续由后台线程选择一个合适的时机将脏页写入到磁盘。</p>
</li>
</ul>
<p>InnoDB 会把存储的数据划分为若干个「页」，以页作为磁盘和内存交互的基本单位，一个页的默认大小为 16KB。因此，Buffer Pool 同样需要按「页」来划分。</p>
<p>在 MySQL 启动的时候，InnoDB 会为 Buffer Pool 申请一片连续的内存空间，然后按照默认的16KB的大小划分出一个个的页， Buffer Pool 中的页就叫做缓存页。此时这些缓存页都是空闲的，之后随着程序的运行，才会有磁盘上的页被缓存到 Buffer Pool 中。</p>
<p>Buffer Pool 除了缓存「索引页」和「数据页」，还包括了 Undo 页，插入缓存、自适应哈希索引、锁信息等等。</p>
<blockquote>
<p>Undo 页是记录什么？</p>
</blockquote>
<p>开启事务后，InnoDB 层更新记录前，首先要记录相应的 undo log，如果是更新操作，需要把被更新的列的旧值记下来，也就是要生成一条 undo log，undo log 会写入 Buffer Pool 中的 Undo 页面。</p>
<blockquote>
<p>查询一条记录，就只需要缓冲一条记录吗？</p>
</blockquote>
<p>不是的。</p>
<p>当我们查询一条记录时，InnoDB 是会把整个页的数据加载到 Buffer Pool 中，将页加载到 Buffer Pool 后，再通过页里的「页目录」去定位到某条具体的记录。</p>
<h4 id="RedoLog"><a href="#RedoLog" class="headerlink" title="RedoLog"></a>RedoLog</h4><ul>
<li>是 Innodb 存储引擎层生成的日志，实现了事务中的持久性，主要用于掉电等故障恢复；</li>
</ul>
<p>为了防止断电导致数据丢失的问题，当有一条记录需要更新的时候，InnoDB 引擎就会先更新内存（同时标记为脏页），然后将本次对这个页的修改以 redo log 的形式记录下来，这个时候更新就算完成了。</p>
<p>后续，InnoDB 引擎会在适当的时候，由后台线程将缓存在 Buffer Pool 的脏页刷新到磁盘里，这就是 WAL （Write-Ahead Logging）技术。<br>WAL 技术指的是， MySQL 的写操作并不是立刻写到磁盘上，而是先写日志，然后在合适的时间再写到磁盘上。</p>
<blockquote>
<p>redo log 和 undo log 区别在哪？</p>
</blockquote>
<p>这两种日志是属于 InnoDB 存储引擎的日志，它们的区别在于：</p>
<p>redo log 记录了此次事务「完成后」的数据状态，记录的是更新之后的值；<br>undo log 记录了此次事务「开始前」的数据状态，记录的是更新之前的值；</p>
<p>所以有了 redo log，再通过 WAL 技术，InnoDB 就可以保证即使数据库发生异常重启，之前已提交的记录都不会丢失，这个能力称为 <strong>crash-safe（崩溃恢复）</strong>。可以看出来， redo log 保证了事务四大特性中的<strong>持久性</strong>。</p>
<p>写入 redo log 的方式使用了追加操作， 所以磁盘操作是顺序写，而写入数据需要先找到写入位置，然后才写到磁盘，所以磁盘操作是随机写。</p>
<p>至此， 针对为什么需要 redo log 这个问题我们有两个答案：</p>
<ul>
<li><p>实现事务的持久性，让 MySQL 有 crash-safe 的能力，能够保证 MySQL 在任何时间段突然崩溃，重启后之前已提交的记录都不会丢失；</p>
</li>
<li><p>将写操作从「随机写」变成了「顺序写」，提升 MySQL 写入磁盘的性能。</p>
</li>
</ul>
<blockquote>
<p>产生的 redo log 是直接写入磁盘的吗？</p>
</blockquote>
<p>实际上， 执行一个事务的过程中，产生的 redo log 也不是直接写入磁盘的，因为这样会产生大量的 I/O 操作，而且磁盘的运行速度远慢于内存。</p>
<p>所以，redo log 也有自己的缓存—— redo log buffer，每当产生一条 redo log 时，会先写入到 redo log buffer，后续在持久化到磁盘如下图：</p>
<blockquote>
<p>redo log 什么时候刷盘？</p>
</blockquote>
<ul>
<li>MySQL 正常关闭时；</li>
<li>当 redo log buffer 中记录的写入量大于 redo log buffer 内存空间的一半时，会触发落盘；</li>
<li>InnoDB 的后台线程每隔 1 秒，将 redo log buffer 持久化到磁盘。</li>
<li>每次事务提交时都将缓存在 redo log buffer 里的 redo log 直接持久化到磁盘（这个策略可由 innodb_flush_log_at_trx_commit 参数控制，下面会说）。</li>
</ul>
<blockquote>
<p>innodb_flush_log_at_trx_commit 参数控制的是什么？</p>
</blockquote>
<p>可取的值有：0、1、2，默认值为 1，这三个值分别代表的策略如下：</p>
<ul>
<li><p>当设置该参数为 0 时，表示每次事务提交时 ，还是将 redo log 留在 redo log buffer 中 ，该模式下在事务提交时不会主动触发写入磁盘的操作。每隔一秒，MySQL进程后台会把缓存在 redo log buffer 中的 redo log ，通过调用 write() 写到操作系统的 Page Cache，然后调用 fsync() 持久化到磁盘。所以参数为 0 的策略，<strong>MySQL 进程的崩溃会导致上一秒钟所有事务数据的丢失</strong>;</p>
</li>
<li><p>当设置该参数为 1 时，表示每次事务提交时，<strong>都将缓存在 redo log buffer 里的 redo log 直接持久化到磁盘，这样可以保证 MySQL 异常重启之后数据不会丢失</strong>。</p>
</li>
<li>当设置该参数为 2 时，表示每次事务提交时，都只是缓存在 redo log buffer 里的 redo log 写到 redo log 文件，注意写入到「 redo log 文件」<strong>并不意味着写入到了磁盘，因为操作系统的文件系统中有个 Page Cache，Page Cache 是专门用来缓存文件数据的，所以写入「 redo log文件」意味着写入到了操作系统的文件缓存</strong>，此种设置下，每隔一秒MYSQL进程，调用 fsync，将缓存在操作系统中 Page Cache 里的 redo log 持久化到磁盘。<strong>所以参数为 2 的策略，较取值为 0 情况下更安全，因为 MySQL 进程的崩溃并不会丢失数据，只有在操作系统崩溃或者系统断电的情况下，上一秒钟所有事务数据才可能丢失。</strong></li>
</ul>
<p>参数性能与安全性的对比情况：</p>
<ul>
<li>数据安全性：参数 1 &gt; 参数 2 &gt; 参数 0</li>
<li>写入性能：参数 0 &gt; 参数 2&gt; 参数 1</li>
</ul>
<p>硬盘上存储的 redo log 日志文件不只一个，而是以一个日志文件组的形式出现的，每个的redo日志文件大小都是一样的。比如可以配置为一组4个文件，每个文件的大小是 1GB，整个 redo log 日志文件组可以记录4G的内容。它采用的是环形数组形式，从头开始写，写到末尾又回到头循环写，</p>
<p>在个日志文件组中还有两个重要的属性，分别是 <code>write pos</code>、<code>checkpoint</code></p>
<ul>
<li><code>write pos</code> 是当前记录的位置，一边写一边后移</li>
<li><code>checkpoint</code> 是当前要擦除的位置，也是往后推移</li>
</ul>
<p>每次刷盘 redo log 记录到日志文件组中，<code>write pos</code> 位置就会后移更新。每次 MySQL 加载日志文件组恢复数据时，会清空加载过的 redo log 记录，并把 <code>checkpoint</code> 后移更新。<code>write pos</code> 和 <code>checkpoint</code> 之间的还空着的部分可以用来写入新的 redo log 记录。</p>
<p>如果 <code>write pos</code> 追上 <code>checkpoint</code> ，表示日志文件组满了，这时候不能再写入新的 redo log 记录，MySQL 得停下来，清空一些记录，把 <code>checkpoint</code> 推进一下。</p>
<h3 id="BinLog"><a href="#BinLog" class="headerlink" title="BinLog"></a>BinLog</h3><ul>
<li>是 Server 层生成的日志，主要用于数据备份和主从复制；</li>
<li>MySQL 在完成一条更新操作后，Server 层还会生成一条 binlog，等之后事务提交的时候，会将该事物执行过程中产生的所有 binlog 统一写 入 binlog 文件。</li>
</ul>
<blockquote>
<p>redo log 和 binlog 有什么区别？</p>
</blockquote>
<p>这两个日志有四个区别。</p>
<p>1、适用对象不同：</p>
<ul>
<li>binlog 是 MySQL 的 Server 层实现的日志，所有存储引擎都可以使用；</li>
<li>redo log 是 Innodb 存储引擎实现的日志；</li>
</ul>
<p>2、文件格式不同：</p>
<ul>
<li>binlog 有 3 种格式类型，分别是 STATEMENT（默认格式）、ROW、 MIXED，区别如下：<ul>
<li>STATEMENT：每一条修改数据的 SQL 都会被记录到 binlog 中（相当于记录了逻辑操作，所以针对这种格式， binlog 可以称为逻辑日志），主从复制中 slave 端再根据 SQL 语句重现。但 STATEMENT 有动态函数的问题，比如你用了 uuid 或者 now 这些函数，你在主库上执行的结果并不是你在从库执行的结果，这种随时在变的函数会导致复制的数据不一致；</li>
<li>ROW：记录行数据最终被修改成什么样了（这种格式的日志，就不能称为逻辑日志了），不会出现 STATEMENT 下动态函数的问题。但 ROW 的缺点是每行数据的变化结果都会被记录，比如执行批量 update 语句，更新多少行数据就会产生多少条记录，使 binlog 文件过大，而在 STATEMENT 格式下只会记录一个 update 语句而已；</li>
<li>MIXED：包含了 STATEMENT 和 ROW 模式，它会根据不同的情况自动使用 ROW 模式和 STATEMENT 模式；</li>
</ul>
</li>
<li>redo log 是物理日志，记录的是在某个数据页做了什么修改，比如对 XXX 表空间中的 YYY 数据页 ZZZ 偏移量的地方做了AAA 更新；</li>
</ul>
<p>3、写入方式不同：</p>
<ul>
<li>binlog 是追加写，写满一个文件，就创建一个新的文件继续写，不会覆盖以前的日志，保存的是全量的日志。</li>
<li>redo log 是循环写，日志空间大小是固定，全部写满就从头开始，保存未被刷入磁盘的脏页日志。</li>
</ul>
<p>4、用途不同：</p>
<ul>
<li>binlog 用于备份恢复、主从复制；</li>
<li>redo log 用于掉电等故障恢复。</li>
</ul>
<blockquote>
<p>如果不小心整个数据库的数据被删除了，能使用 redo log 文件恢复数据吗？</p>
</blockquote>
<p>不可以使用 redo log 文件恢复，只能使用 binlog 文件恢复。</p>
<p>因为 redo log 文件是循环写，是会边写边擦除日志的，只记录未被刷入磁盘的数据的物理日志，已经刷入磁盘的数据都会从 redo log 文件里擦除。</p>
<p>binlog 文件保存的是全量的日志，也就是保存了所有数据变更的情况，理论上只要记录在 binlog 上的数据，都可以恢复，所以如果不小心整个数据库的数据被删除了，得用 binlog 文件恢复数据。</p>
<blockquote>
<p>主从复制是怎么实现？</p>
</blockquote>
<p><img src="/2024/02/24/MySQL核心要点：三大日志/主从复制过程.jpg" alt="主从复制过程"></p>
<p>MySQL 的主从复制依赖于 binlog ，也就是记录 MySQL 上的所有变化并以二进制形式保存在磁盘上。复制的过程就是将 binlog 中的数据从主库传输到从库上。</p>
<p>这个过程一般是异步的，也就是主库上执行事务操作的线程不会等待复制 binlog 的线程同步完成。</p>
<blockquote>
<p>binlog 什么时候刷盘？</p>
</blockquote>
<p>事务执行过程中，先把日志写到 binlog cache（Server 层的 cache），事务提交的时候，再把 binlog cache 写到 binlog 文件中。</p>
<p>一个事务的 binlog 是不能被拆开的，因此无论这个事务有多大（比如有很多条语句），也要保证一次性写入。这是因为有一个线程只能同时有一个事务在执行的设定，所以每当执行一个 begin/start transaction 的时候，就会默认提交上一个事务，这样如果一个事务的 binlog 被拆开的时候，在备库执行就会被当做多个事务分段自行，这样破坏了原子性，是有问题的。</p>
<p>MySQL 给每个线程分配了一片内存用于缓冲 binlog ，该内存叫 binlog cache，参数 binlog_cache_size 用于控制单个线程内 binlog cache 所占内存的大小。如果超过了这个参数规定的大小，就要暂存到磁盘。</p>
<blockquote>
<p>什么时候 binlog cache 会写到 binlog 文件？</p>
</blockquote>
<p>在事务提交的时候，执行器把 binlog cache 里的完整事务写入到 binlog 文件中，并清空 binlog cache。如下图：</p>
<p><img src="/2024/02/24/MySQL核心要点：三大日志/binlogcache.jpg" alt="binlogcache"></p>
<p>虽然每个线程有自己 binlog cache，但是最终都写到同一个 binlog 文件：</p>
<ul>
<li>图中的 write，指的就是指把日志写入到 binlog 文件，但是并没有把数据持久化到磁盘，因为数据还缓存在文件系统的 page cache 里，write 的写入速度还是比较快的，因为不涉及磁盘 I/O。</li>
<li><p>图中的 fsync，才是将数据持久化到磁盘的操作，这里就会涉及磁盘 I/O，所以频繁的 fsync 会导致磁盘的 I/O 升高。<br>MySQL提供一个 sync_binlog 参数来控制数据库的 binlog 刷到磁盘上的频率：</p>
</li>
<li><p>sync_binlog = 0 的时候，表示每次提交事务都只 write，不 fsync，后续交由操作系统决定何时将数据持久化到磁盘；</p>
</li>
<li>sync_binlog = 1 的时候，表示每次提交事务都会 write，然后马上执行 fsync；</li>
<li>sync_binlog =N(N&gt;1) 的时候，表示每次提交事务都 write，但累积 N 个事务后才 fsync。</li>
</ul>
<p>在MySQL中系统默认的设置是 sync_binlog = 0，也就是不做任何强制性的磁盘刷新指令，这时候的性能是最好的，但是风险也是最大的。因为一旦主机发生异常重启，还没持久化到磁盘的数据就会丢失。</p>
<p>而当 sync_binlog 设置为 1 的时候，是最安全但是性能损耗最大的设置。因为当设置为 1 的时候，即使主机发生异常重启，最多丢失一个事务的 binlog，而已经持久化到磁盘的数据就不会有影响，不过就是对写入性能影响太大。</p>
<p>如果能容少量事务的 binlog 日志丢失的风险，为了提高写入的性能，一般会 sync_binlog 设置为 100~1000 中的某个数值。</p>
<blockquote>
<p>Update语句的执行过程</p>
</blockquote>
<p>当优化器分析出成本最小的执行计划后，执行器就按照执行计划开始进行更新操作。</p>
<p>具体更新一条记录 <code>UPDATE t_user SET name = &#39;xl&#39; WHERE id = 1</code>; 的流程如下:</p>
<ul>
<li>执行器负责具体执行，会调用存储引擎的接口，通过主键索引树搜索获取 id = 1 这一行记录：<ul>
<li>如果 id=1 这一行所在的数据页本来就在 buffer pool 中，就直接返回给执行器更新；</li>
<li>如果记录不在 buffer pool，将数据页从磁盘读入到 buffer pool，返回记录给执行器。</li>
</ul>
</li>
<li>执行器得到聚簇索引记录后，会看一下更新前的记录和更新后的记录是否一样：<ul>
<li>如果一样的话就不进行后续更新流程；</li>
<li>如果不一样的话就把更新前的记录和更新后的记录都当作参数传给 InnoDB 层，让 InnoDB 真正的执行更新记录的操作；</li>
</ul>
</li>
<li>开启事务， InnoDB 层更新记录前，首先要记录相应的 undo log，因为这是更新操作，需要把被更新的列的旧值记下来，也就是要生成一条 undo log，undo log 会写入 Buffer Pool 中的 Undo 页面，不过在内存修改该 Undo 页面后，需要记录对应的 redo log。</li>
<li>InnoDB 层开始更新记录，会先更新内存（同时标记为脏页），然后将记录写到 redo log 里面，这个时候更新就算完成了。为了减少磁盘I/O，不会立即将脏页写入磁盘，后续由后台线程选择一个合适的时机将脏页写入到磁盘。这就是 WAL 技术，MySQL 的写操作并不是立刻写到磁盘上，而是先写 redo 日志，然后在合适的时间再将修改的行数据写到磁盘上。</li>
<li>至此，一条记录更新完了。</li>
<li>在一条更新语句执行完成后，然后开始记录该语句对应的 binlog，此时记录的 binlog 会被保存到 binlog cache，并没有刷新到硬盘上的 binlog 文件，在事务提交时才会统一将该事务运行过程中的所有 binlog 刷新到硬盘。</li>
<li>事务提交</li>
</ul>
<h4 id="两阶段提交"><a href="#两阶段提交" class="headerlink" title="两阶段提交"></a>两阶段提交</h4><p>如果在将 redo log 刷入到磁盘之后， MySQL 突然宕机了，而 binlog 还没有来得及写入。在主从架构中，binlog 会被复制到从库，由于 binlog 丢失了这条更新语句，从库的这一行 name 字段是旧值 jay，与主库的值不一致性；<br>如果在将 binlog 刷入到磁盘之后， MySQL 突然宕机了，而 redo log 还没有来得及写入。由于 redo log 还没写，崩溃恢复以后这个事务无效，在主从架构中，binlog 会被复制到从库，从库执行了这条更新语句，那么这一行 name 字段是新值 xiaolin，与主库的值不一致性；</p>
<p>MySQL 为了避免出现两份日志之间的逻辑不一致的问题，使用了「两阶段提交」来解决，两阶段提交把单个事务的提交拆分成了 2 个阶段，分别是「准备（Prepare）阶段」和「提交（Commit）阶段」。</p>
<p>事务的提交过程有两个阶段，就是将 redo log 的写入拆成了两个步骤：prepare 和 commit，中间再穿插写入binlog，具体如下：</p>
<ul>
<li><p>prepare 阶段：将 XID（内部 XA 事务的 ID） 写入到 redo log，同时将 redo log 对应的事务状态设置为 prepare，然后将 redo log 持久化到磁盘（innodb_flush_log_at_trx_commit = 1 的作用）；</p>
</li>
<li><p>commit 阶段：把 XID 写入到 binlog，然后将 binlog 持久化到磁盘（sync_binlog = 1 的作用），接着调用引擎的提交事务接口，将 redo log 状态设置为 commit，此时该状态并不需要持久化到磁盘，只需要 write 到文件系统的 page cache 中就够了，因为只要 binlog 写磁盘成功，就算 redo log 的状态还是 prepare 也没有关系，一样会被认为事务已经执行成功；</p>
</li>
</ul>
<p>MySQL 异常重启会出现什么现象？</p>
<p>在 MySQL 重启后会按顺序扫描 redo log 文件，碰到处于 prepare 状态的 redo log，就拿着 redo log 中的 XID 去 binlog 查看是否存在此 XID：</p>
<ul>
<li>如果 binlog 中没有当前内部 XA 事务的 XID，说明 redolog 完成刷盘，但是 binlog 还没有刷盘，则回滚事务。对应时刻 A 崩溃恢复的情况。</li>
<li>如果 binlog 中有当前内部 XA 事务的 XID，说明 redolog 和 binlog 都已经完成了刷盘，则提交事务。对应时刻 B 崩溃恢复的情况。</li>
</ul>
<p>可以看到，<strong>对于处于 prepare 阶段的 redo log，即可以提交事务，也可以回滚事务，这取决于是否能在 binlog 中查找到与 redo log 相同的 XID</strong>，如果有就提交事务，如果没有就回滚事务。这样就可以保证 redo log 和 binlog 这两份日志的一致性了。</p>
<p>所以说，<strong>两阶段提交是以 binlog 写成功为事务提交成功的标识</strong>，因为 binlog 写成功了，就意味着能在 binlog 中查找到与 redo log 相同的 XID。</p>
<h4 id="两阶段提交有什么问题？"><a href="#两阶段提交有什么问题？" class="headerlink" title="两阶段提交有什么问题？"></a>两阶段提交有什么问题？</h4><ul>
<li>磁盘 I/O 次数高：对于“双1”配置，每个事务提交都会进行两次 fsync（刷盘），一次是 redo log 刷盘，另一次是 binlog 刷盘。</li>
<li>锁竞争激烈：两阶段提交虽然能够保证「单事务」两个日志的内容一致，但在「多事务」的情况下，却不能保证两者的提交顺序一致，因此，在两阶段提交的流程基础上，还需要加一个锁来保证提交的原子性，从而保证多事务的情况下，两个日志的提交顺序一致。</li>
</ul>
<p>MySQL 引入了 binlog 组提交（group commit）机制，当有多个事务提交的时候，会将多个 binlog 刷盘操作合并成一个，从而减少磁盘 I/O 的次数，如果说 10 个事务依次排队刷盘的时间成本是 10，那么将这 10 个事务一次性一起刷盘的时间成本则近似于 1。</p>
<p>引入了组提交机制后，prepare 阶段不变，只针对 commit 阶段，将 commit 阶段拆分为三个过程：</p>
<ul>
<li>flush 阶段：多个事务按进入的顺序将 binlog 从 cache 写入文件（不刷盘）；</li>
<li>sync 阶段：对 binlog 文件做 fsync 操作（多个事务的 binlog 合并一次刷盘）；</li>
<li>commit 阶段：各个事务按顺序做 InnoDB commit 操作；</li>
</ul>
<p>上面的每个阶段都有一个队列，每个阶段有锁进行保护，因此保证了事务写入的顺序，第一个进入队列的事务会成为 leader，leader领导所在队列的所有事务，全权负责整队的操作，完成后通知队内其他事务操作结束。</p>
<blockquote>
<p>有 binlog 组提交，那有 redo log 组提交吗？</p>
</blockquote>
<p>这个要看 MySQL 版本，MySQL 5.6 没有 redo log 组提交，MySQL 5.7 有 redo log 组提交。</p>
<p>在 MySQL 5.6 的组提交逻辑中，每个事务各自执行 prepare 阶段，也就是各自将 redo log 刷盘，这样就没办法对 redo log 进行组提交。</p>
<p>所以在 MySQL 5.7 版本中，做了个改进，在 prepare 阶段不再让事务各自执行 redo log 刷盘操作，而是推迟到组提交的 flush 阶段，也就是说 prepare 阶段融合在了 flush 阶段。</p>
<p>这个优化是将 redo log 的刷盘延迟到了 flush 阶段之中，sync 阶段之前。通过延迟写 redo log 的方式，为 redolog 做了一次组写入，这样 binlog 和 redo log 都进行了优化。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;UnDoLog&quot;&gt;&lt;a href=&quot;#UnDoLog&quot; class=&quot;headerlink&quot; title=&quot;UnDoLog&quot;&gt;&lt;/a&gt;UnDoLog&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;是 Innodb 存储引擎层生成的日志，实现了事务中的原子性，主要用于事务回滚和 MVC
    
    </summary>
    
      <category term="DB" scheme="https://pingansheng.github.io/categories/DB/"/>
    
    
      <category term="DB" scheme="https://pingansheng.github.io/tags/DB/"/>
    
      <category term="MySQL性能优化" scheme="https://pingansheng.github.io/tags/MySQL%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Spring 代理的事务实现要点</title>
    <link href="https://pingansheng.github.io/2019/05/27/Spring-%E4%BB%A3%E7%90%86%E7%9A%84%E4%BA%8B%E5%8A%A1%E5%AE%9E%E7%8E%B0%E8%A6%81%E7%82%B9/"/>
    <id>https://pingansheng.github.io/2019/05/27/Spring-代理的事务实现要点/</id>
    <published>2019-05-27T06:41:47.000Z</published>
    <updated>2024-02-24T02:35:11.674Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Spring事务的实现要点"><a href="#Spring事务的实现要点" class="headerlink" title="Spring事务的实现要点"></a>Spring事务的实现要点</h2><h3 id="事务的开始"><a href="#事务的开始" class="headerlink" title="事务的开始"></a>事务的开始</h3><p>org.springframework.transaction.support.TransactionTemplate#execute</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line">	<span class="keyword">public</span> &lt;T&gt; <span class="function">T <span class="title">execute</span><span class="params">(TransactionCallback&lt;T&gt; action)</span> <span class="keyword">throws</span> TransactionException </span>&#123;</div><div class="line">		<span class="keyword">if</span> (<span class="keyword">this</span>.transactionManager <span class="keyword">instanceof</span> CallbackPreferringPlatformTransactionManager) &#123;</div><div class="line">			<span class="keyword">return</span> ((CallbackPreferringPlatformTransactionManager) <span class="keyword">this</span>.transactionManager).execute(<span class="keyword">this</span>, action);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> &#123;</div><div class="line">            <span class="comment">//关键点1：初始化事务状态对象，其中包含初始化事务的内容</span></div><div class="line">			TransactionStatus status = <span class="keyword">this</span>.transactionManager.getTransaction(<span class="keyword">this</span>);</div><div class="line">			T result;</div><div class="line">			<span class="keyword">try</span> &#123;</div><div class="line">				result = action.doInTransaction(status);</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">catch</span> (RuntimeException ex) &#123;</div><div class="line">				<span class="comment">// Transactional code threw application exception -&gt; rollback</span></div><div class="line">				rollbackOnException(status, ex);</div><div class="line">				<span class="keyword">throw</span> ex;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">catch</span> (Error err) &#123;</div><div class="line">				<span class="comment">// Transactional code threw error -&gt; rollback</span></div><div class="line">				rollbackOnException(status, err);</div><div class="line">				<span class="keyword">throw</span> err;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">catch</span> (Throwable ex) &#123;</div><div class="line">				<span class="comment">// Transactional code threw unexpected exception -&gt; rollback</span></div><div class="line">				rollbackOnException(status, ex);</div><div class="line">				<span class="keyword">throw</span> <span class="keyword">new</span> UndeclaredThrowableException(ex, <span class="string">"TransactionCallback threw undeclared checked exception"</span>);</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">this</span>.transactionManager.commit(status);</div><div class="line">			<span class="keyword">return</span> result;</div><div class="line">		&#125;</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<p>org.springframework.transaction.support.AbstractPlatformTransactionManager#getTransaction</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">final</span> TransactionStatus <span class="title">getTransaction</span><span class="params">(TransactionDefinition definition)</span> <span class="keyword">throws</span> TransactionException </span>&#123;</div><div class="line">		Object transaction = doGetTransaction();</div><div class="line"></div><div class="line">		<span class="comment">// Cache debug flag to avoid repeated checks.</span></div><div class="line">		<span class="keyword">boolean</span> debugEnabled = logger.isDebugEnabled();</div><div class="line"></div><div class="line">		<span class="keyword">if</span> (definition == <span class="keyword">null</span>) &#123;</div><div class="line">			<span class="comment">// Use defaults if no transaction definition given.</span></div><div class="line">			definition = <span class="keyword">new</span> DefaultTransactionDefinition();</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="keyword">if</span> (isExistingTransaction(transaction)) &#123;</div><div class="line">			<span class="comment">// Existing transaction found -&gt; check propagation behavior to find out how to behave.</span></div><div class="line">			<span class="keyword">return</span> handleExistingTransaction(definition, transaction, debugEnabled);</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="comment">// Check definition settings for new transaction.</span></div><div class="line">		<span class="keyword">if</span> (definition.getTimeout() &lt; TransactionDefinition.TIMEOUT_DEFAULT) &#123;</div><div class="line">			<span class="keyword">throw</span> <span class="keyword">new</span> InvalidTimeoutException(<span class="string">"Invalid transaction timeout"</span>, definition.getTimeout());</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="comment">// No existing transaction found -&gt; check propagation behavior to find out how to proceed.</span></div><div class="line">		<span class="keyword">if</span> (definition.getPropagationBehavior() == TransactionDefinition.PROPAGATION_MANDATORY) &#123;</div><div class="line">			<span class="keyword">throw</span> <span class="keyword">new</span> IllegalTransactionStateException(</div><div class="line">					<span class="string">"No existing transaction found for transaction marked with propagation 'mandatory'"</span>);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (definition.getPropagationBehavior() == TransactionDefinition.PROPAGATION_REQUIRED ||</div><div class="line">				definition.getPropagationBehavior() == TransactionDefinition.PROPAGATION_REQUIRES_NEW ||</div><div class="line">				definition.getPropagationBehavior() == TransactionDefinition.PROPAGATION_NESTED) &#123;</div><div class="line">			SuspendedResourcesHolder suspendedResources = suspend(<span class="keyword">null</span>);</div><div class="line">			<span class="keyword">if</span> (debugEnabled) &#123;</div><div class="line">				logger.debug(<span class="string">"Creating new transaction with name ["</span> + definition.getName() + <span class="string">"]: "</span> + definition);</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">try</span> &#123;</div><div class="line">				<span class="keyword">boolean</span> newSynchronization = (getTransactionSynchronization() != SYNCHRONIZATION_NEVER);</div><div class="line">				DefaultTransactionStatus status = newTransactionStatus(</div><div class="line">						definition, transaction, <span class="keyword">true</span>, newSynchronization, debugEnabled, suspendedResources);</div><div class="line">				<span class="comment">//关键点2：此处开始一个事务</span></div><div class="line">                doBegin(transaction, definition);</div><div class="line">				prepareSynchronization(status, definition);</div><div class="line">				<span class="keyword">return</span> status;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">catch</span> (RuntimeException ex) &#123;</div><div class="line">				resume(<span class="keyword">null</span>, suspendedResources);</div><div class="line">				<span class="keyword">throw</span> ex;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">catch</span> (Error err) &#123;</div><div class="line">				resume(<span class="keyword">null</span>, suspendedResources);</div><div class="line">				<span class="keyword">throw</span> err;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> &#123;</div><div class="line">			<span class="comment">// Create "empty" transaction: no actual transaction, but potentially synchronization.</span></div><div class="line">			<span class="keyword">if</span> (definition.getIsolationLevel() != TransactionDefinition.ISOLATION_DEFAULT &amp;&amp; logger.isWarnEnabled()) &#123;</div><div class="line">				logger.warn(<span class="string">"Custom isolation level specified but no actual transaction initiated; "</span> +</div><div class="line">						<span class="string">"isolation level will effectively be ignored: "</span> + definition);</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">boolean</span> newSynchronization = (getTransactionSynchronization() == SYNCHRONIZATION_ALWAYS);</div><div class="line">			<span class="keyword">return</span> prepareTransactionStatus(definition, <span class="keyword">null</span>, <span class="keyword">true</span>, newSynchronization, debugEnabled, <span class="keyword">null</span>);</div><div class="line">		&#125;</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<h3 id="事务的初始化数据库连接"><a href="#事务的初始化数据库连接" class="headerlink" title="事务的初始化数据库连接"></a>事务的初始化数据库连接</h3><p>org.springframework.jdbc.datasource.DataSourceTransactionManager#doBegin<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doBegin</span><span class="params">(Object transaction, TransactionDefinition definition)</span> </span>&#123;</div><div class="line">		DataSourceTransactionObject txObject = (DataSourceTransactionObject) transaction;</div><div class="line">		Connection con = <span class="keyword">null</span>;</div><div class="line"></div><div class="line">		<span class="keyword">try</span> &#123;</div><div class="line">			<span class="keyword">if</span> (!txObject.hasConnectionHolder() ||</div><div class="line">					txObject.getConnectionHolder().isSynchronizedWithTransaction()) &#123;</div><div class="line">                    <span class="comment">//当前事务中没有创建数据库连接则新创建一个</span></div><div class="line">				Connection newCon = <span class="keyword">this</span>.dataSource.getConnection();</div><div class="line">				<span class="keyword">if</span> (logger.isDebugEnabled()) &#123;</div><div class="line">					logger.debug(<span class="string">"Acquired Connection ["</span> + newCon + <span class="string">"] for JDBC transaction"</span>);</div><div class="line">				&#125;</div><div class="line">				txObject.setConnectionHolder(<span class="keyword">new</span> ConnectionHolder(newCon), <span class="keyword">true</span>);</div><div class="line">			&#125;</div><div class="line"></div><div class="line">            <span class="comment">//否则取已经存在的那一个</span></div><div class="line">			txObject.getConnectionHolder().setSynchronizedWithTransaction(<span class="keyword">true</span>);</div><div class="line">			con = txObject.getConnectionHolder().getConnection();</div><div class="line"></div><div class="line">			Integer previousIsolationLevel = DataSourceUtils.prepareConnectionForTransaction(con, definition);</div><div class="line">			txObject.setPreviousIsolationLevel(previousIsolationLevel);</div><div class="line"></div><div class="line">            <span class="comment">//此处手动将自动提交设置成false用于事务，JDBC标准新连接的自动提交默认是true</span></div><div class="line"></div><div class="line">			<span class="comment">// Switch to manual commit if necessary. This is very expensive in some JDBC drivers,</span></div><div class="line">			<span class="comment">// so we don't want to do it unnecessarily (for example if we've explicitly</span></div><div class="line">			<span class="comment">// configured the connection pool to set it already).</span></div><div class="line">			<span class="keyword">if</span> (con.getAutoCommit()) &#123;</div><div class="line">				txObject.setMustRestoreAutoCommit(<span class="keyword">true</span>);</div><div class="line">				<span class="keyword">if</span> (logger.isDebugEnabled()) &#123;</div><div class="line">					logger.debug(<span class="string">"Switching JDBC Connection ["</span> + con + <span class="string">"] to manual commit"</span>);</div><div class="line">				&#125;</div><div class="line">				con.setAutoCommit(<span class="keyword">false</span>);</div><div class="line">			&#125;</div><div class="line"></div><div class="line">			prepareTransactionalConnection(con, definition);</div><div class="line">			txObject.getConnectionHolder().setTransactionActive(<span class="keyword">true</span>);</div><div class="line"></div><div class="line">			<span class="keyword">int</span> timeout = determineTimeout(definition);</div><div class="line">			<span class="keyword">if</span> (timeout != TransactionDefinition.TIMEOUT_DEFAULT) &#123;</div><div class="line">				txObject.getConnectionHolder().setTimeoutInSeconds(timeout);</div><div class="line">			&#125;</div><div class="line"></div><div class="line">            <span class="comment">// 将当前的数据源对象和当前事务的conn链接等信息 和当前Thread绑定</span></div><div class="line">			<span class="comment">// Bind the connection holder to the thread.</span></div><div class="line">			<span class="keyword">if</span> (txObject.isNewConnectionHolder()) &#123;</div><div class="line">				TransactionSynchronizationManager.bindResource(getDataSource(), txObject.getConnectionHolder());</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="keyword">catch</span> (Throwable ex) &#123;</div><div class="line">			<span class="keyword">if</span> (txObject.isNewConnectionHolder()) &#123;</div><div class="line">				DataSourceUtils.releaseConnection(con, <span class="keyword">this</span>.dataSource);</div><div class="line">				txObject.setConnectionHolder(<span class="keyword">null</span>, <span class="keyword">false</span>);</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">throw</span> <span class="keyword">new</span> CannotCreateTransactionException(<span class="string">"Could not open JDBC Connection for transaction"</span>, ex);</div><div class="line">		&#125;</div><div class="line">	&#125;</div></pre></td></tr></table></figure></p>
<p>org.springframework.transaction.support.TransactionSynchronizationManager#bindResource<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">	 * Bind the given resource for the given key to the current thread.</div><div class="line">	 * <span class="doctag">@param</span> key the key to bind the value to (usually the resource factory)</div><div class="line">	 * <span class="doctag">@param</span> value the value to bind (usually the active resource object)</div><div class="line">	 * <span class="doctag">@throws</span> IllegalStateException if there is already a value bound to the thread</div><div class="line">	 * <span class="doctag">@see</span> ResourceTransactionManager#getResourceFactory()</div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bindResource</span><span class="params">(Object key, Object value)</span> <span class="keyword">throws</span> IllegalStateException </span>&#123;</div><div class="line">		Object actualKey = TransactionSynchronizationUtils.unwrapResourceIfNecessary(key);</div><div class="line">		Assert.notNull(value, <span class="string">"Value must not be null"</span>);</div><div class="line">		Map&lt;Object, Object&gt; map = resources.get();</div><div class="line">		<span class="comment">// set ThreadLocal Map if none found</span></div><div class="line">		<span class="keyword">if</span> (map == <span class="keyword">null</span>) &#123;</div><div class="line">			map = <span class="keyword">new</span> HashMap&lt;Object, Object&gt;();</div><div class="line">			resources.set(map);</div><div class="line">		&#125;</div><div class="line">		Object oldValue = map.put(actualKey, value);</div><div class="line">		<span class="comment">// Transparently suppress a ResourceHolder that was marked as void...</span></div><div class="line">		<span class="keyword">if</span> (oldValue <span class="keyword">instanceof</span> ResourceHolder &amp;&amp; ((ResourceHolder) oldValue).isVoid()) &#123;</div><div class="line">			oldValue = <span class="keyword">null</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span> (oldValue != <span class="keyword">null</span>) &#123;</div><div class="line">			<span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Already value ["</span> + oldValue + <span class="string">"] for key ["</span> +</div><div class="line">					actualKey + <span class="string">"] bound to thread ["</span> + Thread.currentThread().getName() + <span class="string">"]"</span>);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span> (logger.isTraceEnabled()) &#123;</div><div class="line">			logger.trace(<span class="string">"Bound value ["</span> + value + <span class="string">"] for key ["</span> + actualKey + <span class="string">"] to thread ["</span> +</div><div class="line">					Thread.currentThread().getName() + <span class="string">"]"</span>);</div><div class="line">		&#125;</div><div class="line">	&#125;</div></pre></td></tr></table></figure></p>
<h3 id="实际SQL的DAO处数据库连接获取"><a href="#实际SQL的DAO处数据库连接获取" class="headerlink" title="实际SQL的DAO处数据库连接获取"></a>实际SQL的DAO处数据库连接获取</h3><p>在事务的业务逻辑中，DAO的操作中最终会走到：Executor中，此时一般默认实现是：(mybatis)<br>org.apache.ibatis.executor.SimpleExecutor</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> *    Copyright 2009-2016 the original author or authors.</div><div class="line"> *</div><div class="line"> *    Licensed under the Apache License, Version 2.0 (the "License");</div><div class="line"> *    you may not use this file except in compliance with the License.</div><div class="line"> *    You may obtain a copy of the License at</div><div class="line"> *</div><div class="line"> *       http://www.apache.org/licenses/LICENSE-2.0</div><div class="line"> *</div><div class="line"> *    Unless required by applicable law or agreed to in writing, software</div><div class="line"> *    distributed under the License is distributed on an "AS IS" BASIS,</div><div class="line"> *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</div><div class="line"> *    See the License for the specific language governing permissions and</div><div class="line"> *    limitations under the License.</div><div class="line"> */</div><div class="line"><span class="keyword">package</span> org.apache.ibatis.executor;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.apache.ibatis.cursor.Cursor;</div><div class="line"><span class="keyword">import</span> org.apache.ibatis.executor.statement.StatementHandler;</div><div class="line"><span class="keyword">import</span> org.apache.ibatis.logging.Log;</div><div class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.BoundSql;</div><div class="line"><span class="keyword">import</span> org.apache.ibatis.mapping.MappedStatement;</div><div class="line"><span class="keyword">import</span> org.apache.ibatis.session.Configuration;</div><div class="line"><span class="keyword">import</span> org.apache.ibatis.session.ResultHandler;</div><div class="line"><span class="keyword">import</span> org.apache.ibatis.session.RowBounds;</div><div class="line"><span class="keyword">import</span> org.apache.ibatis.transaction.Transaction;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.sql.Connection;</div><div class="line"><span class="keyword">import</span> java.sql.SQLException;</div><div class="line"><span class="keyword">import</span> java.sql.Statement;</div><div class="line"><span class="keyword">import</span> java.util.Collections;</div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * <span class="doctag">@author</span> Clinton Begin</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleExecutor</span> <span class="keyword">extends</span> <span class="title">BaseExecutor</span> </span>&#123;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="title">SimpleExecutor</span><span class="params">(Configuration configuration, Transaction transaction)</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>(configuration, transaction);</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="meta">@Override</span></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">doUpdate</span><span class="params">(MappedStatement ms, Object parameter)</span> <span class="keyword">throws</span> SQLException </span>&#123;</div><div class="line">    Statement stmt = <span class="keyword">null</span>;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">      Configuration configuration = ms.getConfiguration();</div><div class="line">      StatementHandler handler = configuration.newStatementHandler(<span class="keyword">this</span>, ms, parameter, RowBounds.DEFAULT, <span class="keyword">null</span>, <span class="keyword">null</span>);</div><div class="line">      stmt = prepareStatement(handler, ms.getStatementLog());</div><div class="line">      <span class="keyword">return</span> handler.update(stmt);</div><div class="line">    &#125; <span class="keyword">finally</span> &#123;</div><div class="line">      closeStatement(stmt);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="meta">@Override</span></div><div class="line">  <span class="keyword">public</span> &lt;E&gt; <span class="function">List&lt;E&gt; <span class="title">doQuery</span><span class="params">(MappedStatement ms, Object parameter, RowBounds rowBounds, ResultHandler resultHandler, BoundSql boundSql)</span> <span class="keyword">throws</span> SQLException </span>&#123;</div><div class="line">    Statement stmt = <span class="keyword">null</span>;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">      Configuration configuration = ms.getConfiguration();</div><div class="line">      StatementHandler handler = configuration.newStatementHandler(wrapper, ms, parameter, rowBounds, resultHandler, boundSql);</div><div class="line">      stmt = prepareStatement(handler, ms.getStatementLog());</div><div class="line">      <span class="keyword">return</span> handler.&lt;E&gt;query(stmt, resultHandler);</div><div class="line">    &#125; <span class="keyword">finally</span> &#123;</div><div class="line">      closeStatement(stmt);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="meta">@Override</span></div><div class="line">  <span class="keyword">protected</span> &lt;E&gt; <span class="function">Cursor&lt;E&gt; <span class="title">doQueryCursor</span><span class="params">(MappedStatement ms, Object parameter, RowBounds rowBounds, BoundSql boundSql)</span> <span class="keyword">throws</span> SQLException </span>&#123;</div><div class="line">    Configuration configuration = ms.getConfiguration();</div><div class="line">    StatementHandler handler = configuration.newStatementHandler(wrapper, ms, parameter, rowBounds, <span class="keyword">null</span>, boundSql);</div><div class="line">    Statement stmt = prepareStatement(handler, ms.getStatementLog());</div><div class="line">    <span class="keyword">return</span> handler.&lt;E&gt;queryCursor(stmt);</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="meta">@Override</span></div><div class="line">  <span class="function"><span class="keyword">public</span> List&lt;BatchResult&gt; <span class="title">doFlushStatements</span><span class="params">(<span class="keyword">boolean</span> isRollback)</span> <span class="keyword">throws</span> SQLException </span>&#123;</div><div class="line">    <span class="keyword">return</span> Collections.emptyList();</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">private</span> Statement <span class="title">prepareStatement</span><span class="params">(StatementHandler handler, Log statementLog)</span> <span class="keyword">throws</span> SQLException </span>&#123;</div><div class="line">    Statement stmt;</div><div class="line">    Connection connection = getConnection(statementLog);</div><div class="line">    stmt = handler.prepare(connection, transaction.getTimeout());</div><div class="line">    handler.parameterize(stmt);</div><div class="line">    <span class="keyword">return</span> stmt;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>在org.apache.ibatis.executor.SimpleExecutor#prepareStatement方法中会去拿当前的数据库连接<br>org.apache.ibatis.executor.BaseExecutor#getConnection<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">protected</span> Connection <span class="title">getConnection</span><span class="params">(Log statementLog)</span> <span class="keyword">throws</span> SQLException </span>&#123;</div><div class="line">  Connection connection = transaction.getConnection();</div><div class="line">  <span class="keyword">if</span> (statementLog.isDebugEnabled()) &#123;</div><div class="line">    <span class="keyword">return</span> ConnectionLogger.newInstance(connection, statementLog, queryStack);</div><div class="line">  &#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="keyword">return</span> connection;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>使用Spring框架管理的情况下默认transaction的实现是：<br>org.mybatis.spring.transaction.SpringManagedTransaction，其getConn的方法如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line">  * &#123;<span class="doctag">@inheritDoc</span>&#125;</div><div class="line">  */</div><div class="line"> <span class="meta">@Override</span></div><div class="line"> <span class="function"><span class="keyword">public</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</div><div class="line">   <span class="keyword">if</span> (<span class="keyword">this</span>.connection == <span class="keyword">null</span>) &#123;</div><div class="line">     openConnection();</div><div class="line">   &#125;</div><div class="line">   <span class="keyword">return</span> <span class="keyword">this</span>.connection;</div><div class="line"> &#125;</div><div class="line"></div><div class="line"> <span class="comment">/**</span></div><div class="line">  * Gets a connection from Spring transaction manager and discovers if this</div><div class="line">  * &#123;<span class="doctag">@code</span> Transaction&#125; should manage connection or let it to Spring.</div><div class="line">  * &lt;p&gt;</div><div class="line">  * It also reads autocommit setting because when using Spring Transaction MyBatis</div><div class="line">  * thinks that autocommit is always false and will always call commit/rollback</div><div class="line">  * so we need to no-op that calls.</div><div class="line">  */</div><div class="line"> <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">openConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</div><div class="line">   <span class="keyword">this</span>.connection = DataSourceUtils.getConnection(<span class="keyword">this</span>.dataSource);</div><div class="line">   <span class="keyword">this</span>.autoCommit = <span class="keyword">this</span>.connection.getAutoCommit();</div><div class="line">   <span class="keyword">this</span>.isConnectionTransactional = DataSourceUtils.isConnectionTransactional(<span class="keyword">this</span>.connection, <span class="keyword">this</span>.dataSource);</div><div class="line"></div><div class="line">   <span class="keyword">if</span> (LOGGER.isDebugEnabled()) &#123;</div><div class="line">     LOGGER.debug(</div><div class="line">         <span class="string">"JDBC Connection ["</span></div><div class="line">             + <span class="keyword">this</span>.connection</div><div class="line">             + <span class="string">"] will"</span></div><div class="line">             + (<span class="keyword">this</span>.isConnectionTransactional ? <span class="string">" "</span> : <span class="string">" not "</span>)</div><div class="line">             + <span class="string">"be managed by Spring"</span>);</div><div class="line">   &#125;</div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<p>最终导向了</p>
<ul>
<li>org.springframework.jdbc.datasource.DataSourceUtils#doGetConnection：<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">   ...</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">(DataSource dataSource)</span> <span class="keyword">throws</span> CannotGetJdbcConnectionException </span>&#123;</div><div class="line">	<span class="keyword">try</span> &#123;</div><div class="line">		<span class="keyword">return</span> doGetConnection(dataSource);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">catch</span> (SQLException ex) &#123;</div><div class="line">		<span class="keyword">throw</span> <span class="keyword">new</span> CannotGetJdbcConnectionException(<span class="string">"Could not get JDBC Connection"</span>, ex);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Actually obtain a JDBC Connection from the given DataSource.</div><div class="line"> * Same as &#123;<span class="doctag">@link</span> #getConnection&#125;, but throwing the original SQLException.</div><div class="line"> * &lt;p&gt;Is aware of a corresponding Connection bound to the current thread, for example</div><div class="line"> * when using &#123;<span class="doctag">@link</span> DataSourceTransactionManager&#125;. Will bind a Connection to the thread</div><div class="line"> * if transaction synchronization is active (e.g. if in a JTA transaction).</div><div class="line"> * &lt;p&gt;Directly accessed by &#123;<span class="doctag">@link</span> TransactionAwareDataSourceProxy&#125;.</div><div class="line"> * <span class="doctag">@param</span> dataSource the DataSource to obtain Connections from</div><div class="line"> * <span class="doctag">@return</span> a JDBC Connection from the given DataSource</div><div class="line"> * <span class="doctag">@throws</span> SQLException if thrown by JDBC methods</div><div class="line"> * <span class="doctag">@see</span> #doReleaseConnection</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">doGetConnection</span><span class="params">(DataSource dataSource)</span> <span class="keyword">throws</span> SQLException </span>&#123;</div><div class="line">	Assert.notNull(dataSource, <span class="string">"No DataSource specified"</span>);</div><div class="line"></div><div class="line">       <span class="comment">//注意此时会首先去TransactionSynchronizationManager中拿当前线程中是否已经有针对这个datasource的事务信息，如果有</span></div><div class="line">       <span class="comment">//则会返回其中的conn，而这个conn是在org.springframework.jdbc.datasource.DataSourceTransactionManager#doBegin中创建初始化的</span></div><div class="line">       <span class="comment">//所以，针对org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource实现的业务动态数据源，在事务处理时需要在事务模板的execute方法前进行</span></div><div class="line">       <span class="comment">//determineCurrentLookupKey，而不是在dao方法之前进行，因为此时如果dao在事务之中，在executor中执行sql时候拿到的数据源仍然是</span></div><div class="line">       <span class="comment">//org.springframework.jdbc.datasource.DataSourceTransactionManager#doBegin中获取的DB链接，而这两个的时刻的db路由key可能不一致导致错误</span></div><div class="line">	ConnectionHolder conHolder = (ConnectionHolder) TransactionSynchronizationManager.getResource(dataSource);</div><div class="line">	<span class="keyword">if</span> (conHolder != <span class="keyword">null</span> &amp;&amp; (conHolder.hasConnection() || conHolder.isSynchronizedWithTransaction())) &#123;</div><div class="line">		conHolder.requested();</div><div class="line">		<span class="keyword">if</span> (!conHolder.hasConnection()) &#123;</div><div class="line">			logger.debug(<span class="string">"Fetching resumed JDBC Connection from DataSource"</span>);</div><div class="line">			conHolder.setConnection(dataSource.getConnection());</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> conHolder.getConnection();</div><div class="line">	&#125;</div><div class="line">	<span class="comment">// Else we either got no holder or an empty thread-bound holder here.</span></div><div class="line"></div><div class="line">	logger.debug(<span class="string">"Fetching JDBC Connection from DataSource"</span>);</div><div class="line">	Connection con = dataSource.getConnection();</div><div class="line"></div><div class="line">	<span class="keyword">if</span> (TransactionSynchronizationManager.isSynchronizationActive()) &#123;</div><div class="line">		logger.debug(<span class="string">"Registering transaction synchronization for JDBC Connection"</span>);</div><div class="line">		<span class="comment">// Use same Connection for further JDBC actions within the transaction.</span></div><div class="line">		<span class="comment">// Thread-bound object will get removed by synchronization at transaction completion.</span></div><div class="line">		ConnectionHolder holderToUse = conHolder;</div><div class="line">		<span class="keyword">if</span> (holderToUse == <span class="keyword">null</span>) &#123;</div><div class="line">			holderToUse = <span class="keyword">new</span> ConnectionHolder(con);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> &#123;</div><div class="line">			holderToUse.setConnection(con);</div><div class="line">		&#125;</div><div class="line">		holderToUse.requested();</div><div class="line">		TransactionSynchronizationManager.registerSynchronization(</div><div class="line">				<span class="keyword">new</span> ConnectionSynchronization(holderToUse, dataSource));</div><div class="line">		holderToUse.setSynchronizedWithTransaction(<span class="keyword">true</span>);</div><div class="line">		<span class="keyword">if</span> (holderToUse != conHolder) &#123;</div><div class="line">			TransactionSynchronizationManager.bindResource(dataSource, holderToUse);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">return</span> con;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Spring事务的实现要点&quot;&gt;&lt;a href=&quot;#Spring事务的实现要点&quot; class=&quot;headerlink&quot; title=&quot;Spring事务的实现要点&quot;&gt;&lt;/a&gt;Spring事务的实现要点&lt;/h2&gt;&lt;h3 id=&quot;事务的开始&quot;&gt;&lt;a href=&quot;#事务的开
    
    </summary>
    
      <category term="Java" scheme="https://pingansheng.github.io/categories/Java/"/>
    
    
      <category term="Spring" scheme="https://pingansheng.github.io/tags/Spring/"/>
    
      <category term="事务" scheme="https://pingansheng.github.io/tags/%E4%BA%8B%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>Practice Tips</title>
    <link href="https://pingansheng.github.io/2018/07/22/Practice-Tips/"/>
    <id>https://pingansheng.github.io/2018/07/22/Practice-Tips/</id>
    <published>2018-07-22T07:02:26.000Z</published>
    <updated>2024-02-24T02:35:11.649Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Practice-Tips"><a href="#Practice-Tips" class="headerlink" title="Practice Tips"></a>Practice Tips</h1><ul>
<li>程序员修炼之道Tips集锦，时时细细领会</li>
</ul>
<p>1、关心你的技艺（Care about your craft）</p>
<p>2、思考你的工作（Think! About your work）</p>
<p>3、提供选择而不是借口（Provide options, Don’t make lame excuses）</p>
<p>4、不要容忍破窗户（Don’t live with broken windows）：实时重构，干掉低劣设计、错误决策、糟糕代码，发现一处干掉一处</p>
<p>5、做变化的催化剂（Be a catalyst for change）:让人们瞥见未来，人们就会聚集在你周围</p>
<p>6、记住大图景（Remember the big picture）:时刻观察周围发生的事情而不是你自己在做的事情</p>
<p>7、使质量称为需求问题（Make quality a requirements issue）：现实世界不会让我们制作出完美的产品尤其是不会出错的软件：时间、技术和急躁都在合谋反对我们，不要过度修饰和过度求精而损毁完好的程序，让你的代码凭借自己的质量站立一会，它也许不完美，but don’t worry, 它不可能完美~</p>
<p>8、定期为你的知识资产投资（Invest regularly in your knowledge portfolio）</p>
<p>9、批判地分析你读到的和听到的（Critically analyze what you read and hear）</p>
<p>10、你说什么和你怎么说同样重要（It’s both what you say and the way you say it）</p>
<ul>
<li>知道你要说什么</li>
<li>了解你的听众</li>
<li>选择时机</li>
<li>选择风格</li>
<li>让文档美观</li>
<li>让听众参加</li>
<li>做倾听者</li>
<li>回复他人 </li>
</ul>
<p>11、不要重复你自己（DRY-Don’t Repeat Yourself）</p>
<p>12、让复用变得容易（Make It Easy to Reuse）</p>
<ul>
<li>如果不容易大家就不会去复用你的代码</li>
</ul>
<p>13、消除无关事物之间的影响（Eliminate Effects Between Unrelated Things）</p>
<ul>
<li>接触组件之间的耦合度</li>
<li>从设计、库、编码与测试方面提高系统组件之间的正交性</li>
</ul>
<p>14、不存在最终决策（There Are No Final Decisions）</p>
<ul>
<li>拥抱变化，组织上的亦或系统设计上的</li>
</ul>
<p>15、用曳光弹找到目标（Use Tracer Bullets to Find the Target）</p>
<ul>
<li>尽可能快的连接软件服务的端到端来快速发现问题与改进点</li>
<li>敏捷开发 迭代进行</li>
</ul>
<p>16、为了学习而制作原形（Prototype to Learn）</p>
<ul>
<li>可用来制作原形的内容：架构、新功能、外部数据的结构或内容、第三方工具或组件、性能问题、用户界面</li>
<li>系统建模的架构图就是一种架构建模</li>
</ul>
<p>17、靠近问题领域编程（Program Close to the Problem domain）</p>
<ul>
<li>用用户的语言去进行“设计”与“编码”（业务逻辑的伪代码描述）</li>
</ul>
<p>18、估算，以避免发生意外（Estimate to Avoid Surprise）</p>
<p>19、通过代码对进度表进行迭代（Iterate the Schedule with the Code）</p>
<ul>
<li>通过代码开发的实际进度与包含的功能来对进度表重新迭代</li>
</ul>
<p>20、用纯文本保存知识（Keep Knowledge in Plain Text）</p>
<ul>
<li>获得自描述的数据流</li>
</ul>
<p>21、利用命令Shell的力量（Use the Power of Command Shells）</p>
<p>22、用好一种编辑器（Use a Single Editor Well）</p>
<p>23、总是使用源码控制（Always Use Source Code Control）</p>
<p>24、要修正问题，而不是发出指责（Fix the Problem, Not the Blame）</p>
<p>25、不要恐慌（Don’t Panic）</p>
<ul>
<li>人很容易恐慌，尤其是在最后期限的到来时或正在设法找到bug的原因</li>
<li>实际的故障离你观察的地方可能还有几步远，并且涉及到许多其他的相关事物，要总是设法找到问题的根源而不是问题的特定表现</li>
</ul>
<p>26、“Select”没有问题（“Select” Isn’t Broken）</p>
<ul>
<li>总是要先考虑自身的原因</li>
</ul>
<p>27、不要假定，要证明（Don’t Assume it - Prove It）</p>
<p>28、学习一种文本操纵语言（Learn a Text Manipulation Language）</p>
<p>29、编写能编写代码的代码（Write Code That Writes Code）</p>
<ul>
<li>IDE处理</li>
</ul>
<p>30、你不可能写出完美的软件（You Can’t Write Perfect Software）</p>
<p>31、通过合约进行设计（Design with Contracts）</p>
<p>32、早崩溃（Crash Early）</p>
<ul>
<li>fail fast</li>
</ul>
<p>33、如果不可能发生，使用断言确保（If It Can’t Happen, Use Assertions to Ensure That It Won’t）</p>
<p>34、将异常用于异常的问题（Use Exceptions for Exceptional Problems）</p>
<p>35、要有始有终（Finish What You Start）</p>
<ul>
<li>获取资源的线程应该负责释放这个资源</li>
</ul>
<p>36、使得模块之间的耦合减至最少（Minimize Coupling Between Modules）</p>
<p>37、要配置，不要集成（Configure, Don’t Integrate）</p>
<ul>
<li>元数据编程</li>
</ul>
<p>38、抽象放入代码，细节放入元数据（Put Abstractions in Code, Details in Metadata）</p>
<p>39、分析工作流，以改善并发性（Analyze Workflow to Improve Concurrency）</p>
<p>40、用服务进行设计（Design Using Services）</p>
<p>41、总是为并发进行设计（Always Design for Concurrency）</p>
<ul>
<li>设计为并发模式，后续的部署等环节灵活性更大，不需要考虑单机多机对服务的影响</li>
</ul>
<p>42、使视图与模型分离（Separate Views from Models）</p>
<p>43、用黑板协调工作流（Use Blackboards to Coordinate Workflow）</p>
<p>44、不要靠巧合编程（Don’t Program by Coincidence）</p>
<p>45、估算算法的阶（Estimate the Order of Your Algorithms）</p>
<p>46、测试你的估算（Test Your Estimates）</p>
<p>47、早重构，常重构（Refactor Early, Refactor Often）</p>
<p>48、为测试而设计（Design for Test）</p>
<p>49、测试你的软件，否则你的用户就得测试（Test Your Software, or Your Users Will）</p>
<p>50、不要使用你不理解的向导代码（Don’t Use Wizard Code You Don’t Understand）</p>
<ul>
<li>代码生成器之类</li>
</ul>
<p>51、不要搜集需求–挖掘它们（Don’t Gather Requirements-Dig for them）</p>
<p>52、与用户一同工作，以像用户一样思考（Work with a User to Think Like a User）</p>
<ul>
<li>需求文档的一大风险是太具体，好的需求文档会保持抽象</li>
</ul>
<p>53、抽象比细节活的更长久（Abstractions Live Longer than Details）</p>
<p>54、使用项目词汇表（Use a Project Glossary）</p>
<p>55、不要在盒子外面思考-要找到盒子（Don’t Think Outside the Box - Find the Box）</p>
<p>56、倾听反复出现的疑虑-等你准备好再开始（Listen to Nagging Doubts - Start When You’re Ready）</p>
<ul>
<li>当面对一项任务时候，如果反复感到疑虑，或是体验到某种勉强，要注意它。给它时间，疑虑可能会结晶成某种更为坚实的东西。</li>
</ul>
<p>57、对有些事情“做”胜于“描述”（Some Things Are Better Done than Described）</p>
<p>58、不要做形式方法的奴隶（Don’t Be a Slave to Formal Methods）</p>
<p>59、昂贵的工具不一定能制作出更好的设计（Expensive Tools Do Not Produce Better Designs）</p>
<p>60、围绕功能组织团队（Organize Teams Around Functionality）</p>
<p>61、不要使用手工流程（Don’t Use Manual Procedures）</p>
<p>62、早测试，常测试，自动测试（Test Early. Test Often. Test Automatically）</p>
<p>63、要到通过全部测试，编码才算完成（Coding Ain’t Done ‘Til All the Tests Run）</p>
<p>64、通过“蓄意破坏”测试你的测试（Use Saboteurs to Test Your Testing）</p>
<p>65、测试状态覆盖，而不是代码覆盖（Test State Coverage, Not Code Coverage）</p>
<p>66、一个Bug只抓一次（Find Bugs Once）</p>
<p>67、把英语当作又一种编程语言（Treat English as Just Another Programming Language）</p>
<p>68、把文档建在里面，不要拴在外面（Build Documentation In, Don’t Bolt It On）</p>
<p>69、温和地超出用户期望（Gently Exceed Your User’s Expectations）</p>
<p>70、在你的作品上签名（Sign Your Work）</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Practice-Tips&quot;&gt;&lt;a href=&quot;#Practice-Tips&quot; class=&quot;headerlink&quot; title=&quot;Practice Tips&quot;&gt;&lt;/a&gt;Practice Tips&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;程序员修炼之道Tips集锦，时时细细领会
    
    </summary>
    
      <category term="公用基础" scheme="https://pingansheng.github.io/categories/%E5%85%AC%E7%94%A8%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="实践之路" scheme="https://pingansheng.github.io/tags/%E5%AE%9E%E8%B7%B5%E4%B9%8B%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>负载均衡的实现方式</title>
    <link href="https://pingansheng.github.io/2018/06/05/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F/"/>
    <id>https://pingansheng.github.io/2018/06/05/负载均衡的实现方式/</id>
    <published>2018-06-05T09:57:02.000Z</published>
    <updated>2024-02-24T02:35:11.623Z</updated>
    
    <content type="html"><![CDATA[<h1 id="总结下负载均衡的常用方案及适用场景"><a href="#总结下负载均衡的常用方案及适用场景" class="headerlink" title="总结下负载均衡的常用方案及适用场景"></a>总结下负载均衡的常用方案及适用场景</h1><h2 id="轮询调度"><a href="#轮询调度" class="headerlink" title="轮询调度"></a>轮询调度</h2><p>以轮询的方式依次请求调度不同的服务器；实现时，一般为服务器带上权重；这样有两个好处：</p>
<p>针对服务器的性能差异可分配不同的负载；<br>当需要将某个结点剔除时，只需要将其权重设置为0即可；<br>优点：实现简单、高效；易水平扩展；</p>
<p>缺点：请求到目的结点的不确定，造成其无法适用于有写的场景（缓存，数据库写）</p>
<p>应用场景：数据库或应用服务层中只有读的场景；</p>
<h2 id="随机方式"><a href="#随机方式" class="headerlink" title="随机方式"></a>随机方式</h2><p>请求随机分布到各个结点；在数据足够大的场景能达到一个均衡分布；</p>
<p>优点：实现简单、易水平扩展；</p>
<p>缺点：同Round Robin，无法用于有写的场景；</p>
<p>应用场景：数据库负载均衡，也是只有读的场景；</p>
<h2 id="哈希："><a href="#哈希：" class="headerlink" title="哈希："></a>哈希：</h2><p>根据key来计算需要落在的结点上，可以保证一个同一个键一定落在相同的服务器上；</p>
<p>优点：相同key一定落在同一个结点上，这样就可用于有写有读的缓存场景；</p>
<p>缺点：在某个结点故障后，会导致哈希键重新分布，造成命中率大幅度下降；</p>
<p>解决：一致性哈希 or 使用keepalived保证任何一个结点的高可用性，故障后会有其它结点顶上来；</p>
<p>应用场景：缓存，有读有写；</p>
<h2 id="一致性哈希："><a href="#一致性哈希：" class="headerlink" title="一致性哈希："></a>一致性哈希：</h2><p>在服务器一个结点出现故障时，受影响的只有这个结点上的key，最大程度的保证命中率；</p>
<p>如twemproxy中的ketama方案；</p>
<p>生产实现中还可以规划指定子key哈希，从而保证局部相似特征的键能分布在同一个服务器上；</p>
<p>优点：结点故障后命中率下降有限；</p>
<p>应用场景：缓存；</p>
<h2 id="根据键的范围来负载："><a href="#根据键的范围来负载：" class="headerlink" title="根据键的范围来负载："></a>根据键的范围来负载：</h2><p>根据键的范围来负载，前1亿个键都存放到第一个服务器，1~2亿在第二个结点；</p>
<p>优点：水平扩展容易，存储不够用时，加服务器存放后续新增数据；</p>
<p>缺点：负载不均；数据库的分布不均衡；（数据有冷热区分，一般最近注册的用户更加活跃，这样造成后续的服务器非常繁忙，而前期的结点空闲很多）</p>
<p>适用场景：数据库分片负载均衡；</p>
<h2 id="根据键对服务器结点数取模来负载："><a href="#根据键对服务器结点数取模来负载：" class="headerlink" title="根据键对服务器结点数取模来负载："></a>根据键对服务器结点数取模来负载：</h2><p>根据键对服务器结点数取模来负载；比如有4台服务器，key取模为0的落在第一个结点，1落在第二个结点上。</p>
<p>优点：数据冷热分布均衡，数据库结点负载均衡分布；</p>
<p>缺点：水平扩展较难；</p>
<p>适用场景：数据库分片负载均衡；</p>
<h2 id="纯动态结点负载均衡："><a href="#纯动态结点负载均衡：" class="headerlink" title="纯动态结点负载均衡："></a>纯动态结点负载均衡：</h2><p>根据CPU、IO、网络的处理能力来决策接下来的请求如何调度；</p>
<p>优点：充分利用服务器的资源，保证个结点上负载处理均衡；</p>
<p>缺点：实现起来复杂，真实使用较少；</p>
<h2 id="不用主动负载均衡："><a href="#不用主动负载均衡：" class="headerlink" title="不用主动负载均衡："></a>不用主动负载均衡：</h2><p>使用消息队列转为异步模型，将负载均衡的问题消灭</p>
<p>负载均衡是一种推模型，一直向你发数据，那么，将所有的用户请求发到消息队列中，所有的下游结点谁空闲，谁上来取数据处理；转为拉模型之后，消息了负载的问题；</p>
<p>优点：通过消息队列的缓冲，保护后端系统，请求剧增时不会冲垮后端服务器；</p>
<p>水平扩展容易，加入新结点后，直接取queue即可；</p>
<p>缺点：不具有实时性；</p>
<p>应用场景：不需要实时返回的场景；</p>
<p>比如，12036下订单后，立刻返回提示信息：您的订单进去排队了…等处理完毕后，再异步通知；</p>
<p>转：<a href="https://www.cnblogs.com/data2value/p/6107653.html" target="_blank" rel="noopener">https://www.cnblogs.com/data2value/p/6107653.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;总结下负载均衡的常用方案及适用场景&quot;&gt;&lt;a href=&quot;#总结下负载均衡的常用方案及适用场景&quot; class=&quot;headerlink&quot; title=&quot;总结下负载均衡的常用方案及适用场景&quot;&gt;&lt;/a&gt;总结下负载均衡的常用方案及适用场景&lt;/h1&gt;&lt;h2 id=&quot;轮询调度&quot;
    
    </summary>
    
      <category term="分布式设计" scheme="https://pingansheng.github.io/categories/%E5%88%86%E5%B8%83%E5%BC%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="负载均衡" scheme="https://pingansheng.github.io/tags/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    
  </entry>
  
  <entry>
    <title>分布式锁的实现方式与对比</title>
    <link href="https://pingansheng.github.io/2018/06/05/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F%E4%B8%8E%E5%AF%B9%E6%AF%94/"/>
    <id>https://pingansheng.github.io/2018/06/05/分布式锁的实现方式与对比/</id>
    <published>2018-06-05T09:38:27.000Z</published>
    <updated>2024-02-24T02:35:11.598Z</updated>
    
    <content type="html"><![CDATA[<p>from: <a href="https://www.pomelolee.com/1787.html" target="_blank" rel="noopener">https://www.pomelolee.com/1787.html</a></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>随着互联网的发展，各种高并发、海量处理的场景越来越多。为了实现高可用、可扩展的系统，常常使用分布式，这样避免了单点故障和普通计算机cpu、内存等瓶颈。</p>
<p>但是分布式系统也带来了数据一致性的问题，比如用户抢购秒杀商品多台机器共同执行出现超卖等。有些同学容易将分布式锁与线程安全混淆，线程安全是指的线程间的协同。如果是多个进程间的协同需要用到分布式锁，本文总结了几种常见的分布式锁。</p>
<h2 id="基于数据库"><a href="#基于数据库" class="headerlink" title="基于数据库"></a>基于数据库</h2><h3 id="悲观锁—事务"><a href="#悲观锁—事务" class="headerlink" title="悲观锁—事务"></a>悲观锁—事务</h3><p>比如用户抢购秒杀商品的场景，多台机器都接收到了抢购的请求，可以将获取库存、判断有货、用户付款、扣减库存等多个数据库操作放到一个事务，这样当一台机器与数据库建立链接请求了抢购商品这个事务，另外的机器只能等这个机器将请求完成才能操作数据库。在实际应用场景中，常常库存与交易是两个独立的系统，这时的事务是一个分布式事务，需要用到两段式、三段式提交。</p>
<p>优点：是比较安全的一种实现方法。</p>
<p>缺点：在高并发的场景下开销是不能容忍的。容易出现数据库死锁等情况。</p>
<h3 id="乐观锁—基于版本号"><a href="#乐观锁—基于版本号" class="headerlink" title="乐观锁—基于版本号"></a>乐观锁—基于版本号</h3><p>乐观锁常常用于分布式系统对数据库某张特定表执行update操作。考虑线上选座的场景，用户A和B同时选择了某场次电影的一个座位，都去将座位的状态设置为已售。</p>
<p>设想这样的执行序列：<br>1、用户A判断该座位为未售状态；<br>2、用户B判断该座位为未售状态；<br>3、用户A执行update座位为已售；<br>4、用户B执行update座位为已售。</p>
<p>这样会出现同一个座位售出两次的情况，解决方案是在这张数据库表中增加一个版本号的字段。执行操作前读取当前数据库表中的版本号，在执行update语句时将版本号放在where语句中，如果更新了记录则说明成功，如果没有更新记录，则说明此次update失败。</p>
<p>加了乐观锁的执行序列：<br>1、用户A查询该座位，得到该座位是未售状态，版本号是5；<br>2、用户B查询该座位，得到该座位是未售状态，版本号是5；<br>3、用户A执行update语句将座位状态更新为已售，版本号更新为6；<br>4、用户B执行update语句时此时这个座位的记录版本号为6，没有版本号为5的这个座位的记录，执行失败。</p>
<p>优点：乐观锁的性能高于悲观锁，并不容易出现死锁。</p>
<p>缺点：乐观锁只能对一张表的数据进行加锁，如果是需要对多张表的数据操作加分布式锁，基于版本号的乐观锁是办不到的。</p>
<h2 id="基于memcached"><a href="#基于memcached" class="headerlink" title="基于memcached"></a>基于memcached</h2><p>memcached可以基于add命令加锁。memcached的add指令是指如果有这个key，add命令则失败，如果没有这个key，则add命令成功。并且memcached支持设置过期时间的add原子操作。并发add同一个key也只有一个会成功。</p>
<p>基于memcached的add指令加分布式锁的思路为：定义一个key为分布式锁的key，如果add一个带过期时间的key成功则执行相应的业务操作，执行完判断锁是否过期，如果锁过期则不删除锁，如果锁没过期则删除锁。带过期时间是防止出现机器宕机，一直不能释放锁。</p>
<p>很多人基于memcached实现的分布式锁没有判断锁是否过期，执行完相应的业务操作直接删除锁会出现以下问题。</p>
<p>设想这样的执行序列：<br>1、机器A成功add一个带过期时间的key；<br>2、机器A在执行业务操作时出现较长时间的停顿，比如出现了较长时间的GC pause；<br>3、机器A还未在较长的停顿中恢复出来，锁已经过期，机器B成功add一个带过期时间的锁；<br>4、此时机器A从较长的停顿中恢复出来，执行完相应业务操作，删除了机器Badd的锁；<br>5、此时机器B的业务操作是在没有锁保护的情况下执行的。</p>
<p>但是memcached并没有提供一个判断key是否存在的操作，需要依赖于加锁的时候的时钟与执行完业务操作的时钟相减获得执行时间，将执行时间与锁的过期时间进行对比。或者将锁key对应的value设置为当前时间加上过期时间的时钟，执行完相应的业务操作获取锁key的值与当前时钟进行对比。</p>
<p>注：过期时间一定要长于业务操作的执行时间。</p>
<p>优点：性能高于基于数据库的实现方式。</p>
<h2 id="基于redis"><a href="#基于redis" class="headerlink" title="基于redis"></a>基于redis</h2><p>redis提供了setNx原子操作。基于redis的分布式锁也是基于这个操作实现的，setNx是指如果有这个key就set失败，如果没有这个key则set成功，但是setNx不能设置超时时间。</p>
<p>基于redis组成的分布式锁解决方案为：<br>1、setNx一个锁key，相应的value为当前时间加上过期时间的时钟；<br>2、如果setNx成功，或者当前时钟大于此时key对应的时钟则加锁成功，否则加锁失败退出；<br>3、加锁成功执行相应的业务操作（处理共享数据源）；<br>4、释放锁时判断当前时钟是否小于锁key的value，如果当前时钟小于锁key对应的value则执行删除锁key的操作。</p>
<p>注：这对于单点的redis能很好地实现分布式锁，如果redis集群，会出现master宕机的情况。如果master宕机，此时锁key还没有同步到slave节点上，会出现机器B从新的master上获取到了一个重复的锁。</p>
<p>设想以下执行序列：<br>1、机器AsetNx了一个锁key，value为当前时间加上过期时间，master更新了锁key的值；<br>2、此时master宕机，选举出新的master，新的master正同步数据；<br>3、新的master不含锁key，机器BsetNx了一个锁key，value为当前时间加上过期时间；</p>
<p>这样机器A和机器B都获得了一个相同的锁；解决这个问题的办法可以在第3步进行优化，内存中存储了锁key的value，在执行访问共享数据源前再判断内存存储的锁key的value与此时redis中锁key的value是否相等如果相等则说明获得了锁，如果不相等则说明在之前有其他的机器修改了锁key，加锁失败。同时在第4步不仅仅判断当前时钟是否小于锁key的value，也可以进一步判断存储的value值与此时的value值是否相等，如果相等再进行删除。</p>
<p>此时的执行序列：<br>1、机器AsetNx了一个锁key，value为当前时间加上过期时间，master更新了锁key的值；<br>2、此时，master宕机，选举出新的master，新的master正同步数据；<br>3、机器BsetNx了一个锁key，value为此时的时间加上过期时间；<br>4、当机器A再次判断内存存储的锁与此时的锁key的值不一样时，机器A加锁失败；<br>5、当机器B再次判断内存存储的锁与此时的锁key的值一样，机器B加锁成功。</p>
<p>注：如果是为了效率而使用分布式锁，例如：部署多台定时作业的机器，在同一时间只希望一台机器执行一个定时作业，在这种场景下是允许偶尔的失败的，可以使用单点的redis分布式锁；如果是为了正确性而使用分布式锁，最好使用再次检查的redis分布式锁，再次检查的redis分布式锁虽然性能下降了，但是正确率更高。</p>
<h2 id="基于zookeeper"><a href="#基于zookeeper" class="headerlink" title="基于zookeeper"></a>基于zookeeper</h2><p>基于zookeeper的分布式锁大致思路为：<br>1、客户端尝试创建ephemeral类型的znode节点/lock；<br>2、如果客户端创建成功则加锁成功，可以执行访问共享数据源的操作，如果客户端创建失败，则证明有别的客户端加锁成功，此次加锁失败；<br>3、如果加锁成功当客户端执行完访问共享数据源的操作，则删除znode节点/lock。</p>
<p>基于zookeeper实现分布式锁不需要设置过期时间，因为ephemeral类型的节点，当客户端与zookeeper创建的session在一定时间（session的过期时间内）没有收到心跳，则认为session过期，会删除客户端创建的所有ephemeral节点。</p>
<p>但是这样会出现两个机器共同持有锁的情况。设想以下执行序列。<br>1、机器A创建了znode节点/lock；<br>2、机器A执行相应操作，进入了较长时间的GC pause；<br>3、机器A与zookeeper的session过期，相应的/lock节点被删除；<br>4、机器B创建了znode节点/lock；<br>5、机器A从较长的停顿中恢复；<br>6、此时机器A与机器B都认为自己获得了锁。</p>
<p>与基于redis的分布式锁，基于zookeeper的锁可以增加watch机制，当机器创建节点/lock失败的时候可以进入等待，当/lock节点被删除的时候zookeeper利用watch机制通知机器。但是这种增加watch机制的方式只能针对较小客户端集群，如果较多客户端集群都在等待/lock节点被删除，当/lock节点被删除时，zookeeper要通知较多机器，对zookeeper造成较大的性能影响。这就是所谓的羊群效应。</p>
<p>优化的大致思路为：<br>1、客户端调用创建名为“lock/number<em>lock</em>”类型为EPHEMERAL_SEQUENTIAL的节点；<br>2、客户端获取lock节点下所有的子节点；<br>3、判断自己是否是序号最小的节点的，如果是最小的节点则加锁成功，如果不是序号最小的节点，则在比自己小的并且最接近的节点注册监听；<br>4、当被关注的节点删除后，再次获取lock节点下的所有子节点，判断是否是最小序号，如果是最小序号则加锁成功；</p>
<p>优化后的思路，虽然能一定程度避免羊群效应，但是也不能避免两个机器共同持有锁的情况。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;from: &lt;a href=&quot;https://www.pomelolee.com/1787.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.pomelolee.com/1787.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言
    
    </summary>
    
      <category term="分布式设计" scheme="https://pingansheng.github.io/categories/%E5%88%86%E5%B8%83%E5%BC%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="分布式锁策略" scheme="https://pingansheng.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E7%AD%96%E7%95%A5/"/>
    
  </entry>
  
  <entry>
    <title>python3的100个实例005</title>
    <link href="https://pingansheng.github.io/2018/02/26/python3%E7%9A%84100%E4%B8%AA%E5%AE%9E%E4%BE%8B005/"/>
    <id>https://pingansheng.github.io/2018/02/26/python3的100个实例005/</id>
    <published>2018-02-26T10:04:46.000Z</published>
    <updated>2024-02-24T02:35:11.566Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python的100个实例005-与时间有关的一切"><a href="#python的100个实例005-与时间有关的一切" class="headerlink" title="python的100个实例005-与时间有关的一切"></a>python的100个实例005-与时间有关的一切</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Python有关时间的操作</span></div><div class="line"><span class="comment">#datetime是模块，datetime模块包含一个datetime类，</span></div><div class="line"><span class="comment"># 通过from datetime import datetime导入的是datetime这个类。</span></div><div class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime, timedelta, timezone</div><div class="line"></div><div class="line">print(datetime.now())</div><div class="line">mydate = datetime(<span class="number">2018</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">20</span>, <span class="number">00</span>)</div><div class="line">print(mydate)</div><div class="line"><span class="comment">#Python的timestamp是一个浮点数。如果有小数位，小数位表示毫秒数。</span></div><div class="line">print(mydate.timestamp())</div><div class="line"></div><div class="line">mytimeStamp = <span class="number">1519637291.0</span></div><div class="line">print(datetime.fromtimestamp(mytimeStamp)) <span class="comment">#localtime </span></div><div class="line">print(datetime.utcfromtimestamp(mytimeStamp)) <span class="comment">#utctime </span></div><div class="line"></div><div class="line">cday = datetime.strptime(<span class="string">'2015-6-1 18:19:59'</span>, <span class="string">'%Y-%m-%d %H:%M:%S'</span>)</div><div class="line"></div><div class="line">print(cday)</div><div class="line"></div><div class="line">print(datetime.now().strftime(<span class="string">'%a, %b %d %H:%M'</span>))</div><div class="line"></div><div class="line"><span class="comment"># 日期相加减 参数只有timedelta(days=0, seconds=0, microseconds=0, milliseconds=0, minutes=0, hours=0, weeks=0)</span></div><div class="line">date = datetime(<span class="number">2018</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">20</span>, <span class="number">00</span>)</div><div class="line">print(date + timedelta(hours=<span class="number">10</span>)) <span class="comment"># +10个小时</span></div><div class="line">print(date - timedelta(days=<span class="number">1</span>)) <span class="comment"># 减1天</span></div><div class="line">print(date + timedelta(days=<span class="number">1</span>, hours=<span class="number">2</span>)) <span class="comment"># 加1天2小时</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#转换时区</span></div><div class="line">tz_utc_8 = timezone(timedelta(hours=<span class="number">8</span>)) <span class="comment"># 创建时区UTC+8:00</span></div><div class="line">print(datetime.now().replace(tzinfo=tz_utc_8))</div><div class="line"></div><div class="line"><span class="comment">#获取一个时间正确的时区，并强制设置为该时区</span></div><div class="line">bj_dt = datetime.now().replace(tzinfo=tz_utc_8)</div><div class="line">print(<span class="string">"基准时区"</span>, bj_dt)</div><div class="line"></div><div class="line">bj_dt = bj_dt.astimezone(timezone(timedelta(hours=<span class="number">8</span>)))</div><div class="line">print(<span class="string">"北京时区"</span>, bj_dt)</div><div class="line"></div><div class="line">tokyo_dt = bj_dt.astimezone(timezone(timedelta(hours=<span class="number">9</span>)))</div><div class="line">print(<span class="string">"东京时区"</span>, tokyo_dt)</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;python的100个实例005-与时间有关的一切&quot;&gt;&lt;a href=&quot;#python的100个实例005-与时间有关的一切&quot; class=&quot;headerlink&quot; title=&quot;python的100个实例005-与时间有关的一切&quot;&gt;&lt;/a&gt;python的100个
    
    </summary>
    
      <category term="python" scheme="https://pingansheng.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://pingansheng.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>常用的的代码坏味道处理方式</title>
    <link href="https://pingansheng.github.io/2018/02/07/%E5%B8%B8%E7%94%A8%E7%9A%84%E7%9A%84%E4%BB%A3%E7%A0%81%E5%9D%8F%E5%91%B3%E9%81%93%E5%A4%84%E7%90%86%E6%96%B9%E5%BC%8F/"/>
    <id>https://pingansheng.github.io/2018/02/07/常用的的代码坏味道处理方式/</id>
    <published>2018-02-07T09:50:20.000Z</published>
    <updated>2024-02-24T02:35:11.411Z</updated>
    
    <content type="html"><![CDATA[<h1 id="代码“坏味道”的处理"><a href="#代码“坏味道”的处理" class="headerlink" title="代码“坏味道”的处理"></a>代码“坏味道”的处理</h1><p><img src="/2018/02/07/常用的的代码坏味道处理方式/handler.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;代码“坏味道”的处理&quot;&gt;&lt;a href=&quot;#代码“坏味道”的处理&quot; class=&quot;headerlink&quot; title=&quot;代码“坏味道”的处理&quot;&gt;&lt;/a&gt;代码“坏味道”的处理&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2018/02/07/常用的的代码坏味道处理方式/ha
    
    </summary>
    
      <category term="Java" scheme="https://pingansheng.github.io/categories/Java/"/>
    
    
      <category term="代码坏味道处理" scheme="https://pingansheng.github.io/tags/%E4%BB%A3%E7%A0%81%E5%9D%8F%E5%91%B3%E9%81%93%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>python3的100个实例004</title>
    <link href="https://pingansheng.github.io/2018/01/28/python3%E7%9A%84100%E4%B8%AA%E5%AE%9E%E4%BE%8B004/"/>
    <id>https://pingansheng.github.io/2018/01/28/python3的100个实例004/</id>
    <published>2018-01-28T10:22:28.000Z</published>
    <updated>2024-02-24T02:35:11.386Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python的100个实例004-获取系统信息"><a href="#python的100个实例004-获取系统信息" class="headerlink" title="python的100个实例004-获取系统信息"></a>python的100个实例004-获取系统信息</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> psutil</div><div class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</div><div class="line"></div><div class="line">print(<span class="string">"CPU逻辑核心数："</span>, psutil.cpu_count())  <span class="comment"># CPU逻辑数量</span></div><div class="line">print(<span class="string">"CPU时间分配："</span>, psutil.cpu_times())  <span class="comment"># CPU用户／系统／空闲时间</span></div><div class="line"></div><div class="line">print(<span class="string">"\n"</span>)</div><div class="line">print(<span class="string">"CPU使用率信息："</span>)</div><div class="line"><span class="comment"># 循环2次输出 cpu使用率</span></div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">2</span>):</div><div class="line">    print(datetime.now(), <span class="string">"CPU使用率"</span>, psutil.cpu_percent(interval=<span class="number">1</span>, percpu=<span class="keyword">True</span>))</div><div class="line"></div><div class="line">print(<span class="string">"\n"</span>)</div><div class="line">print(<span class="string">"内存信息："</span>, psutil.virtual_memory())</div><div class="line">print(<span class="string">"交换空间信息："</span>, psutil.swap_memory())</div><div class="line"></div><div class="line">print(<span class="string">"\n"</span>)</div><div class="line">print(<span class="string">"磁盘分区信息"</span>,  psutil.disk_partitions())</div><div class="line">print(<span class="string">"\n"</span>)</div><div class="line"><span class="keyword">for</span> par <span class="keyword">in</span> psutil.disk_partitions():</div><div class="line">    print(<span class="string">"分区: %s, 使用情况: %s"</span> %</div><div class="line">          (par.mountpoint, psutil.disk_usage(par.mountpoint)))</div><div class="line"></div><div class="line">print(<span class="string">"磁盘IO情况: "</span>, psutil.disk_io_counters())</div><div class="line"></div><div class="line">print(<span class="string">"\n"</span>)</div><div class="line">print(<span class="string">"网络IO情况: "</span>, psutil.net_io_counters())</div><div class="line">print(<span class="string">"\n"</span>)</div><div class="line">print(<span class="string">"网络接口情况: "</span>, psutil.net_if_addrs())</div><div class="line">print(<span class="string">"\n"</span>)</div><div class="line">print(<span class="string">"网络接口状态: "</span>, psutil.net_if_stats())</div><div class="line">print(<span class="string">"\n"</span>)</div><div class="line">print(<span class="string">"网络连接信息: "</span>)</div><div class="line"><span class="keyword">for</span> conn <span class="keyword">in</span> psutil.net_connections():</div><div class="line">    print(<span class="string">"pid=%d, status: %s, localNetInfo: %s, remoteNetInfo: %s"</span>  % (</div><div class="line">        conn.pid, conn.laddr, conn.raddr, conn.status))</div><div class="line">print(<span class="string">"\n"</span>)</div><div class="line"></div><div class="line">print(<span class="string">"所有进程ID:"</span>, psutil.pids())</div><div class="line"></div><div class="line">p = psutil.Process(<span class="number">17760</span>)</div><div class="line">print(<span class="string">"进程名称: "</span>, p.name())</div><div class="line">print(<span class="string">"进程exe路径:"</span>, p.exe())</div><div class="line">print(<span class="string">"进程工作目录:"</span>, p.cwd())</div><div class="line">print(<span class="string">"进程启动的命令行:"</span>, p.cmdline())</div><div class="line">print(<span class="string">"父进程ID:"</span>, p.ppid())</div><div class="line">print(<span class="string">"父进程:"</span>, p.parent())</div><div class="line">print(<span class="string">"子进程列表:"</span>, p.children())</div><div class="line">print(<span class="string">"进程状态:"</span>, p.status())</div><div class="line">print(<span class="string">"进程用户名:"</span>, p.username())</div><div class="line">print(<span class="string">"进程创建时间:"</span>, p.create_time())</div><div class="line"><span class="comment"># print("进程终端:", p.terminal())</span></div><div class="line">print(<span class="string">"进程使用的CPU时间:"</span>, p.cpu_times())</div><div class="line">print(<span class="string">"进程使用的内存:"</span>, p.memory_info())</div><div class="line">print(<span class="string">"进程打开的文件:"</span>, p.open_files())</div><div class="line">print(<span class="string">"进程相关网络连接:"</span>, p.connections())</div><div class="line">print(<span class="string">"进程的线程数量:"</span>, p.num_threads())</div><div class="line">print(<span class="string">"所有线程信息:"</span>, p.threads())</div><div class="line">print(<span class="string">"进程环境变量:"</span>, p.environ())</div><div class="line">print(<span class="string">"结束进程"</span>, p.terminate())</div></pre></td></tr></table></figure>
<p>output:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line">CPU逻辑核心数： 4</div><div class="line">CPU时间分配： scputimes(user=10930.375, system=7108.0, idle=102377.046875, interrupt=390.5625, dpc=324.125)</div><div class="line"></div><div class="line"></div><div class="line">CPU使用率信息：</div><div class="line">2018-01-28 00:21:45.278782 CPU使用率 [34.8, 18.8, 26.6, 23.4]</div><div class="line">2018-01-28 00:21:46.281749 CPU使用率 [36.2, 15.6, 23.4, 29.7]</div><div class="line"></div><div class="line"></div><div class="line">内存信息： svmem(total=10251116544, available=4278272000, percent=58.3, used=5972844544, free=4278272000)</div><div class="line">交换空间信息： sswap(total=12532817920, used=9507274752, free=3025543168, percent=75.9, sin=0, sout=0)</div><div class="line"></div><div class="line"></div><div class="line">磁盘分区信息 [sdiskpart(device=&apos;C:\\&apos;, mountpoint=&apos;C:\\&apos;, fstype=&apos;NTFS&apos;, opts=&apos;rw,fixed&apos;), sdiskpart(device=&apos;D:\\&apos;, mountpoint=&apos;D:\\&apos;, fstype=&apos;FAT32&apos;, opts=&apos;rw,fixed&apos;), sdiskpart(device=&apos;E:\\&apos;, mountpoint=&apos;E:\\&apos;, fstype=&apos;NTFS&apos;, opts=&apos;rw,fixed&apos;), sdiskpart(device=&apos;F:\\&apos;, mountpoint=&apos;F:\\&apos;, fstype=&apos;NTFS&apos;, opts=&apos;rw,fixed&apos;), sdiskpart(device=&apos;G:\\&apos;, mountpoint=&apos;G:\\&apos;, fstype=&apos;NTFS&apos;, opts=&apos;rw,fixed&apos;)]</div><div class="line"></div><div class="line"></div><div class="line">分区: C:\, 使用情况: sdiskusage(total=126590787584, used=89791541248, free=36799246336, percent=70.9)</div><div class="line">分区: D:\, 使用情况: sdiskusage(total=53664022528, used=25191579648, free=28472442880, percent=46.9)</div><div class="line">分区: E:\, 使用情况: sdiskusage(total=10735316992, used=5701107712, free=5034209280, percent=53.1)</div><div class="line">分区: F:\, 使用情况: sdiskusage(total=107374178304, used=67419734016, free=39954444288, percent=62.8)</div><div class="line">分区: G:\, 使用情况: sdiskusage(total=68251807744, used=40469872640, free=27781935104, percent=59.3)</div><div class="line">磁盘IO情况:  sdiskio(read_count=345740, write_count=419470, read_bytes=14608027136, write_bytes=9526425600, read_time=485, write_time=612)</div><div class="line"></div><div class="line"></div><div class="line">网络IO情况:  snetio(bytes_sent=2280626501, bytes_recv=1131084766, packets_sent=2080406, packets_recv=2057105, errin=0, errout=0, dropin=0, dropout=0)</div><div class="line"></div><div class="line"></div><div class="line">网络接口情况:  &#123;&apos;本地连接* 2&apos;: [snic(family=&lt;AddressFamily.AF_LINK: -1&gt;, address=&apos;xx-xxC2-xx-B6-AE-xx&apos;, netmask=None, broadcast=None, ptp=None), snic(family=&lt;AddressFamily.AF_INET: 2&gt;, address=&apos;xx.xx.xx.xx&apos;, netmask=&apos;xx.xx.0.0&apos;...</div><div class="line"></div><div class="line"></div><div class="line">网络接口状态:  &#123;&apos;以太网&apos;: snicstats(isup=True, duplex=&lt;NicDuplex.NIC_DUPLEX_FULL: 2&gt;, speed=100, mtu=1500), &apos;蓝牙网络连接&apos;: snicstats(isup=False, duplex=&lt;NicDuplex.NIC_DUPLEX_FULL: 2&gt;, speed=3, mtu=1500), &apos;以太网 2&apos;: snicstats(isup=False, duplex=&lt;NicDuplex.NIC_DUPLEX_FULL: 2&gt;, speed=10, mtu=1400), &apos;Loopback Pseudo-Interface 1&apos;: snicstats(isup=True, duplex=&lt;NicDuplex.NIC_DUPLEX_FULL: 2&gt;, speed=1073, mtu=1500), &apos;WLAN&apos;: snicstats(isup=False, duplex=&lt;NicDuplex.NIC_DUPLEX_FULL: 2&gt;, speed=300, mtu=1500), &apos;本地连接* 2&apos;: snicstats(isup=False, duplex=&lt;NicDuplex.NIC_DUPLEX_FULL: 2&gt;, speed=0, mtu=1500), &apos;Teredo Tunneling Pseudo-Interface&apos;: snicstats(isup=True, duplex=&lt;NicDuplex.NIC_DUPLEX_FULL: 2&gt;, speed=0, mtu=1472)&#125;</div><div class="line"></div><div class="line"></div><div class="line">网络连接信息: </div><div class="line">pid=3972, status: addr(ip=&apos;192.xx.1.xx&apos;, port=65361), localNetInfo: addr(ip=&apos;xx.215.xx.69&apos;, port=443), remoteNetInfo: CLOSE_WAIT</div><div class="line">pid=900, status: addr(ip=&apos;192.xx.1.xx&apos;, port=56517), localNetInfo: addr(ip=&apos;xx.43.xx.29&apos;, port=443), remoteNetInfo: CLOSE_WAIT</div><div class="line">...</div><div class="line"></div><div class="line"></div><div class="line">所有进程ID: [0, 4, 392, 560, 636, 644, 744,....]</div><div class="line">进程名称:  EXCEL.EXE</div><div class="line">进程exe路径: C:\Program Files (x86)\Microsoft Office\root\Office16\EXCEL.EXE</div><div class="line">进程工作目录: C:\Users\xx\Documents</div><div class="line">进程启动的命令行: [&apos;C:\\Program Files (x86)\\Microsoft Office\\root\\Office16\\EXCEL.EXE&apos;]</div><div class="line">父进程ID: 5800</div><div class="line">父进程: psutil.Process(pid=5800, name=&apos;QMStartMenuPanel64.exe&apos;, started=&apos;19:09:33&apos;)</div><div class="line">子进程列表: []</div><div class="line">进程状态: running</div><div class="line">进程用户名: xx\xx</div><div class="line">进程创建时间: 1517069903.0</div><div class="line">进程使用的CPU时间: pcputimes(user=9.6875, system=5.96875, children_user=0.0, children_system=0.0)</div><div class="line">进程使用的内存: pmem(rss=121597952, vms=70000640, num_page_faults=66660, peak_wset=167497728, wset=121597952, peak_paged_pool=1226464, paged_pool=1164456, peak_nonpaged_pool=181312, nonpaged_pool=68256, pagefile=70000640, peak_pagefile=125423616, private=70000640)</div><div class="line">进程打开的文件: [popenfile(path=&apos;C:\\Windows\\SysWOW64\\zh-CN\\crypt32.dll.mui&apos;, fd=-1), ...</div><div class="line">进程相关网络连接: []</div><div class="line">进程的线程数量: 30</div><div class="line">所有线程信息: [pthread(id=17520, user_time=2.765625, system_time=3.703125),...]</div><div class="line">进程环境变量: &#123;&apos;ALLUSERSPROFILE&apos;: &apos;C:\\ProgramData&apos;, &apos;APPDATA&apos;: ....</div><div class="line">结束进程 None</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;python的100个实例004-获取系统信息&quot;&gt;&lt;a href=&quot;#python的100个实例004-获取系统信息&quot; class=&quot;headerlink&quot; title=&quot;python的100个实例004-获取系统信息&quot;&gt;&lt;/a&gt;python的100个实例004-
    
    </summary>
    
      <category term="python" scheme="https://pingansheng.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://pingansheng.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python3的100个实例003</title>
    <link href="https://pingansheng.github.io/2018/01/25/python3%E7%9A%84100%E4%B8%AA%E5%AE%9E%E4%BE%8B003/"/>
    <id>https://pingansheng.github.io/2018/01/25/python3的100个实例003/</id>
    <published>2018-01-25T08:41:18.000Z</published>
    <updated>2024-02-24T02:35:11.358Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python的100个实例003-处理http请求"><a href="#python的100个实例003-处理http请求" class="headerlink" title="python的100个实例003-处理http请求"></a>python的100个实例003-处理http请求</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line">print(<span class="string">"*****************一般性Http请求*******************"</span>)</div><div class="line"><span class="comment"># http请求</span></div><div class="line">r = requests.get(<span class="string">'https://www.baidu.com/'</span>) </div><div class="line">print(<span class="string">'HttpStatus:%d'</span> %(r.status_code))</div><div class="line">print(<span class="string">'Encoding:%s'</span> %(r.encoding))</div><div class="line"></div><div class="line"><span class="comment"># 无论响应是文本还是二进制内容，我们都可以用content属性获得bytes对象：</span></div><div class="line">print(r.content)</div><div class="line">print(<span class="string">"*****************JSON获取*******************"</span>)</div><div class="line"><span class="comment"># 对于特定类型的响应，例如JSON，可以直接获取</span></div><div class="line">r = requests.get(<span class="string">'https://query.yahooapis.com/v1/public/yql?q=select%20*%20from%20weather.forecast%20where%20woeid%20%3D%202151330&amp;format=json'</span>)</div><div class="line">print(r.json())</div><div class="line"></div><div class="line"></div><div class="line">print(<span class="string">"*****************传入特殊请求头*****************"</span>)</div><div class="line">r = requests.get(<span class="string">'https://www.douban.com/'</span>, headers=&#123;<span class="string">'User-Agent'</span>: </div><div class="line"><span class="string">'Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit'</span>&#125;)</div><div class="line">print(r.text) <span class="comment"># 输出手机版的网页</span></div><div class="line"></div><div class="line"></div><div class="line">print(<span class="string">"*****************发送POST请求*****************"</span>)</div><div class="line">r = requests.post(<span class="string">'https://accounts.douban.com/login'</span>, </div><div class="line">data=&#123;<span class="string">'form_email'</span>: <span class="string">'abc@example.com'</span>, <span class="string">'form_password'</span>: <span class="string">'123456'</span>&#125;)</div><div class="line">print(r.text)</div><div class="line"></div><div class="line">print(<span class="string">"*****************发送JSON请求*****************"</span>)</div><div class="line">params = &#123;<span class="string">'key'</span>: <span class="string">'value'</span>&#125;</div><div class="line">cookieStr =  &#123;<span class="string">'JSESSIONID'</span>: <span class="string">'098'</span>&#125;</div><div class="line"><span class="comment"># 内部自动序列化为JSON</span></div><div class="line">r = requests.post(<span class="string">"url"</span>, json=params, cookies=cookieStr, timeout=<span class="number">5</span>) </div><div class="line">print(r.headers)</div><div class="line">activityInfo =r.json()</div><div class="line"><span class="comment"># 可直接获取对象属性</span></div><div class="line">print(activityInfo[<span class="string">'res_data'</span>][<span class="number">-1</span>][<span class="string">'name'</span>])</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;python的100个实例003-处理http请求&quot;&gt;&lt;a href=&quot;#python的100个实例003-处理http请求&quot; class=&quot;headerlink&quot; title=&quot;python的100个实例003-处理http请求&quot;&gt;&lt;/a&gt;python的100个
    
    </summary>
    
      <category term="python" scheme="https://pingansheng.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://pingansheng.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python3的100个实例002</title>
    <link href="https://pingansheng.github.io/2018/01/24/python3%E7%9A%84100%E4%B8%AA%E5%AE%9E%E4%BE%8B002/"/>
    <id>https://pingansheng.github.io/2018/01/24/python3的100个实例002/</id>
    <published>2018-01-24T11:39:45.000Z</published>
    <updated>2024-02-24T02:35:11.324Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python的100个实例002-读写CSV文件"><a href="#python的100个实例002-读写CSV文件" class="headerlink" title="python的100个实例002-读写CSV文件"></a>python的100个实例002-读写CSV文件</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> csv</div><div class="line"><span class="comment"># 打开文件</span></div><div class="line">TEST_FILE = <span class="string">"textFiles/csvTestFile.csv"</span></div><div class="line">print(<span class="string">"**********第一种方式"</span>)</div><div class="line"><span class="keyword">with</span> open(TEST_FILE) <span class="keyword">as</span> csvFile:</div><div class="line">    CSV_FILE = csv.reader(csvFile)</div><div class="line">    <span class="keyword">for</span> ROW <span class="keyword">in</span> CSV_FILE:</div><div class="line">        print(ROW)</div><div class="line"></div><div class="line">print(<span class="string">"**********第二种方式"</span>)</div><div class="line"></div><div class="line"><span class="comment"># 打开csv文件的函数</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">open_and_print</span><span class="params">(file_path)</span>:</span></div><div class="line">    <span class="keyword">with</span> open(file_path) <span class="keyword">as</span> csvFile:</div><div class="line">        <span class="comment"># MAP格式的内容，每一行都可以通过列名读取</span></div><div class="line">        dict_csv = csv.DictReader(csvFile)</div><div class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> dict_csv:</div><div class="line">            <span class="keyword">for</span> key, value <span class="keyword">in</span> row.items():</div><div class="line">                print(<span class="string">"%s:%s"</span> % (key,value), end=<span class="string">'\t\t\t'</span>)</div><div class="line">            print(<span class="string">""</span>)</div><div class="line">    <span class="keyword">return</span></div><div class="line">open_and_print(TEST_FILE)</div><div class="line"></div><div class="line">print(<span class="string">"**********写入CSV文件"</span>)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_csv</span><span class="params">(file_path, header, rows)</span>:</span>    </div><div class="line">    <span class="keyword">with</span> open(file_path, <span class="string">'w'</span>) <span class="keyword">as</span> f_to_save:</div><div class="line">        <span class="comment"># lineterminator='\n'指定行尾为换行结束，否则默认为两个换行结束</span></div><div class="line">        f_csv = csv.writer(f_to_save, lineterminator=<span class="string">'\n'</span>)</div><div class="line">        f_csv.writerow(headers)</div><div class="line">        f_csv.writerows(rows)</div><div class="line">    <span class="keyword">return</span></div><div class="line"></div><div class="line">headers = [<span class="string">'Symbol'</span>,<span class="string">'Price'</span>,<span class="string">'Date'</span>,<span class="string">'Time'</span>,<span class="string">'Change'</span>,<span class="string">'Volume'</span>]</div><div class="line">rows = [(<span class="string">'AA'</span>, <span class="number">39.48</span>, <span class="string">'6/11/2007'</span>, <span class="string">'9:36am'</span>, <span class="number">-0.18</span>, <span class="number">181800</span>),</div><div class="line">        (<span class="string">'AIG'</span>, <span class="number">71.38</span>, <span class="string">'6/11/2007'</span>, <span class="string">'9:36am'</span>, <span class="number">-0.15</span>, <span class="number">195500</span>),</div><div class="line">        (<span class="string">'AXP'</span>, <span class="number">62.58</span>, <span class="string">'6/11/2007'</span>, <span class="string">'9:36am'</span>, <span class="number">-0.46</span>, <span class="number">935000</span>),</div><div class="line">       ]</div><div class="line">save_csv(<span class="string">'textFiles/stocks.csv'</span>, headers, rows)</div><div class="line">open_and_print(<span class="string">'textFiles/stocks.csv'</span>)</div></pre></td></tr></table></figure>
<p>output:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">[&apos;AA&apos;, &apos;39.48&apos;, &apos;6/11/2007&apos;, &apos;9:36am&apos;, &apos;-0.18&apos;, &apos;181800&apos;]</div><div class="line">[&apos;AIG&apos;, &apos;71.38&apos;, &apos;6/11/2007&apos;, &apos;9:36am&apos;, &apos;-0.15&apos;, &apos;195500&apos;]</div><div class="line">[&apos;AXP&apos;, &apos;62.58&apos;, &apos;6/11/2007&apos;, &apos;9:36am&apos;, &apos;-0.46&apos;, &apos;935000&apos;]</div><div class="line">[&apos;BA&apos;, &apos;98.31&apos;, &apos;6/11/2007&apos;, &apos;9:36am&apos;, &apos;+0.12&apos;, &apos;104800&apos;]</div><div class="line">[&apos;C&apos;, &apos;53.08&apos;, &apos;6/11/2007&apos;, &apos;9:36am&apos;, &apos;-0.25&apos;, &apos;360900&apos;]</div><div class="line">[&apos;CAT&apos;, &apos;78.29&apos;, &apos;6/11/2007&apos;, &apos;9:36am&apos;, &apos;-0.23&apos;, &apos;225400&apos;]</div><div class="line">**********第二种方式</div><div class="line">Symbol:AA			Price:39.48			Date:6/11/2007			Time:9:36am			Change:-0.18			Volume:181800			</div><div class="line">Symbol:AIG			Price:71.38			Date:6/11/2007			Time:9:36am			Change:-0.15			Volume:195500			</div><div class="line">Symbol:AXP			Price:62.58			Date:6/11/2007			Time:9:36am			Change:-0.46			Volume:935000			</div><div class="line">Symbol:BA			Price:98.31			Date:6/11/2007			Time:9:36am			Change:+0.12			Volume:104800			</div><div class="line">Symbol:C			Price:53.08			Date:6/11/2007			Time:9:36am			Change:-0.25			Volume:360900			</div><div class="line">Symbol:CAT			Price:78.29			Date:6/11/2007			Time:9:36am			Change:-0.23			Volume:225400			</div><div class="line">**********写入CSV文件</div><div class="line">Symbol:AA			Price:39.48			Date:6/11/2007			Time:9:36am			Change:-0.18			Volume:181800			</div><div class="line">Symbol:AIG			Price:71.38			Date:6/11/2007			Time:9:36am			Change:-0.15			Volume:195500			</div><div class="line">Symbol:AXP			Price:62.58			Date:6/11/2007			Time:9:36am</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;python的100个实例002-读写CSV文件&quot;&gt;&lt;a href=&quot;#python的100个实例002-读写CSV文件&quot; class=&quot;headerlink&quot; title=&quot;python的100个实例002-读写CSV文件&quot;&gt;&lt;/a&gt;python的100个实例0
    
    </summary>
    
      <category term="python" scheme="https://pingansheng.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://pingansheng.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python3的100个实例001</title>
    <link href="https://pingansheng.github.io/2018/01/24/python3%E7%9A%84100%E4%B8%AA%E5%AE%9E%E4%BE%8B001/"/>
    <id>https://pingansheng.github.io/2018/01/24/python3的100个实例001/</id>
    <published>2018-01-24T10:32:58.000Z</published>
    <updated>2024-02-24T02:35:11.296Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python的100个实例001"><a href="#python的100个实例001" class="headerlink" title="python的100个实例001"></a>python的100个实例001</h1><h2 id="本系列的推出旨在以简单实用的例子让大家快速上手python作为工作辅助语言"><a href="#本系列的推出旨在以简单实用的例子让大家快速上手python作为工作辅助语言" class="headerlink" title="本系列的推出旨在以简单实用的例子让大家快速上手python作为工作辅助语言"></a>本系列的推出旨在以简单实用的例子让大家快速上手python作为工作辅助语言</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 祭祖</span></div><div class="line">print(<span class="string">"Hello World!"</span>)</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;python的100个实例001&quot;&gt;&lt;a href=&quot;#python的100个实例001&quot; class=&quot;headerlink&quot; title=&quot;python的100个实例001&quot;&gt;&lt;/a&gt;python的100个实例001&lt;/h1&gt;&lt;h2 id=&quot;本系列的推出旨在以
    
    </summary>
    
      <category term="python" scheme="https://pingansheng.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://pingansheng.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>编码解码Tips</title>
    <link href="https://pingansheng.github.io/2018/01/09/%E7%BC%96%E7%A0%81%E8%A7%A3%E7%A0%81Tips/"/>
    <id>https://pingansheng.github.io/2018/01/09/编码解码Tips/</id>
    <published>2018-01-09T09:21:18.000Z</published>
    <updated>2024-02-24T02:35:11.270Z</updated>
    
    <content type="html"><![CDATA[<h1 id="编码与解码"><a href="#编码与解码" class="headerlink" title="编码与解码"></a>编码与解码</h1><ul>
<li>关于编码与解码的一些基础要点</li>
</ul>
<h2 id="编码与解码-1"><a href="#编码与解码-1" class="headerlink" title="编码与解码"></a>编码与解码</h2><ul>
<li>计算机中存储和传输的是二进制的序列流，最小的抽象单元是字节，即8个二进制位（1 byte = 8 bits）, 转换为10进制，就是一个0~255的数字</li>
<li>计算机中所有的文件数据都可以表示为0~255数字的一个数组，即字节数组</li>
<li>人类眼睛直观观察的是字符（char），而不是字节数组（愚蠢的人类），所以需要在需要的时候进行转换，比如网页浏览</li>
<li>转换的过程就是一个翻译映射的过程，对于计算机来说，这个过程就是字节数组映射到字符的过程，这个过程，就叫做<strong>编码</strong></li>
<li>翻译是需要一本字典的，不然如何知道新的语言（如何表示老的语言呢），所以就出现了各种编码的格式，每一种编码就是一种将字节数组转换成字符的规则函数<code>f(x)</code></li>
</ul>
<table>
<thead>
<tr>
<th>编码</th>
<th>包含字符数</th>
<th>每个字符需要的字节数</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII</td>
<td>128</td>
<td>1</td>
<td>—–</td>
</tr>
<tr>
<td>ISO-8859-1</td>
<td>256</td>
<td>1</td>
<td>扩展了ASCII, 兼容ASCII</td>
</tr>
<tr>
<td>GB2312</td>
<td>682个符号 6763个汉字</td>
<td>2</td>
<td>中文编码字节表</td>
</tr>
<tr>
<td>GBK</td>
<td>23940个码位 21003个汉字</td>
<td>2</td>
<td>汉字内码扩展规范，兼容了GB2312</td>
</tr>
<tr>
<td>UTF-16</td>
<td>23940个码位 21003个汉字</td>
<td>定长2字节</td>
<td>ISO指定的统一码，Java内存使用此编码表示Char</td>
</tr>
<tr>
<td>UTF-8</td>
<td>23940个码位 21003个汉字</td>
<td>变长1-6字节</td>
<td>ISO指定的统一码，Java内存使用此编码表示Char</td>
</tr>
</tbody>
</table>
<h2 id="Java-Web中的编解码"><a href="#Java-Web中的编解码" class="headerlink" title="Java Web中的编解码"></a>Java Web中的编解码</h2><ul>
<li>发送request请求需要编码，url、表单、header等信息均需要编码传送socket</li>
</ul>
<ol>
<li>URL的编解码</li>
</ol>
<ul>
<li>URL中的pathinfo与参数（?后面的内容）采用的编码方式不一样，Tomcat接收到这样的请求后，需要对URL进行解码，此时需要获取字符集，配置于Tomcat的Connector配置中，若没有则使用默认字符集进行解码</li>
<li>要避免在URL中使用非ASCII码字符</li>
</ul>
<ol>
<li>Header中的编解码</li>
</ol>
<ul>
<li>header中的字符解码Tomcat默认使用的iso-8859-1编码方式，在添加header时需要使用URLEncoder进行编码</li>
<li>不要再header中添加使用非ASCII码字符</li>
</ul>
<ol>
<li>Post表单请求的编解码</li>
</ol>
<ul>
<li>浏览器使用Content-Type中的字符集进行编码后发送请求</li>
<li>上传的文件，即multipart/form-data类型的数据，同样也是用Content-Type中的字符集进行编码，上传文件是以字节流的方式存储文件至临时目录，所以不存在编码问题，Spring MVC可以直接获取文件的流，推荐使用这种方式，省去了编解码的识别问题</li>
</ul>
<ol>
<li>http的response Body编解码</li>
</ol>
<ul>
<li>服务端可以设置response.setCharacterEncoding()来设置Content-Type，浏览器将以header中的Content-Type开解码数据，</li>
<li>如果没有设置，则浏览器以HTML中的Meta信息中的字符集进行解码，否则就是使用默认的字符集进行解码</li>
</ul>
<h2 id="几个常见的问题"><a href="#几个常见的问题" class="headerlink" title="几个常见的问题"></a>几个常见的问题</h2><ol>
<li>中文变成了看不懂的符号：使用了不一致的编解码字符集，如gbk编码-&gt;8859解码</li>
<li>汉字变成了问号：使用了不支持中文的字符集编码，如使用8859编码中文</li>
<li>一个汉字变2个问号：中文经过了多次编解码，如 gbk编码-&gt;8859解码-&gt;gbk编码-&gt;gbk解码</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;编码与解码&quot;&gt;&lt;a href=&quot;#编码与解码&quot; class=&quot;headerlink&quot; title=&quot;编码与解码&quot;&gt;&lt;/a&gt;编码与解码&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;关于编码与解码的一些基础要点&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;编码与解码-1&quot;&gt;&lt;a href=&quot;
    
    </summary>
    
      <category term="公用基础" scheme="https://pingansheng.github.io/categories/%E5%85%AC%E7%94%A8%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="编码解码" scheme="https://pingansheng.github.io/tags/%E7%BC%96%E7%A0%81%E8%A7%A3%E7%A0%81/"/>
    
      <category term="乱码" scheme="https://pingansheng.github.io/tags/%E4%B9%B1%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>chapter16-高级图形</title>
    <link href="https://pingansheng.github.io/2017/12/02/chapter16-%E9%AB%98%E7%BA%A7%E5%9B%BE%E5%BD%A2/"/>
    <id>https://pingansheng.github.io/2017/12/02/chapter16-高级图形/</id>
    <published>2017-12-02T02:38:16.000Z</published>
    <updated>2024-02-24T02:35:10.468Z</updated>
    
    <content type="html"><![CDATA[<h1 id="高级图形进阶"><a href="#高级图形进阶" class="headerlink" title="高级图形进阶"></a>高级图形进阶</h1><h2 id="1、lattice"><a href="#1、lattice" class="headerlink" title="1、lattice"></a>1、lattice</h2><p><img src="/2017/12/02/chapter16-高级图形/latticeFuns.png" alt=""><br><img src="/2017/12/02/chapter16-高级图形/latticeOptions.png" alt=""><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(lattice)</div><div class="line"><span class="comment"># Bass 男低音 </span></div><div class="line"><span class="comment"># Alto 女低音</span></div><div class="line"><span class="comment"># Soprano 女高音 </span></div><div class="line"><span class="comment"># Tenor 男高音</span></div><div class="line"></div><div class="line">histogram(~height|voice.part, data = singer, main=<span class="string">"合唱团身高和声部的分布"</span>, xlab=<span class="string">"身高（英尺）"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="/2017/12/02/chapter16-高级图形/height.png" alt=""><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#lattice包绘图的基本形式</span></div><div class="line"><span class="comment">#graph_function(formula, data = , options)</span></div><div class="line"></div><div class="line"><span class="keyword">library</span>(lattice)</div><div class="line"><span class="keyword">attach</span>(mtcars)</div><div class="line"></div><div class="line">gearPlot &lt;- factor(mtcars$gear, levels = c(<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>), </div><div class="line">               labels = c(<span class="string">"3 gears"</span>, <span class="string">"4 gears"</span>, <span class="string">"5 gears"</span>))</div><div class="line">plot(gearPlot)</div></pre></td></tr></table></figure></p>
<p><img src="/2017/12/02/chapter16-高级图形/gearPlot.png" alt=""><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cylPlot &lt;- factor(mtcars$cyl, levels = c(<span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>), </div><div class="line">              labels = c(<span class="string">"4 cylinders"</span>, <span class="string">"6 cylinders"</span>, <span class="string">"8 cylinders"</span>))</div><div class="line">plot(cylPlot)</div></pre></td></tr></table></figure></p>
<p><img src="/2017/12/02/chapter16-高级图形/cylPlot.png" alt=""><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">densityplot(~mpg, </div><div class="line">            main = <span class="string">"核密度图"</span>, xlab = <span class="string">"每加仑的英里数"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="/2017/12/02/chapter16-高级图形/核密度1.png" alt=""><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">densityplot(~mpg | cyl, </div><div class="line">            main = <span class="string">"各气缸的核密度图"</span>, </div><div class="line">            xlab = <span class="string">"每加仑的英里数"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="/2017/12/02/chapter16-高级图形/核密度2.png" alt=""><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">bwplot(cyl ~ mpg | gear, </div><div class="line">       main = <span class="string">"气缸和档数的箱线图"</span>, </div><div class="line">       xlab = <span class="string">"英里每加仑"</span>, ylab = <span class="string">"气缸数"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="/2017/12/02/chapter16-高级图形/box1.png" alt=""><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">xyplot(mpg ~ wt | cyl * gear, </div><div class="line">       main = <span class="string">"气缸和档数的散点图"</span>, </div><div class="line">       xlab = <span class="string">"车重"</span>, ylab = <span class="string">"英里每加仑"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="/2017/12/02/chapter16-高级图形/xy图.png" alt=""><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">dotplot(cyl ~ mpg | gear, </div><div class="line">        main = <span class="string">"气缸和档数的点图"</span>, </div><div class="line">        xlab = <span class="string">"Miles Per Gallon"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="/2017/12/02/chapter16-高级图形/点图.png" alt=""><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cloud(mpg ~ wt * qsec | cyl, </div><div class="line">      main = <span class="string">"各气缸的3D散点图"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="/2017/12/02/chapter16-高级图形/3d点图.png" alt=""><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">splom(mtcars[c(<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>)], </div><div class="line">      main = <span class="string">"散点矩阵图"</span>)</div><div class="line"></div><div class="line"><span class="keyword">detach</span>(mtcars)</div></pre></td></tr></table></figure></p>
<p><img src="/2017/12/02/chapter16-高级图形/散点矩阵.png" alt=""><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#修改图形</span></div><div class="line">myg &lt;-densityplot(~height | voice.part, data=singer)</div><div class="line"><span class="comment">#更新为红色的点，加粗的线，填充的点</span></div><div class="line">update(myg, col=<span class="string">"red"</span>, pch=<span class="number">16</span>, cex=<span class="number">.8</span>, lwd=<span class="number">2</span>)</div></pre></td></tr></table></figure></p>
<p><img src="/2017/12/02/chapter16-高级图形/update.png" alt=""></p>
<h3 id="1、条件变量"><a href="#1、条件变量" class="headerlink" title="1、条件变量"></a>1、条件变量</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 针对连续形变量先切割成瓦块可以作为条件变量进行分析</span></div><div class="line">displacement &lt;- equal.count(mtcars$disp, number = <span class="number">3</span>, </div><div class="line">                            overlap = <span class="number">0</span>)</div><div class="line">xyplot(mpg ~ wt | displacement, data = mtcars, </div><div class="line">       main = <span class="string">"不同排量的汽车车重与每加仑续航的散点图"</span>, </div><div class="line">       xlab = <span class="string">"车重"</span>, ylab = <span class="string">"每加仑英里"</span>, </div><div class="line">       layout = c(<span class="number">3</span>, <span class="number">1</span>), aspect = <span class="number">1.5</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/12/02/chapter16-高级图形/连续性条件变量.png" alt=""></p>
<h3 id="2、面板函数"><a href="#2、面板函数" class="headerlink" title="2、面板函数"></a>2、面板函数</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">displacement &lt;- equal.count(mtcars$disp, number = <span class="number">3</span>, </div><div class="line">                            overlap = <span class="number">0</span>)</div><div class="line"><span class="comment"># 自定义的面板函数，使用该函数进行图形绘制，添加轴须线，网格，回归线</span></div><div class="line">mypanel &lt;- <span class="keyword">function</span>(x, y) &#123;</div><div class="line">  panel.xyplot(x, y, pch = <span class="number">19</span>)</div><div class="line">  panel.rug(x, y)</div><div class="line">  panel.grid(h = -<span class="number">1</span>, v = -<span class="number">1</span>)</div><div class="line">  <span class="comment">#回归线</span></div><div class="line">  panel.lmline(x, y, col = <span class="string">"red"</span>, lwd = <span class="number">1</span>, lty = <span class="number">2</span>)</div><div class="line">&#125;</div><div class="line"></div><div class="line">xyplot(mpg ~ wt | displacement, data = mtcars, </div><div class="line">       layout = c(<span class="number">3</span>, <span class="number">1</span>), aspect = <span class="number">1.5</span>, </div><div class="line">       main = <span class="string">"不同排量的汽车车重与每加仑续航的散点图（自定义面板函数）"</span>, </div><div class="line">       xlab = <span class="string">"车重"</span>, ylab = <span class="string">"每加仑英里"</span>, panel = mypanel)</div></pre></td></tr></table></figure>
<p><img src="/2017/12/02/chapter16-高级图形/自定义面板函数.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 自定义的面板函数，使用该函数进行图形绘制，添加平均线，网格，平滑曲线</span></div><div class="line"><span class="keyword">library</span>(lattice)</div><div class="line">mtcars$transmission &lt;- factor(mtcars$am, </div><div class="line">                              levels = c(<span class="number">0</span>, <span class="number">1</span>), labels = c(<span class="string">"Automatic"</span>, <span class="string">"Manual"</span>))</div><div class="line"></div><div class="line">panel.smoother &lt;- <span class="keyword">function</span>(x, y) &#123;</div><div class="line">  panel.grid(h = -<span class="number">1</span>, v = -<span class="number">1</span>)</div><div class="line">  panel.xyplot(x, y)</div><div class="line">  panel.loess(x, y)</div><div class="line">  panel.abline(h = mean(y), lwd = <span class="number">2</span>, lty = <span class="number">2</span>, col = <span class="string">"green"</span>)</div><div class="line">&#125;</div><div class="line"></div><div class="line">xyplot(mpg ~ disp | transmission, data = mtcars, scales = list(cex = <span class="number">0.8</span>, </div><div class="line">                                                               col = <span class="string">"red"</span>), </div><div class="line">       panel = panel.smoother, </div><div class="line">       xlab = <span class="string">"排量"</span>, </div><div class="line">       ylab = <span class="string">"每加仑英里"</span>, </div><div class="line">       main = <span class="string">"不同变速箱类型的排量和每加仑续航散点图"</span>, </div><div class="line">       sub = <span class="string">"虚线表示组平均值"</span>, aspect = <span class="number">1</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/12/02/chapter16-高级图形/自定义面板函数2.png" alt=""></p>
<h3 id="3、分组变量，多个面板的数据合一"><a href="#3、分组变量，多个面板的数据合一" class="headerlink" title="3、分组变量，多个面板的数据合一"></a>3、分组变量，多个面板的数据合一</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(lattice)</div><div class="line">mtcars$transmission &lt;- factor(mtcars$am, levels = c(<span class="number">0</span>, <span class="number">1</span>), </div><div class="line">                              labels = c(<span class="string">"自动档"</span>, <span class="string">"手动档"</span>))</div><div class="line">densityplot(~mpg, data = mtcars, </div><div class="line">            group = transmission, </div><div class="line">            main = <span class="string">"不同变速箱类型的排量和每加仑续航"</span>, </div><div class="line">            xlab = <span class="string">"每加仑续航"</span>, </div><div class="line">            auto.key = <span class="literal">TRUE</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/12/02/chapter16-高级图形/分组变量1.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 自定义图例</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">library</span>(lattice)</div><div class="line">mtcars$transmission &lt;- factor(mtcars$am, levels = c(<span class="number">0</span>, <span class="number">1</span>), </div><div class="line">                              labels = c(<span class="string">"Automatic"</span>, <span class="string">"Manual"</span>))</div><div class="line"></div><div class="line">colors = c(<span class="string">"red"</span>, <span class="string">"blue"</span>)</div><div class="line">lines = c(<span class="number">1</span>, <span class="number">2</span>)</div><div class="line">points = c(<span class="number">16</span>, <span class="number">17</span>)</div><div class="line"></div><div class="line">key.trans &lt;- list(title = <span class="string">"传动方式"</span>, </div><div class="line">                  space = <span class="string">"bottom"</span>, columns = <span class="number">2</span>, </div><div class="line">                  text = list(levels(mtcars$transmission)), </div><div class="line">                  points = list(pch = points, col = colors), </div><div class="line">                  lines = list(col = colors, lty = lines), </div><div class="line">                  cex.title = <span class="number">1</span>, cex = <span class="number">0.9</span>)</div><div class="line"></div><div class="line">densityplot(~mpg, data = mtcars, </div><div class="line">            group = transmission, </div><div class="line">            main = <span class="string">"不同变速箱类型的排量和每加仑续航"</span>, </div><div class="line">            xlab = <span class="string">"每加仑续航"</span>, </div><div class="line">            pch = points, lty = lines, col = colors, </div><div class="line">            lwd = <span class="number">2</span>, jitter = <span class="number">0.005</span>, </div><div class="line">            key = key.trans)</div></pre></td></tr></table></figure>
<p><img src="/2017/12/02/chapter16-高级图形/分组变量自定义图例.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 复合使用-分组变量和条件变量</span></div><div class="line"><span class="keyword">library</span>(lattice)</div><div class="line">colors &lt;- <span class="string">"darkgreen"</span></div><div class="line">symbols &lt;- c(<span class="number">1</span>:<span class="number">12</span>)</div><div class="line">linetype &lt;- c(<span class="number">1</span>:<span class="number">3</span>)</div><div class="line"></div><div class="line">key.species &lt;- list(title = <span class="string">"植物"</span>, </div><div class="line">                    space = <span class="string">"right"</span>, </div><div class="line">                    text = list(levels(CO2$Plant)), </div><div class="line">                    points = list(pch = symbols, col = colors))</div><div class="line"></div><div class="line">xyplot(uptake ~ conc | Type * Treatment, data = CO2, </div><div class="line">       group = Plant, </div><div class="line">       type = <span class="string">"o"</span>, </div><div class="line">       pch = symbols, col = colors, lty = linetype, </div><div class="line">       main = <span class="string">"二氧化碳吸收率\n 在草本植物中"</span>, </div><div class="line">       ylab = expression(paste(<span class="string">"吸收率 "</span>, </div><div class="line">                               bgroup(<span class="string">"("</span>, italic(frac(<span class="string">"umol"</span>, <span class="string">"m"</span>^<span class="number">2</span>)), <span class="string">")"</span>))), </div><div class="line">       xlab = expression(paste(<span class="string">"浓度 "</span>, </div><div class="line">                               bgroup(<span class="string">"("</span>, italic(frac(mL, L)), <span class="string">")"</span>))), </div><div class="line">       sub = <span class="string">"草本植物种类: 稗草"</span>, </div><div class="line">       key = key.species)</div></pre></td></tr></table></figure>
<p><img src="/2017/12/02/chapter16-高级图形/plant.png" alt=""></p>
<h3 id="4、lattice的图形参数"><a href="#4、lattice的图形参数" class="headerlink" title="4、lattice的图形参数"></a>4、lattice的图形参数</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#通过trellis.par.get()函数来获取，并用trellis.par.set()函数来修改。</span></div><div class="line"><span class="comment">#show.settings()函数可展示当前的图形参数设置情况</span></div><div class="line">show.settings()</div><div class="line">mysettings &lt;- trellis.par.get()</div><div class="line">mysettings$superpose.symbol</div><div class="line">mysettings$superpose.symbol$pch &lt;- c(<span class="number">1</span>:<span class="number">10</span>)</div><div class="line">trellis.par.set(mysettings)</div><div class="line"><span class="comment">#此时lattice图形将对分组变量的第一个水平使用符号1（空心圆圈），第二个使用符号2（空心三角形），</span></div><div class="line"><span class="comment">#以此类推。</span></div><div class="line">show.settings()</div></pre></td></tr></table></figure>
<p><img src="/2017/12/02/chapter16-高级图形/setting.png" alt=""></p>
<h3 id="5、图形摆放"><a href="#5、图形摆放" class="headerlink" title="5、图形摆放"></a>5、图形摆放</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(lattice)</div><div class="line">graph1 &lt;- histogram(~height | voice.part, data = singer, </div><div class="line">                    main = <span class="string">"Heights of Choral Singers by Voice Part"</span>)</div><div class="line">graph2 &lt;- densityplot(~height, data = singer, group = voice.part, </div><div class="line">                      plot.points = <span class="literal">FALSE</span>, auto.key = list(columns = <span class="number">4</span>))</div><div class="line"><span class="comment">#第一个plot()函数把页面分割成一列两行的矩阵，并将图形放置到第一列、第一行中（自上往下、从左至右地计数）</span></div><div class="line">plot(graph1, split = c(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>))</div><div class="line"><span class="comment">#第二个plot()函数做同样的分割，但是把图形放置到第一列、第二行中</span></div><div class="line">plot(graph2, split = c(<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>), newpage = <span class="literal">FALSE</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/12/02/chapter16-高级图形/摆放1.png" alt=""><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(lattice)</div><div class="line">graph1 &lt;- histogram(~height | voice.part, data = singer, </div><div class="line">                    main = <span class="string">"Heights of Choral Singers by Voice Part"</span>)</div><div class="line">graph2 &lt;- densityplot(~height, data = singer, group = voice.part, </div><div class="line">                      plot.points = <span class="literal">FALSE</span>, auto.key = list(columns = <span class="number">4</span>))</div><div class="line"><span class="comment">#position = c(xmin, ymin, xmax, ymax)</span></div><div class="line">plot(graph1, position = c(<span class="number">0</span>, <span class="number">0.3</span>, <span class="number">1</span>, <span class="number">1</span>))</div><div class="line">plot(graph2, position = c(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0.3</span>), newpage = <span class="literal">FALSE</span>)</div></pre></td></tr></table></figure></p>
<p><img src="/2017/12/02/chapter16-高级图形/摆放2.png" alt=""></p>
<h2 id="2、ggplot2包"><a href="#2、ggplot2包" class="headerlink" title="2、ggplot2包"></a>2、ggplot2包</h2><p><img src="/2017/12/02/chapter16-高级图形/ggplot.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">##箱线散点图</span></div><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line">mtcars$cylinder &lt;- as.factor(mtcars$cyl)</div><div class="line">qplot(cylinder, mpg, data=mtcars, geom=c(<span class="string">"boxplot"</span>, <span class="string">"jitter"</span>),</div><div class="line">      fill=cylinder,</div><div class="line">      main=<span class="string">"叠加数据点的箱线图"</span>,</div><div class="line">      xlab= <span class="string">"气缸数"</span>,</div><div class="line">      ylab=<span class="string">"每加仑续航"</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/12/02/chapter16-高级图形/ggplot1.png" alt=""><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#回归图，并绘制了置信区间带</span></div><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line">transmission &lt;- factor(mtcars$am, levels = c(<span class="number">0</span>, <span class="number">1</span>), </div><div class="line">                       labels = c(<span class="string">"自动"</span>, <span class="string">"手动"</span>))</div><div class="line">qplot(wt, mpg, data = mtcars, </div><div class="line">      color = transmission, shape = transmission, </div><div class="line">      geom = c(<span class="string">"point"</span>, <span class="string">"smooth"</span>), </div><div class="line">      method = <span class="string">"lm"</span>, formula = y ~ x, </div><div class="line">      xlab = <span class="string">"车重"</span>,  ylab = <span class="string">"每加仑续航"</span>, </div><div class="line">      main = <span class="string">"回归示例"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="/2017/12/02/chapter16-高级图形/ggplot2.png" alt=""><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#栅栏图</span></div><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line">mtcars$cyl &lt;- factor(mtcars$cyl, levels = c(<span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>), </div><div class="line">                     labels = c(<span class="string">"4 cylinders"</span>, <span class="string">"6 cylinders"</span>, <span class="string">"8 cylinders"</span>))</div><div class="line">mtcars$am &lt;- factor(mtcars$am, levels = c(<span class="number">0</span>, <span class="number">1</span>), </div><div class="line">                    labels = c(<span class="string">"Automatic"</span>, <span class="string">"Manual"</span>))</div><div class="line">qplot(wt, mpg, data = mtcars, facets = am ~ cyl, size = hp)</div></pre></td></tr></table></figure></p>
<p><img src="/2017/12/02/chapter16-高级图形/ggplot3.png" alt=""><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(ggplot2)</div><div class="line">data(singer, package = <span class="string">"lattice"</span>)</div><div class="line">qplot(height, data = singer, geom = c(<span class="string">"density"</span>), </div><div class="line">      facets = voice.part ~ ., fill = voice.part)</div><div class="line"></div><div class="line"><span class="comment">#更多请关注 http://ggplot2.tidyverse.org</span></div></pre></td></tr></table></figure></p>
<p><img src="/2017/12/02/chapter16-高级图形/ggplot4.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;高级图形进阶&quot;&gt;&lt;a href=&quot;#高级图形进阶&quot; class=&quot;headerlink&quot; title=&quot;高级图形进阶&quot;&gt;&lt;/a&gt;高级图形进阶&lt;/h1&gt;&lt;h2 id=&quot;1、lattice&quot;&gt;&lt;a href=&quot;#1、lattice&quot; class=&quot;headerlink
    
    </summary>
    
      <category term="R语言" scheme="https://pingansheng.github.io/categories/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R语言" scheme="https://pingansheng.github.io/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="高级图形" scheme="https://pingansheng.github.io/tags/%E9%AB%98%E7%BA%A7%E5%9B%BE%E5%BD%A2/"/>
    
  </entry>
  
  <entry>
    <title>chapter15-有效的处理缺失值</title>
    <link href="https://pingansheng.github.io/2017/11/29/chapter15-%E6%9C%89%E6%95%88%E7%9A%84%E5%A4%84%E7%90%86%E7%BC%BA%E5%A4%B1%E5%80%BC/"/>
    <id>https://pingansheng.github.io/2017/11/29/chapter15-有效的处理缺失值/</id>
    <published>2017-11-29T12:28:03.000Z</published>
    <updated>2024-02-24T02:35:10.268Z</updated>
    
    <content type="html"><![CDATA[<h1 id="处理缺失数据的高级方法"><a href="#处理缺失数据的高级方法" class="headerlink" title="处理缺失数据的高级方法"></a>处理缺失数据的高级方法</h1><h2 id="1、步骤"><a href="#1、步骤" class="headerlink" title="1、步骤"></a>1、步骤</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">##缺失值的处理</span></div><div class="line">&gt; <span class="comment">#1、步骤</span></div><div class="line">&gt; <span class="comment">#(1) 识别缺失数据；</span></div><div class="line">&gt; <span class="comment">#(2) 检查导致数据缺失的原因；</span></div><div class="line">&gt; <span class="comment">#(3) 删除包含缺失值的实例或用合理的数值代替（插补）缺失值</span></div></pre></td></tr></table></figure>
<p><img src="/2017/11/29/chapter15-有效的处理缺失值/miss.png" alt=""></p>
<h2 id="2、识别"><a href="#2、识别" class="headerlink" title="2、识别"></a>2、识别</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#2、识别</span></div><div class="line">&gt; <span class="comment">#R使用NA（不可得）代表缺失值， NaN（不是一个数）代表不可能的值。另外，符号Inf和-Inf分别代表正无穷和负无穷。函数is.na()、</span></div><div class="line">&gt; <span class="comment">#is.nan()和is.infinite()可分别用来识别缺失值、不可能值和无穷值</span></div><div class="line">&gt; data(sleep, package=<span class="string">"VIM"</span>)</div><div class="line">&gt; <span class="comment">#列出完整值</span></div><div class="line">&gt; sleep[complete.cases(sleep),]</div><div class="line">    BodyWgt BrainWgt NonD Dream Sleep  Span  Gest Pred Exp Danger</div><div class="line"><span class="number">2</span>     <span class="number">1.000</span>     <span class="number">6.60</span>  <span class="number">6.3</span>   <span class="number">2.0</span>   <span class="number">8.3</span>   <span class="number">4.5</span>  <span class="number">42.0</span>    <span class="number">3</span>   <span class="number">1</span>      <span class="number">3</span></div><div class="line"><span class="number">5</span>  <span class="number">2547.000</span>  <span class="number">4603.00</span>  <span class="number">2.1</span>   <span class="number">1.8</span>   <span class="number">3.9</span>  <span class="number">69.0</span> <span class="number">624.0</span>    <span class="number">3</span>   <span class="number">5</span>      <span class="number">4</span></div><div class="line"><span class="number">6</span>    <span class="number">10.550</span>   <span class="number">179.50</span>  <span class="number">9.1</span>   <span class="number">0.7</span>   <span class="number">9.8</span>  <span class="number">27.0</span> <span class="number">180.0</span>    <span class="number">4</span>   <span class="number">4</span>      <span class="number">4</span></div><div class="line"><span class="number">7</span>     <span class="number">0.023</span>     <span class="number">0.30</span> <span class="number">15.8</span>   <span class="number">3.9</span>  <span class="number">19.7</span>  <span class="number">19.0</span>  <span class="number">35.0</span>    <span class="number">1</span>   <span class="number">1</span>      <span class="number">1</span></div><div class="line"><span class="number">8</span>   <span class="number">160.000</span>   <span class="number">169.00</span>  <span class="number">5.2</span>   <span class="number">1.0</span>   <span class="number">6.2</span>  <span class="number">30.4</span> <span class="number">392.0</span>    <span class="number">4</span>   <span class="number">5</span>      <span class="number">4</span></div><div class="line"><span class="number">9</span>     <span class="number">3.300</span>    <span class="number">25.60</span> <span class="number">10.9</span>   <span class="number">3.6</span>  <span class="number">14.5</span>  <span class="number">28.0</span>  <span class="number">63.0</span>    <span class="number">1</span>   <span class="number">2</span>      <span class="number">1</span></div><div class="line"><span class="number">10</span>   <span class="number">52.160</span>   <span class="number">440.00</span>  <span class="number">8.3</span>   <span class="number">1.4</span>   <span class="number">9.7</span>  <span class="number">50.0</span> <span class="number">230.0</span>    <span class="number">1</span>   <span class="number">1</span>      <span class="number">1</span></div><div class="line"><span class="number">11</span>    <span class="number">0.425</span>     <span class="number">6.40</span> <span class="number">11.0</span>   <span class="number">1.5</span>  <span class="number">12.5</span>   <span class="number">7.0</span> <span class="number">112.0</span>    <span class="number">5</span>   <span class="number">4</span>      <span class="number">4</span></div><div class="line"><span class="number">12</span>  <span class="number">465.000</span>   <span class="number">423.00</span>  <span class="number">3.2</span>   <span class="number">0.7</span>   <span class="number">3.9</span>  <span class="number">30.0</span> <span class="number">281.0</span>    <span class="number">5</span>   <span class="number">5</span>      <span class="number">5</span></div><div class="line"><span class="number">15</span>    <span class="number">0.075</span>     <span class="number">1.20</span>  <span class="number">6.3</span>   <span class="number">2.1</span>   <span class="number">8.4</span>   <span class="number">3.5</span>  <span class="number">42.0</span>    <span class="number">1</span>   <span class="number">1</span>      <span class="number">1</span></div><div class="line"><span class="number">16</span>    <span class="number">3.000</span>    <span class="number">25.00</span>  <span class="number">8.6</span>   <span class="number">0.0</span>   <span class="number">8.6</span>  <span class="number">50.0</span>  <span class="number">28.0</span>    <span class="number">2</span>   <span class="number">2</span>      <span class="number">2</span></div><div class="line"><span class="number">17</span>    <span class="number">0.785</span>     <span class="number">3.50</span>  <span class="number">6.6</span>   <span class="number">4.1</span>  <span class="number">10.7</span>   <span class="number">6.0</span>  <span class="number">42.0</span>    <span class="number">2</span>   <span class="number">2</span>      <span class="number">2</span></div><div class="line"><span class="number">18</span>    <span class="number">0.200</span>     <span class="number">5.00</span>  <span class="number">9.5</span>   <span class="number">1.2</span>  <span class="number">10.7</span>  <span class="number">10.4</span> <span class="number">120.0</span>    <span class="number">2</span>   <span class="number">2</span>      <span class="number">2</span></div><div class="line"><span class="number">22</span>   <span class="number">27.660</span>   <span class="number">115.00</span>  <span class="number">3.3</span>   <span class="number">0.5</span>   <span class="number">3.8</span>  <span class="number">20.0</span> <span class="number">148.0</span>    <span class="number">5</span>   <span class="number">5</span>      <span class="number">5</span></div><div class="line"><span class="number">23</span>    <span class="number">0.120</span>     <span class="number">1.00</span> <span class="number">11.0</span>   <span class="number">3.4</span>  <span class="number">14.4</span>   <span class="number">3.9</span>  <span class="number">16.0</span>    <span class="number">3</span>   <span class="number">1</span>      <span class="number">2</span></div><div class="line"><span class="number">25</span>   <span class="number">85.000</span>   <span class="number">325.00</span>  <span class="number">4.7</span>   <span class="number">1.5</span>   <span class="number">6.2</span>  <span class="number">41.0</span> <span class="number">310.0</span>    <span class="number">1</span>   <span class="number">3</span>      <span class="number">1</span></div><div class="line"><span class="number">27</span>    <span class="number">0.101</span>     <span class="number">4.00</span> <span class="number">10.4</span>   <span class="number">3.4</span>  <span class="number">13.8</span>   <span class="number">9.0</span>  <span class="number">28.0</span>    <span class="number">5</span>   <span class="number">1</span>      <span class="number">3</span></div><div class="line"><span class="number">28</span>    <span class="number">1.040</span>     <span class="number">5.50</span>  <span class="number">7.4</span>   <span class="number">0.8</span>   <span class="number">8.2</span>   <span class="number">7.6</span>  <span class="number">68.0</span>    <span class="number">5</span>   <span class="number">3</span>      <span class="number">4</span></div><div class="line"><span class="number">29</span>  <span class="number">521.000</span>   <span class="number">655.00</span>  <span class="number">2.1</span>   <span class="number">0.8</span>   <span class="number">2.9</span>  <span class="number">46.0</span> <span class="number">336.0</span>    <span class="number">5</span>   <span class="number">5</span>      <span class="number">5</span></div><div class="line"><span class="number">32</span>    <span class="number">0.005</span>     <span class="number">0.14</span>  <span class="number">7.7</span>   <span class="number">1.4</span>   <span class="number">9.1</span>   <span class="number">2.6</span>  <span class="number">21.5</span>    <span class="number">5</span>   <span class="number">2</span>      <span class="number">4</span></div><div class="line"><span class="number">33</span>    <span class="number">0.010</span>     <span class="number">0.25</span> <span class="number">17.9</span>   <span class="number">2.0</span>  <span class="number">19.9</span>  <span class="number">24.0</span>  <span class="number">50.0</span>    <span class="number">1</span>   <span class="number">1</span>      <span class="number">1</span></div><div class="line"><span class="number">34</span>   <span class="number">62.000</span>  <span class="number">1320.00</span>  <span class="number">6.1</span>   <span class="number">1.9</span>   <span class="number">8.0</span> <span class="number">100.0</span> <span class="number">267.0</span>    <span class="number">1</span>   <span class="number">1</span>      <span class="number">1</span></div><div class="line"><span class="number">37</span>    <span class="number">0.023</span>     <span class="number">0.40</span> <span class="number">11.9</span>   <span class="number">1.3</span>  <span class="number">13.2</span>   <span class="number">3.2</span>  <span class="number">19.0</span>    <span class="number">4</span>   <span class="number">1</span>      <span class="number">3</span></div><div class="line"><span class="number">38</span>    <span class="number">0.048</span>     <span class="number">0.33</span> <span class="number">10.8</span>   <span class="number">2.0</span>  <span class="number">12.8</span>   <span class="number">2.0</span>  <span class="number">30.0</span>    <span class="number">4</span>   <span class="number">1</span>      <span class="number">3</span></div><div class="line"><span class="number">39</span>    <span class="number">1.700</span>     <span class="number">6.30</span> <span class="number">13.8</span>   <span class="number">5.6</span>  <span class="number">19.4</span>   <span class="number">5.0</span>  <span class="number">12.0</span>    <span class="number">2</span>   <span class="number">1</span>      <span class="number">1</span></div><div class="line"><span class="number">40</span>    <span class="number">3.500</span>    <span class="number">10.80</span> <span class="number">14.3</span>   <span class="number">3.1</span>  <span class="number">17.4</span>   <span class="number">6.5</span> <span class="number">120.0</span>    <span class="number">2</span>   <span class="number">1</span>      <span class="number">1</span></div><div class="line"><span class="number">42</span>    <span class="number">0.480</span>    <span class="number">15.50</span> <span class="number">15.2</span>   <span class="number">1.8</span>  <span class="number">17.0</span>  <span class="number">12.0</span> <span class="number">140.0</span>    <span class="number">2</span>   <span class="number">2</span>      <span class="number">2</span></div><div class="line"><span class="number">43</span>   <span class="number">10.000</span>   <span class="number">115.00</span> <span class="number">10.0</span>   <span class="number">0.9</span>  <span class="number">10.9</span>  <span class="number">20.2</span> <span class="number">170.0</span>    <span class="number">4</span>   <span class="number">4</span>      <span class="number">4</span></div><div class="line"><span class="number">44</span>    <span class="number">1.620</span>    <span class="number">11.40</span> <span class="number">11.9</span>   <span class="number">1.8</span>  <span class="number">13.7</span>  <span class="number">13.0</span>  <span class="number">17.0</span>    <span class="number">2</span>   <span class="number">1</span>      <span class="number">2</span></div><div class="line"><span class="number">45</span>  <span class="number">192.000</span>   <span class="number">180.00</span>  <span class="number">6.5</span>   <span class="number">1.9</span>   <span class="number">8.4</span>  <span class="number">27.0</span> <span class="number">115.0</span>    <span class="number">4</span>   <span class="number">4</span>      <span class="number">4</span></div><div class="line"><span class="number">46</span>    <span class="number">2.500</span>    <span class="number">12.10</span>  <span class="number">7.5</span>   <span class="number">0.9</span>   <span class="number">8.4</span>  <span class="number">18.0</span>  <span class="number">31.0</span>    <span class="number">5</span>   <span class="number">5</span>      <span class="number">5</span></div><div class="line"><span class="number">48</span>    <span class="number">0.280</span>     <span class="number">1.90</span> <span class="number">10.6</span>   <span class="number">2.6</span>  <span class="number">13.2</span>   <span class="number">4.7</span>  <span class="number">21.0</span>    <span class="number">3</span>   <span class="number">1</span>      <span class="number">3</span></div><div class="line"><span class="number">49</span>    <span class="number">4.235</span>    <span class="number">50.40</span>  <span class="number">7.4</span>   <span class="number">2.4</span>   <span class="number">9.8</span>   <span class="number">9.8</span>  <span class="number">52.0</span>    <span class="number">1</span>   <span class="number">1</span>      <span class="number">1</span></div><div class="line"><span class="number">50</span>    <span class="number">6.800</span>   <span class="number">179.00</span>  <span class="number">8.4</span>   <span class="number">1.2</span>   <span class="number">9.6</span>  <span class="number">29.0</span> <span class="number">164.0</span>    <span class="number">2</span>   <span class="number">3</span>      <span class="number">2</span></div><div class="line"><span class="number">51</span>    <span class="number">0.750</span>    <span class="number">12.30</span>  <span class="number">5.7</span>   <span class="number">0.9</span>   <span class="number">6.6</span>   <span class="number">7.0</span> <span class="number">225.0</span>    <span class="number">2</span>   <span class="number">2</span>      <span class="number">2</span></div><div class="line"><span class="number">52</span>    <span class="number">3.600</span>    <span class="number">21.00</span>  <span class="number">4.9</span>   <span class="number">0.5</span>   <span class="number">5.4</span>   <span class="number">6.0</span> <span class="number">225.0</span>    <span class="number">3</span>   <span class="number">2</span>      <span class="number">3</span></div><div class="line"><span class="number">54</span>   <span class="number">55.500</span>   <span class="number">175.00</span>  <span class="number">3.2</span>   <span class="number">0.6</span>   <span class="number">3.8</span>  <span class="number">20.0</span> <span class="number">151.0</span>    <span class="number">5</span>   <span class="number">5</span>      <span class="number">5</span></div><div class="line"><span class="number">57</span>    <span class="number">0.900</span>     <span class="number">2.60</span> <span class="number">11.0</span>   <span class="number">2.3</span>  <span class="number">13.3</span>   <span class="number">4.5</span>  <span class="number">60.0</span>    <span class="number">2</span>   <span class="number">1</span>      <span class="number">2</span></div><div class="line"><span class="number">58</span>    <span class="number">2.000</span>    <span class="number">12.30</span>  <span class="number">4.9</span>   <span class="number">0.5</span>   <span class="number">5.4</span>   <span class="number">7.5</span> <span class="number">200.0</span>    <span class="number">3</span>   <span class="number">1</span>      <span class="number">3</span></div><div class="line"><span class="number">59</span>    <span class="number">0.104</span>     <span class="number">2.50</span> <span class="number">13.2</span>   <span class="number">2.6</span>  <span class="number">15.8</span>   <span class="number">2.3</span>  <span class="number">46.0</span>    <span class="number">3</span>   <span class="number">2</span>      <span class="number">2</span></div><div class="line"><span class="number">60</span>    <span class="number">4.190</span>    <span class="number">58.00</span>  <span class="number">9.7</span>   <span class="number">0.6</span>  <span class="number">10.3</span>  <span class="number">24.0</span> <span class="number">210.0</span>    <span class="number">4</span>   <span class="number">3</span>      <span class="number">4</span></div><div class="line"><span class="number">61</span>    <span class="number">3.500</span>     <span class="number">3.90</span> <span class="number">12.8</span>   <span class="number">6.6</span>  <span class="number">19.4</span>   <span class="number">3.0</span>  <span class="number">14.0</span>    <span class="number">2</span>   <span class="number">1</span>      <span class="number">1</span></div><div class="line">&gt; <span class="comment">#列出存在缺失值的行</span></div><div class="line">&gt; sleep[!complete.cases(sleep),]</div><div class="line">    BodyWgt BrainWgt NonD Dream Sleep Span Gest Pred Exp Danger</div><div class="line"><span class="number">1</span>  <span class="number">6654.000</span>   <span class="number">5712.0</span>   <span class="literal">NA</span>    <span class="literal">NA</span>   <span class="number">3.3</span> <span class="number">38.6</span>  <span class="number">645</span>    <span class="number">3</span>   <span class="number">5</span>      <span class="number">3</span></div><div class="line"><span class="number">3</span>     <span class="number">3.385</span>     <span class="number">44.5</span>   <span class="literal">NA</span>    <span class="literal">NA</span>  <span class="number">12.5</span> <span class="number">14.0</span>   <span class="number">60</span>    <span class="number">1</span>   <span class="number">1</span>      <span class="number">1</span></div><div class="line"><span class="number">4</span>     <span class="number">0.920</span>      <span class="number">5.7</span>   <span class="literal">NA</span>    <span class="literal">NA</span>  <span class="number">16.5</span>   <span class="literal">NA</span>   <span class="number">25</span>    <span class="number">5</span>   <span class="number">2</span>      <span class="number">3</span></div><div class="line"><span class="number">13</span>    <span class="number">0.550</span>      <span class="number">2.4</span>  <span class="number">7.6</span>   <span class="number">2.7</span>  <span class="number">10.3</span>   <span class="literal">NA</span>   <span class="literal">NA</span>    <span class="number">2</span>   <span class="number">1</span>      <span class="number">2</span></div><div class="line"><span class="number">14</span>  <span class="number">187.100</span>    <span class="number">419.0</span>   <span class="literal">NA</span>    <span class="literal">NA</span>   <span class="number">3.1</span> <span class="number">40.0</span>  <span class="number">365</span>    <span class="number">5</span>   <span class="number">5</span>      <span class="number">5</span></div><div class="line"><span class="number">19</span>    <span class="number">1.410</span>     <span class="number">17.5</span>  <span class="number">4.8</span>   <span class="number">1.3</span>   <span class="number">6.1</span> <span class="number">34.0</span>   <span class="literal">NA</span>    <span class="number">1</span>   <span class="number">2</span>      <span class="number">1</span></div><div class="line"><span class="number">20</span>   <span class="number">60.000</span>     <span class="number">81.0</span> <span class="number">12.0</span>   <span class="number">6.1</span>  <span class="number">18.1</span>  <span class="number">7.0</span>   <span class="literal">NA</span>    <span class="number">1</span>   <span class="number">1</span>      <span class="number">1</span></div><div class="line"><span class="number">21</span>  <span class="number">529.000</span>    <span class="number">680.0</span>   <span class="literal">NA</span>   <span class="number">0.3</span>    <span class="literal">NA</span> <span class="number">28.0</span>  <span class="number">400</span>    <span class="number">5</span>   <span class="number">5</span>      <span class="number">5</span></div><div class="line"><span class="number">24</span>  <span class="number">207.000</span>    <span class="number">406.0</span>   <span class="literal">NA</span>    <span class="literal">NA</span>  <span class="number">12.0</span> <span class="number">39.3</span>  <span class="number">252</span>    <span class="number">1</span>   <span class="number">4</span>      <span class="number">1</span></div><div class="line"><span class="number">26</span>   <span class="number">36.330</span>    <span class="number">119.5</span>   <span class="literal">NA</span>    <span class="literal">NA</span>  <span class="number">13.0</span> <span class="number">16.2</span>   <span class="number">63</span>    <span class="number">1</span>   <span class="number">1</span>      <span class="number">1</span></div><div class="line"><span class="number">30</span>  <span class="number">100.000</span>    <span class="number">157.0</span>   <span class="literal">NA</span>    <span class="literal">NA</span>  <span class="number">10.8</span> <span class="number">22.4</span>  <span class="number">100</span>    <span class="number">1</span>   <span class="number">1</span>      <span class="number">1</span></div><div class="line"><span class="number">31</span>   <span class="number">35.000</span>     <span class="number">56.0</span>   <span class="literal">NA</span>    <span class="literal">NA</span>    <span class="literal">NA</span> <span class="number">16.3</span>   <span class="number">33</span>    <span class="number">3</span>   <span class="number">5</span>      <span class="number">4</span></div><div class="line"><span class="number">35</span>    <span class="number">0.122</span>      <span class="number">3.0</span>  <span class="number">8.2</span>   <span class="number">2.4</span>  <span class="number">10.6</span>   <span class="literal">NA</span>   <span class="number">30</span>    <span class="number">2</span>   <span class="number">1</span>      <span class="number">1</span></div><div class="line"><span class="number">36</span>    <span class="number">1.350</span>      <span class="number">8.1</span>  <span class="number">8.4</span>   <span class="number">2.8</span>  <span class="number">11.2</span>   <span class="literal">NA</span>   <span class="number">45</span>    <span class="number">3</span>   <span class="number">1</span>      <span class="number">3</span></div><div class="line"><span class="number">41</span>  <span class="number">250.000</span>    <span class="number">490.0</span>   <span class="literal">NA</span>   <span class="number">1.0</span>    <span class="literal">NA</span> <span class="number">23.6</span>  <span class="number">440</span>    <span class="number">5</span>   <span class="number">5</span>      <span class="number">5</span></div><div class="line"><span class="number">47</span>    <span class="number">4.288</span>     <span class="number">39.2</span>   <span class="literal">NA</span>    <span class="literal">NA</span>  <span class="number">12.5</span> <span class="number">13.7</span>   <span class="number">63</span>    <span class="number">2</span>   <span class="number">2</span>      <span class="number">2</span></div><div class="line"><span class="number">53</span>   <span class="number">14.830</span>     <span class="number">98.2</span>   <span class="literal">NA</span>    <span class="literal">NA</span>   <span class="number">2.6</span> <span class="number">17.0</span>  <span class="number">150</span>    <span class="number">5</span>   <span class="number">5</span>      <span class="number">5</span></div><div class="line"><span class="number">55</span>    <span class="number">1.400</span>     <span class="number">12.5</span>   <span class="literal">NA</span>    <span class="literal">NA</span>  <span class="number">11.0</span> <span class="number">12.7</span>   <span class="number">90</span>    <span class="number">2</span>   <span class="number">2</span>      <span class="number">2</span></div><div class="line"><span class="number">56</span>    <span class="number">0.060</span>      <span class="number">1.0</span>  <span class="number">8.1</span>   <span class="number">2.2</span>  <span class="number">10.3</span>  <span class="number">3.5</span>   <span class="literal">NA</span>    <span class="number">3</span>   <span class="number">1</span>      <span class="number">2</span></div><div class="line"><span class="number">62</span>    <span class="number">4.050</span>     <span class="number">17.0</span>   <span class="literal">NA</span>    <span class="literal">NA</span>    <span class="literal">NA</span> <span class="number">13.0</span>   <span class="number">38</span>    <span class="number">3</span>   <span class="number">1</span>      <span class="number">1</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#缺失值的统计</span></div><div class="line">&gt; sum(is.na(sleep$Dream))</div><div class="line">[<span class="number">1</span>] <span class="number">12</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#缺失值的占比 is.na转换为布尔数组后计算true的数量（逻辑值TRUE和FALSE分别等价于数值1和0）</span></div><div class="line">&gt; mean(is.na(sleep$Dream))</div><div class="line">[<span class="number">1</span>] <span class="number">0.1935484</span></div><div class="line">&gt; <span class="comment">#计算存在缺失值的比例</span></div><div class="line">&gt; <span class="comment">#complete.cases()函数仅将NA和NaN识别为缺失值，无穷值（Inf和-Inf）被当做有效值</span></div><div class="line">&gt; mean(!complete.cases(sleep))</div><div class="line">[<span class="number">1</span>] <span class="number">0.3225806</span></div></pre></td></tr></table></figure>
<h2 id="3、探索缺失值模式"><a href="#3、探索缺失值模式" class="headerlink" title="3、探索缺失值模式"></a>3、探索缺失值模式</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#探索缺失值</span></div><div class="line">&gt; <span class="keyword">library</span>(mice)</div><div class="line">&gt; data(sleep, package=<span class="string">"VIM"</span>)</div><div class="line">&gt; <span class="comment">#表中1和0显示了缺失值模式， 0表示变量的列中有缺失值， 1则表示没有缺失值。</span></div><div class="line">&gt; <span class="comment">#左侧是这种模式的计数。比如第一行为全部没有缺失值的行数</span></div><div class="line">&gt; md.pattern(sleep)</div><div class="line">   BodyWgt BrainWgt Pred Exp Danger Sleep Span Gest Dream NonD   </div><div class="line"><span class="number">42</span>       <span class="number">1</span>        <span class="number">1</span>    <span class="number">1</span>   <span class="number">1</span>      <span class="number">1</span>     <span class="number">1</span>    <span class="number">1</span>    <span class="number">1</span>     <span class="number">1</span>    <span class="number">1</span>  <span class="number">0</span></div><div class="line"> <span class="number">2</span>       <span class="number">1</span>        <span class="number">1</span>    <span class="number">1</span>   <span class="number">1</span>      <span class="number">1</span>     <span class="number">1</span>    <span class="number">0</span>    <span class="number">1</span>     <span class="number">1</span>    <span class="number">1</span>  <span class="number">1</span></div><div class="line"> <span class="number">3</span>       <span class="number">1</span>        <span class="number">1</span>    <span class="number">1</span>   <span class="number">1</span>      <span class="number">1</span>     <span class="number">1</span>    <span class="number">1</span>    <span class="number">0</span>     <span class="number">1</span>    <span class="number">1</span>  <span class="number">1</span></div><div class="line"> <span class="number">9</span>       <span class="number">1</span>        <span class="number">1</span>    <span class="number">1</span>   <span class="number">1</span>      <span class="number">1</span>     <span class="number">1</span>    <span class="number">1</span>    <span class="number">1</span>     <span class="number">0</span>    <span class="number">0</span>  <span class="number">2</span></div><div class="line"> <span class="number">2</span>       <span class="number">1</span>        <span class="number">1</span>    <span class="number">1</span>   <span class="number">1</span>      <span class="number">1</span>     <span class="number">0</span>    <span class="number">1</span>    <span class="number">1</span>     <span class="number">1</span>    <span class="number">0</span>  <span class="number">2</span></div><div class="line"> <span class="number">1</span>       <span class="number">1</span>        <span class="number">1</span>    <span class="number">1</span>   <span class="number">1</span>      <span class="number">1</span>     <span class="number">1</span>    <span class="number">0</span>    <span class="number">0</span>     <span class="number">1</span>    <span class="number">1</span>  <span class="number">2</span></div><div class="line"> <span class="number">2</span>       <span class="number">1</span>        <span class="number">1</span>    <span class="number">1</span>   <span class="number">1</span>      <span class="number">1</span>     <span class="number">0</span>    <span class="number">1</span>    <span class="number">1</span>     <span class="number">0</span>    <span class="number">0</span>  <span class="number">3</span></div><div class="line"> <span class="number">1</span>       <span class="number">1</span>        <span class="number">1</span>    <span class="number">1</span>   <span class="number">1</span>      <span class="number">1</span>     <span class="number">1</span>    <span class="number">0</span>    <span class="number">1</span>     <span class="number">0</span>    <span class="number">0</span>  <span class="number">3</span></div><div class="line">         <span class="number">0</span>        <span class="number">0</span>    <span class="number">0</span>   <span class="number">0</span>      <span class="number">0</span>     <span class="number">4</span>    <span class="number">4</span>    <span class="number">4</span>    <span class="number">12</span>   <span class="number">14</span> <span class="number">38</span></div><div class="line">&gt; <span class="keyword">library</span>(VIM)</div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#图形方式展现缺失值的模式与数量</span></div><div class="line">&gt; aggr(sleep, prop=<span class="literal">FALSE</span>, numbers=<span class="literal">TRUE</span>)</div><div class="line">&gt; aggr(sleep, prop=<span class="literal">TRUE</span>, numbers=<span class="literal">TRUE</span>)</div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#相关性探索缺失值</span></div><div class="line">&gt; <span class="comment">#你可用指示变量替代数据集中的数据（1表示缺失，0表示存在），这样生成的矩阵有时称作影子矩阵</span></div><div class="line">&gt; x &lt;- data.frame(abs(is.na(sleep[!complete.cases(sleep),])))</div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#提取含（但不全部是）缺失值的变量</span></div><div class="line">&gt; y &lt;- x[which(colSums(x) &gt;<span class="number">0</span>)]</div><div class="line">&gt; <span class="comment">#相关性</span></div><div class="line">&gt; cor(y)</div><div class="line">            NonD      Dream      Sleep       Span       Gest</div><div class="line">NonD   <span class="number">1.0000000</span>  <span class="number">0.8017837</span>  <span class="number">0.3273268</span> -<span class="number">0.4909903</span> -<span class="number">0.7637626</span></div><div class="line">Dream  <span class="number">0.8017837</span>  <span class="number">1.0000000</span> -<span class="number">0.1020621</span> -<span class="number">0.3572173</span> -<span class="number">0.6123724</span></div><div class="line">Sleep  <span class="number">0.3273268</span> -<span class="number">0.1020621</span>  <span class="number">1.0000000</span> -<span class="number">0.2500000</span> -<span class="number">0.2500000</span></div><div class="line">Span  -<span class="number">0.4909903</span> -<span class="number">0.3572173</span> -<span class="number">0.2500000</span>  <span class="number">1.0000000</span>  <span class="number">0.0625000</span></div><div class="line">Gest  -<span class="number">0.7637626</span> -<span class="number">0.6123724</span> -<span class="number">0.2500000</span>  <span class="number">0.0625000</span>  <span class="number">1.0000000</span></div></pre></td></tr></table></figure>
<p><img src="/2017/11/29/chapter15-有效的处理缺失值/missPlot.png" alt=""><br><img src="/2017/11/29/chapter15-有效的处理缺失值/missPlot2.png" alt=""></p>
<h2 id="4、缺失值处理"><a href="#4、缺失值处理" class="headerlink" title="4、缺失值处理"></a>4、缺失值处理</h2><h3 id="1、删除"><a href="#1、删除" class="headerlink" title="1、删除"></a>1、删除</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#4、缺失值处理</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#删除</span></div><div class="line">&gt; newdata &lt;- sleep[complete.cases(sleep),]</div><div class="line">&gt; </div><div class="line">&gt; newdata &lt;- na.omit(sleep)</div></pre></td></tr></table></figure>
<h3 id="2、多重插补"><a href="#2、多重插补" class="headerlink" title="2、多重插补"></a>2、多重插补</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#多重插补</span></div><div class="line">&gt; <span class="keyword">library</span>(mice)</div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#mydata是一个包含缺失值的矩阵或数据框。</span></div><div class="line">&gt; <span class="comment"># imp是一个包含m个插补数据集的列表对象，同时还含有完成插补过程的信息。默认地，m为5。</span></div><div class="line">&gt; <span class="comment"># analysis是一个表达式对象，用来设定应用于m个插补数据集的统计分析方法。方法包</span></div><div class="line">&gt; <span class="comment">#括做线性回归模型的lm()函数、做广义线性模型的glm()函数、做广义可加模型的</span></div><div class="line">&gt; <span class="comment">#gam()，以及做负二项模型的nbrm()函数。 表达式在函数的括号中， ~的左边是响应变量，</span></div><div class="line">&gt; <span class="comment">#右边是预测变量（用+符号分隔开）。</span></div><div class="line">&gt; <span class="comment"># fit是一个包含m个单独统计分析结果的列表对象。</span></div><div class="line">&gt; <span class="comment"># pooled是一个包含这m个统计分析平均结果的列表对象</span></div><div class="line">&gt; data(sleep, package=<span class="string">"VIM"</span>)</div><div class="line">&gt; imp &lt;- mice(sleep, seed=<span class="number">1234</span>)</div><div class="line"></div><div class="line"> iter imp variable</div><div class="line">  <span class="number">1</span>   <span class="number">1</span>  NonD  Dream  Sleep  Span  Gest</div><div class="line">  <span class="number">1</span>   <span class="number">2</span>  NonD  Dream  Sleep  Span  Gest</div><div class="line">  <span class="number">1</span>   <span class="number">3</span>  NonD  Dream  Sleep  Span  Gest</div><div class="line">  <span class="number">1</span>   <span class="number">4</span>  NonD  Dream  Sleep  Span  Gest</div><div class="line">  <span class="number">1</span>   <span class="number">5</span>  NonD  Dream  Sleep  Span  Gest</div><div class="line">  <span class="number">2</span>   <span class="number">1</span>  NonD  Dream  Sleep  Span  Gest</div><div class="line">  <span class="number">2</span>   <span class="number">2</span>  NonD  Dream  Sleep  Span  Gest</div><div class="line">  <span class="number">2</span>   <span class="number">3</span>  NonD  Dream  Sleep  Span  Gest</div><div class="line">  <span class="number">2</span>   <span class="number">4</span>  NonD  Dream  Sleep  Span  Gest</div><div class="line">  <span class="number">2</span>   <span class="number">5</span>  NonD  Dream  Sleep  Span  Gest</div><div class="line">  <span class="number">3</span>   <span class="number">1</span>  NonD  Dream  Sleep  Span  Gest</div><div class="line">  <span class="number">3</span>   <span class="number">2</span>  NonD  Dream  Sleep  Span  Gest</div><div class="line">  <span class="number">3</span>   <span class="number">3</span>  NonD  Dream  Sleep  Span  Gest</div><div class="line">  <span class="number">3</span>   <span class="number">4</span>  NonD  Dream  Sleep  Span  Gest</div><div class="line">  <span class="number">3</span>   <span class="number">5</span>  NonD  Dream  Sleep  Span  Gest</div><div class="line">  <span class="number">4</span>   <span class="number">1</span>  NonD  Dream  Sleep  Span  Gest</div><div class="line">  <span class="number">4</span>   <span class="number">2</span>  NonD  Dream  Sleep  Span  Gest</div><div class="line">  <span class="number">4</span>   <span class="number">3</span>  NonD  Dream  Sleep  Span  Gest</div><div class="line">  <span class="number">4</span>   <span class="number">4</span>  NonD  Dream  Sleep  Span  Gest</div><div class="line">  <span class="number">4</span>   <span class="number">5</span>  NonD  Dream  Sleep  Span  Gest</div><div class="line">  <span class="number">5</span>   <span class="number">1</span>  NonD  Dream  Sleep  Span  Gest</div><div class="line">  <span class="number">5</span>   <span class="number">2</span>  NonD  Dream  Sleep  Span  Gest</div><div class="line">  <span class="number">5</span>   <span class="number">3</span>  NonD  Dream  Sleep  Span  Gest</div><div class="line">  <span class="number">5</span>   <span class="number">4</span>  NonD  Dream  Sleep  Span  Gest</div><div class="line">  <span class="number">5</span>   <span class="number">5</span>  NonD  Dream  Sleep  Span  Gest</div><div class="line">&gt; </div><div class="line">&gt; fit &lt;- with(imp, lm(Dream ~ Span + Gest))</div><div class="line">&gt; </div><div class="line">&gt; pooled &lt;- pool(fit)</div><div class="line">&gt; </div><div class="line">&gt; summary(pooled)</div><div class="line">                     est          se         t       df     Pr(&gt;|t|)        lo <span class="number">95</span>         hi <span class="number">95</span></div><div class="line">(Intercept)  <span class="number">2.546199168</span> <span class="number">0.254689696</span>  <span class="number">9.997260</span> <span class="number">52.12563</span> <span class="number">1.021405e-13</span>  <span class="number">2.035156222</span>  <span class="number">3.0572421151</span></div><div class="line">Span        -<span class="number">0.004548904</span> <span class="number">0.012039106</span> -<span class="number">0.377844</span> <span class="number">51.94538</span> <span class="number">7.070861e-01</span> -<span class="number">0.028707741</span>  <span class="number">0.0196099340</span></div><div class="line">Gest        -<span class="number">0.003916211</span> <span class="number">0.001468788</span> -<span class="number">2.666287</span> <span class="number">55.55683</span> <span class="number">1.002562e-02</span> -<span class="number">0.006859066</span> -<span class="number">0.0009733567</span></div><div class="line">            nmis        fmi     lambda</div><div class="line">(Intercept)   <span class="literal">NA</span> <span class="number">0.08710301</span> <span class="number">0.05273554</span></div><div class="line">Span           <span class="number">4</span> <span class="number">0.08860195</span> <span class="number">0.05417409</span></div><div class="line">Gest           <span class="number">4</span> <span class="number">0.05442170</span> <span class="number">0.02098354</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#展示了在Dream变量上有缺失值的12个动物的5次插补值。</span></div><div class="line">&gt; imp$imp$Dream</div><div class="line">     <span class="number">1</span>   <span class="number">2</span>   <span class="number">3</span>   <span class="number">4</span>   <span class="number">5</span></div><div class="line"><span class="number">1</span>  <span class="number">1.0</span> <span class="number">0.5</span> <span class="number">0.5</span> <span class="number">0.5</span> <span class="number">0.3</span></div><div class="line"><span class="number">3</span>  <span class="number">2.6</span> <span class="number">2.1</span> <span class="number">1.5</span> <span class="number">1.8</span> <span class="number">1.3</span></div><div class="line"><span class="number">4</span>  <span class="number">3.4</span> <span class="number">3.1</span> <span class="number">3.4</span> <span class="number">1.2</span> <span class="number">3.4</span></div><div class="line"><span class="number">14</span> <span class="number">0.3</span> <span class="number">0.5</span> <span class="number">0.5</span> <span class="number">0.3</span> <span class="number">1.2</span></div><div class="line"><span class="number">24</span> <span class="number">1.8</span> <span class="number">1.3</span> <span class="number">3.6</span> <span class="number">0.9</span> <span class="number">5.6</span></div><div class="line"><span class="number">26</span> <span class="number">2.3</span> <span class="number">3.1</span> <span class="number">2.0</span> <span class="number">2.6</span> <span class="number">2.1</span></div><div class="line"><span class="number">30</span> <span class="number">1.2</span> <span class="number">0.3</span> <span class="number">3.4</span> <span class="number">2.6</span> <span class="number">2.3</span></div><div class="line"><span class="number">31</span> <span class="number">3.4</span> <span class="number">0.5</span> <span class="number">0.6</span> <span class="number">1.0</span> <span class="number">0.5</span></div><div class="line"><span class="number">47</span> <span class="number">0.5</span> <span class="number">1.5</span> <span class="number">1.5</span> <span class="number">2.2</span> <span class="number">3.4</span></div><div class="line"><span class="number">53</span> <span class="number">0.3</span> <span class="number">0.5</span> <span class="number">0.5</span> <span class="number">0.5</span> <span class="number">0.6</span></div><div class="line"><span class="number">55</span> <span class="number">0.5</span> <span class="number">0.9</span> <span class="number">2.6</span> <span class="number">2.7</span> <span class="number">2.4</span></div><div class="line"><span class="number">62</span> <span class="number">1.0</span> <span class="number">2.1</span> <span class="number">0.5</span> <span class="number">3.9</span> <span class="number">3.6</span></div><div class="line">&gt; </div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#利用complete()函数可以观察m个插补数据集中的任意一个。</span></div><div class="line">&gt; complete(imp,action=<span class="number">1</span>)</div><div class="line">    BodyWgt BrainWgt NonD Dream Sleep  Span  Gest Pred Exp Danger</div><div class="line"><span class="number">1</span>  <span class="number">6654.000</span>  <span class="number">5712.00</span>  <span class="number">3.3</span>   <span class="number">1.0</span>   <span class="number">3.3</span>  <span class="number">38.6</span> <span class="number">645.0</span>    <span class="number">3</span>   <span class="number">5</span>      <span class="number">3</span></div><div class="line"><span class="number">2</span>     <span class="number">1.000</span>     <span class="number">6.60</span>  <span class="number">6.3</span>   <span class="number">2.0</span>   <span class="number">8.3</span>   <span class="number">4.5</span>  <span class="number">42.0</span>    <span class="number">3</span>   <span class="number">1</span>      <span class="number">3</span></div><div class="line"><span class="number">3</span>     <span class="number">3.385</span>    <span class="number">44.50</span>  <span class="number">9.7</span>   <span class="number">2.6</span>  <span class="number">12.5</span>  <span class="number">14.0</span>  <span class="number">60.0</span>    <span class="number">1</span>   <span class="number">1</span>      <span class="number">1</span></div><div class="line"><span class="number">4</span>     <span class="number">0.920</span>     <span class="number">5.70</span> <span class="number">13.2</span>   <span class="number">3.4</span>  <span class="number">16.5</span>   <span class="number">4.7</span>  <span class="number">25.0</span>    <span class="number">5</span>   <span class="number">2</span>      <span class="number">3</span></div><div class="line"><span class="number">5</span>  <span class="number">2547.000</span>  <span class="number">4603.00</span>  <span class="number">2.1</span>   <span class="number">1.8</span>   <span class="number">3.9</span>  <span class="number">69.0</span> <span class="number">624.0</span>    <span class="number">3</span>   <span class="number">5</span>      <span class="number">4</span></div><div class="line"><span class="number">6</span>    <span class="number">10.550</span>   <span class="number">179.50</span>  <span class="number">9.1</span>   <span class="number">0.7</span>   <span class="number">9.8</span>  <span class="number">27.0</span> <span class="number">180.0</span>    <span class="number">4</span>   <span class="number">4</span>      <span class="number">4</span></div><div class="line"><span class="number">7</span>     <span class="number">0.023</span>     <span class="number">0.30</span> <span class="number">15.8</span>   <span class="number">3.9</span>  <span class="number">19.7</span>  <span class="number">19.0</span>  <span class="number">35.0</span>    <span class="number">1</span>   <span class="number">1</span>      <span class="number">1</span></div><div class="line"><span class="number">8</span>   <span class="number">160.000</span>   <span class="number">169.00</span>  <span class="number">5.2</span>   <span class="number">1.0</span>   <span class="number">6.2</span>  <span class="number">30.4</span> <span class="number">392.0</span>    <span class="number">4</span>   <span class="number">5</span>      <span class="number">4</span></div><div class="line"><span class="number">9</span>     <span class="number">3.300</span>    <span class="number">25.60</span> <span class="number">10.9</span>   <span class="number">3.6</span>  <span class="number">14.5</span>  <span class="number">28.0</span>  <span class="number">63.0</span>    <span class="number">1</span>   <span class="number">2</span>      <span class="number">1</span></div><div class="line"><span class="number">10</span>   <span class="number">52.160</span>   <span class="number">440.00</span>  <span class="number">8.3</span>   <span class="number">1.4</span>   <span class="number">9.7</span>  <span class="number">50.0</span> <span class="number">230.0</span>    <span class="number">1</span>   <span class="number">1</span>      <span class="number">1</span></div><div class="line"><span class="number">11</span>    <span class="number">0.425</span>     <span class="number">6.40</span> <span class="number">11.0</span>   <span class="number">1.5</span>  <span class="number">12.5</span>   <span class="number">7.0</span> <span class="number">112.0</span>    <span class="number">5</span>   <span class="number">4</span>      <span class="number">4</span></div><div class="line"><span class="number">12</span>  <span class="number">465.000</span>   <span class="number">423.00</span>  <span class="number">3.2</span>   <span class="number">0.7</span>   <span class="number">3.9</span>  <span class="number">30.0</span> <span class="number">281.0</span>    <span class="number">5</span>   <span class="number">5</span>      <span class="number">5</span></div><div class="line"><span class="number">13</span>    <span class="number">0.550</span>     <span class="number">2.40</span>  <span class="number">7.6</span>   <span class="number">2.7</span>  <span class="number">10.3</span>   <span class="number">7.0</span>  <span class="number">52.0</span>    <span class="number">2</span>   <span class="number">1</span>      <span class="number">2</span></div><div class="line"><span class="number">14</span>  <span class="number">187.100</span>   <span class="number">419.00</span>  <span class="number">3.2</span>   <span class="number">0.3</span>   <span class="number">3.1</span>  <span class="number">40.0</span> <span class="number">365.0</span>    <span class="number">5</span>   <span class="number">5</span>      <span class="number">5</span></div><div class="line"><span class="number">15</span>    <span class="number">0.075</span>     <span class="number">1.20</span>  <span class="number">6.3</span>   <span class="number">2.1</span>   <span class="number">8.4</span>   <span class="number">3.5</span>  <span class="number">42.0</span>    <span class="number">1</span>   <span class="number">1</span>      <span class="number">1</span></div><div class="line"><span class="number">16</span>    <span class="number">3.000</span>    <span class="number">25.00</span>  <span class="number">8.6</span>   <span class="number">0.0</span>   <span class="number">8.6</span>  <span class="number">50.0</span>  <span class="number">28.0</span>    <span class="number">2</span>   <span class="number">2</span>      <span class="number">2</span></div><div class="line"><span class="number">17</span>    <span class="number">0.785</span>     <span class="number">3.50</span>  <span class="number">6.6</span>   <span class="number">4.1</span>  <span class="number">10.7</span>   <span class="number">6.0</span>  <span class="number">42.0</span>    <span class="number">2</span>   <span class="number">2</span>      <span class="number">2</span></div><div class="line"><span class="number">18</span>    <span class="number">0.200</span>     <span class="number">5.00</span>  <span class="number">9.5</span>   <span class="number">1.2</span>  <span class="number">10.7</span>  <span class="number">10.4</span> <span class="number">120.0</span>    <span class="number">2</span>   <span class="number">2</span>      <span class="number">2</span></div><div class="line"><span class="number">19</span>    <span class="number">1.410</span>    <span class="number">17.50</span>  <span class="number">4.8</span>   <span class="number">1.3</span>   <span class="number">6.1</span>  <span class="number">34.0</span> <span class="number">252.0</span>    <span class="number">1</span>   <span class="number">2</span>      <span class="number">1</span></div><div class="line"><span class="number">20</span>   <span class="number">60.000</span>    <span class="number">81.00</span> <span class="number">12.0</span>   <span class="number">6.1</span>  <span class="number">18.1</span>   <span class="number">7.0</span>  <span class="number">12.0</span>    <span class="number">1</span>   <span class="number">1</span>      <span class="number">1</span></div><div class="line"><span class="number">21</span>  <span class="number">529.000</span>   <span class="number">680.00</span> <span class="number">11.9</span>   <span class="number">0.3</span>  <span class="number">12.5</span>  <span class="number">28.0</span> <span class="number">400.0</span>    <span class="number">5</span>   <span class="number">5</span>      <span class="number">5</span></div><div class="line"><span class="number">22</span>   <span class="number">27.660</span>   <span class="number">115.00</span>  <span class="number">3.3</span>   <span class="number">0.5</span>   <span class="number">3.8</span>  <span class="number">20.0</span> <span class="number">148.0</span>    <span class="number">5</span>   <span class="number">5</span>      <span class="number">5</span></div><div class="line"><span class="number">23</span>    <span class="number">0.120</span>     <span class="number">1.00</span> <span class="number">11.0</span>   <span class="number">3.4</span>  <span class="number">14.4</span>   <span class="number">3.9</span>  <span class="number">16.0</span>    <span class="number">3</span>   <span class="number">1</span>      <span class="number">2</span></div><div class="line"><span class="number">24</span>  <span class="number">207.000</span>   <span class="number">406.00</span> <span class="number">10.4</span>   <span class="number">1.8</span>  <span class="number">12.0</span>  <span class="number">39.3</span> <span class="number">252.0</span>    <span class="number">1</span>   <span class="number">4</span>      <span class="number">1</span></div><div class="line"><span class="number">25</span>   <span class="number">85.000</span>   <span class="number">325.00</span>  <span class="number">4.7</span>   <span class="number">1.5</span>   <span class="number">6.2</span>  <span class="number">41.0</span> <span class="number">310.0</span>    <span class="number">1</span>   <span class="number">3</span>      <span class="number">1</span></div><div class="line"><span class="number">26</span>   <span class="number">36.330</span>   <span class="number">119.50</span> <span class="number">10.9</span>   <span class="number">2.3</span>  <span class="number">13.0</span>  <span class="number">16.2</span>  <span class="number">63.0</span>    <span class="number">1</span>   <span class="number">1</span>      <span class="number">1</span></div><div class="line"><span class="number">27</span>    <span class="number">0.101</span>     <span class="number">4.00</span> <span class="number">10.4</span>   <span class="number">3.4</span>  <span class="number">13.8</span>   <span class="number">9.0</span>  <span class="number">28.0</span>    <span class="number">5</span>   <span class="number">1</span>      <span class="number">3</span></div><div class="line"><span class="number">28</span>    <span class="number">1.040</span>     <span class="number">5.50</span>  <span class="number">7.4</span>   <span class="number">0.8</span>   <span class="number">8.2</span>   <span class="number">7.6</span>  <span class="number">68.0</span>    <span class="number">5</span>   <span class="number">3</span>      <span class="number">4</span></div><div class="line"><span class="number">29</span>  <span class="number">521.000</span>   <span class="number">655.00</span>  <span class="number">2.1</span>   <span class="number">0.8</span>   <span class="number">2.9</span>  <span class="number">46.0</span> <span class="number">336.0</span>    <span class="number">5</span>   <span class="number">5</span>      <span class="number">5</span></div><div class="line"><span class="number">30</span>  <span class="number">100.000</span>   <span class="number">157.00</span>  <span class="number">9.7</span>   <span class="number">1.2</span>  <span class="number">10.8</span>  <span class="number">22.4</span> <span class="number">100.0</span>    <span class="number">1</span>   <span class="number">1</span>      <span class="number">1</span></div><div class="line"><span class="number">31</span>   <span class="number">35.000</span>    <span class="number">56.00</span> <span class="number">10.4</span>   <span class="number">3.4</span>  <span class="number">13.8</span>  <span class="number">16.3</span>  <span class="number">33.0</span>    <span class="number">3</span>   <span class="number">5</span>      <span class="number">4</span></div><div class="line"><span class="number">32</span>    <span class="number">0.005</span>     <span class="number">0.14</span>  <span class="number">7.7</span>   <span class="number">1.4</span>   <span class="number">9.1</span>   <span class="number">2.6</span>  <span class="number">21.5</span>    <span class="number">5</span>   <span class="number">2</span>      <span class="number">4</span></div><div class="line"><span class="number">33</span>    <span class="number">0.010</span>     <span class="number">0.25</span> <span class="number">17.9</span>   <span class="number">2.0</span>  <span class="number">19.9</span>  <span class="number">24.0</span>  <span class="number">50.0</span>    <span class="number">1</span>   <span class="number">1</span>      <span class="number">1</span></div><div class="line"><span class="number">34</span>   <span class="number">62.000</span>  <span class="number">1320.00</span>  <span class="number">6.1</span>   <span class="number">1.9</span>   <span class="number">8.0</span> <span class="number">100.0</span> <span class="number">267.0</span>    <span class="number">1</span>   <span class="number">1</span>      <span class="number">1</span></div><div class="line"><span class="number">35</span>    <span class="number">0.122</span>     <span class="number">3.00</span>  <span class="number">8.2</span>   <span class="number">2.4</span>  <span class="number">10.6</span>  <span class="number">14.0</span>  <span class="number">30.0</span>    <span class="number">2</span>   <span class="number">1</span>      <span class="number">1</span></div><div class="line"><span class="number">36</span>    <span class="number">1.350</span>     <span class="number">8.10</span>  <span class="number">8.4</span>   <span class="number">2.8</span>  <span class="number">11.2</span>   <span class="number">2.6</span>  <span class="number">45.0</span>    <span class="number">3</span>   <span class="number">1</span>      <span class="number">3</span></div><div class="line"><span class="number">37</span>    <span class="number">0.023</span>     <span class="number">0.40</span> <span class="number">11.9</span>   <span class="number">1.3</span>  <span class="number">13.2</span>   <span class="number">3.2</span>  <span class="number">19.0</span>    <span class="number">4</span>   <span class="number">1</span>      <span class="number">3</span></div><div class="line"><span class="number">38</span>    <span class="number">0.048</span>     <span class="number">0.33</span> <span class="number">10.8</span>   <span class="number">2.0</span>  <span class="number">12.8</span>   <span class="number">2.0</span>  <span class="number">30.0</span>    <span class="number">4</span>   <span class="number">1</span>      <span class="number">3</span></div><div class="line"><span class="number">39</span>    <span class="number">1.700</span>     <span class="number">6.30</span> <span class="number">13.8</span>   <span class="number">5.6</span>  <span class="number">19.4</span>   <span class="number">5.0</span>  <span class="number">12.0</span>    <span class="number">2</span>   <span class="number">1</span>      <span class="number">1</span></div><div class="line"><span class="number">40</span>    <span class="number">3.500</span>    <span class="number">10.80</span> <span class="number">14.3</span>   <span class="number">3.1</span>  <span class="number">17.4</span>   <span class="number">6.5</span> <span class="number">120.0</span>    <span class="number">2</span>   <span class="number">1</span>      <span class="number">1</span></div><div class="line"><span class="number">41</span>  <span class="number">250.000</span>   <span class="number">490.00</span>  <span class="number">4.7</span>   <span class="number">1.0</span>   <span class="number">6.2</span>  <span class="number">23.6</span> <span class="number">440.0</span>    <span class="number">5</span>   <span class="number">5</span>      <span class="number">5</span></div><div class="line"><span class="number">42</span>    <span class="number">0.480</span>    <span class="number">15.50</span> <span class="number">15.2</span>   <span class="number">1.8</span>  <span class="number">17.0</span>  <span class="number">12.0</span> <span class="number">140.0</span>    <span class="number">2</span>   <span class="number">2</span>      <span class="number">2</span></div><div class="line"><span class="number">43</span>   <span class="number">10.000</span>   <span class="number">115.00</span> <span class="number">10.0</span>   <span class="number">0.9</span>  <span class="number">10.9</span>  <span class="number">20.2</span> <span class="number">170.0</span>    <span class="number">4</span>   <span class="number">4</span>      <span class="number">4</span></div><div class="line"><span class="number">44</span>    <span class="number">1.620</span>    <span class="number">11.40</span> <span class="number">11.9</span>   <span class="number">1.8</span>  <span class="number">13.7</span>  <span class="number">13.0</span>  <span class="number">17.0</span>    <span class="number">2</span>   <span class="number">1</span>      <span class="number">2</span></div><div class="line"><span class="number">45</span>  <span class="number">192.000</span>   <span class="number">180.00</span>  <span class="number">6.5</span>   <span class="number">1.9</span>   <span class="number">8.4</span>  <span class="number">27.0</span> <span class="number">115.0</span>    <span class="number">4</span>   <span class="number">4</span>      <span class="number">4</span></div><div class="line"><span class="number">46</span>    <span class="number">2.500</span>    <span class="number">12.10</span>  <span class="number">7.5</span>   <span class="number">0.9</span>   <span class="number">8.4</span>  <span class="number">18.0</span>  <span class="number">31.0</span>    <span class="number">5</span>   <span class="number">5</span>      <span class="number">5</span></div><div class="line"><span class="number">47</span>    <span class="number">4.288</span>    <span class="number">39.20</span> <span class="number">12.0</span>   <span class="number">0.5</span>  <span class="number">12.5</span>  <span class="number">13.7</span>  <span class="number">63.0</span>    <span class="number">2</span>   <span class="number">2</span>      <span class="number">2</span></div><div class="line"><span class="number">48</span>    <span class="number">0.280</span>     <span class="number">1.90</span> <span class="number">10.6</span>   <span class="number">2.6</span>  <span class="number">13.2</span>   <span class="number">4.7</span>  <span class="number">21.0</span>    <span class="number">3</span>   <span class="number">1</span>      <span class="number">3</span></div><div class="line"><span class="number">49</span>    <span class="number">4.235</span>    <span class="number">50.40</span>  <span class="number">7.4</span>   <span class="number">2.4</span>   <span class="number">9.8</span>   <span class="number">9.8</span>  <span class="number">52.0</span>    <span class="number">1</span>   <span class="number">1</span>      <span class="number">1</span></div><div class="line"><span class="number">50</span>    <span class="number">6.800</span>   <span class="number">179.00</span>  <span class="number">8.4</span>   <span class="number">1.2</span>   <span class="number">9.6</span>  <span class="number">29.0</span> <span class="number">164.0</span>    <span class="number">2</span>   <span class="number">3</span>      <span class="number">2</span></div><div class="line"><span class="number">51</span>    <span class="number">0.750</span>    <span class="number">12.30</span>  <span class="number">5.7</span>   <span class="number">0.9</span>   <span class="number">6.6</span>   <span class="number">7.0</span> <span class="number">225.0</span>    <span class="number">2</span>   <span class="number">2</span>      <span class="number">2</span></div><div class="line"><span class="number">52</span>    <span class="number">3.600</span>    <span class="number">21.00</span>  <span class="number">4.9</span>   <span class="number">0.5</span>   <span class="number">5.4</span>   <span class="number">6.0</span> <span class="number">225.0</span>    <span class="number">3</span>   <span class="number">2</span>      <span class="number">3</span></div><div class="line"><span class="number">53</span>   <span class="number">14.830</span>    <span class="number">98.20</span>  <span class="number">3.3</span>   <span class="number">0.3</span>   <span class="number">2.6</span>  <span class="number">17.0</span> <span class="number">150.0</span>    <span class="number">5</span>   <span class="number">5</span>      <span class="number">5</span></div><div class="line"><span class="number">54</span>   <span class="number">55.500</span>   <span class="number">175.00</span>  <span class="number">3.2</span>   <span class="number">0.6</span>   <span class="number">3.8</span>  <span class="number">20.0</span> <span class="number">151.0</span>    <span class="number">5</span>   <span class="number">5</span>      <span class="number">5</span></div><div class="line"><span class="number">55</span>    <span class="number">1.400</span>    <span class="number">12.50</span> <span class="number">11.0</span>   <span class="number">0.5</span>  <span class="number">11.0</span>  <span class="number">12.7</span>  <span class="number">90.0</span>    <span class="number">2</span>   <span class="number">2</span>      <span class="number">2</span></div><div class="line"><span class="number">56</span>    <span class="number">0.060</span>     <span class="number">1.00</span>  <span class="number">8.1</span>   <span class="number">2.2</span>  <span class="number">10.3</span>   <span class="number">3.5</span> <span class="number">120.0</span>    <span class="number">3</span>   <span class="number">1</span>      <span class="number">2</span></div><div class="line"><span class="number">57</span>    <span class="number">0.900</span>     <span class="number">2.60</span> <span class="number">11.0</span>   <span class="number">2.3</span>  <span class="number">13.3</span>   <span class="number">4.5</span>  <span class="number">60.0</span>    <span class="number">2</span>   <span class="number">1</span>      <span class="number">2</span></div><div class="line"><span class="number">58</span>    <span class="number">2.000</span>    <span class="number">12.30</span>  <span class="number">4.9</span>   <span class="number">0.5</span>   <span class="number">5.4</span>   <span class="number">7.5</span> <span class="number">200.0</span>    <span class="number">3</span>   <span class="number">1</span>      <span class="number">3</span></div><div class="line"><span class="number">59</span>    <span class="number">0.104</span>     <span class="number">2.50</span> <span class="number">13.2</span>   <span class="number">2.6</span>  <span class="number">15.8</span>   <span class="number">2.3</span>  <span class="number">46.0</span>    <span class="number">3</span>   <span class="number">2</span>      <span class="number">2</span></div><div class="line"><span class="number">60</span>    <span class="number">4.190</span>    <span class="number">58.00</span>  <span class="number">9.7</span>   <span class="number">0.6</span>  <span class="number">10.3</span>  <span class="number">24.0</span> <span class="number">210.0</span>    <span class="number">4</span>   <span class="number">3</span>      <span class="number">4</span></div><div class="line"><span class="number">61</span>    <span class="number">3.500</span>     <span class="number">3.90</span> <span class="number">12.8</span>   <span class="number">6.6</span>  <span class="number">19.4</span>   <span class="number">3.0</span>  <span class="number">14.0</span>    <span class="number">2</span>   <span class="number">1</span>      <span class="number">1</span></div><div class="line"><span class="number">62</span>    <span class="number">4.050</span>    <span class="number">17.00</span> <span class="number">12.0</span>   <span class="number">1.0</span>  <span class="number">12.8</span>  <span class="number">13.0</span>  <span class="number">38.0</span>    <span class="number">3</span>   <span class="number">1</span>      <span class="number">1</span></div></pre></td></tr></table></figure>
<h3 id="3、其他的专业方法"><a href="#3、其他的专业方法" class="headerlink" title="3、其他的专业方法"></a>3、其他的专业方法</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#其他的专业方法 索引</span></div><div class="line">&gt; <span class="comment"># package desc</span></div><div class="line">&gt; <span class="comment">#Hmisc      包含多种函数，支持简单插补、多重插补和典型变量插补</span></div><div class="line">&gt; <span class="comment">#mvnmle     对多元正态分布数据中缺失值的最大似然估计</span></div><div class="line">&gt; <span class="comment">#cat        对数线性模型中多元类别型变量的多重插补</span></div><div class="line">&gt; <span class="comment">#arrayImpute、 arrayMissPattern、 SeqKnn 处理微阵列缺失数据的实用函数</span></div><div class="line">&gt; <span class="comment">#longitudinalData   相关的函数列表，比如对时间序列缺失值进行插补的一系列函数</span></div><div class="line">&gt; <span class="comment">#kmi        处理生存分析缺失值的Kaplan-Meier多重插补</span></div><div class="line">&gt; <span class="comment">#mix        一般位置模型中混合类别型和连续型数据的多重插补</span></div><div class="line">&gt; <span class="comment">#pan        多元面板数据或聚类数据的多重插补</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;处理缺失数据的高级方法&quot;&gt;&lt;a href=&quot;#处理缺失数据的高级方法&quot; class=&quot;headerlink&quot; title=&quot;处理缺失数据的高级方法&quot;&gt;&lt;/a&gt;处理缺失数据的高级方法&lt;/h1&gt;&lt;h2 id=&quot;1、步骤&quot;&gt;&lt;a href=&quot;#1、步骤&quot; class=&quot;
    
    </summary>
    
      <category term="R语言" scheme="https://pingansheng.github.io/categories/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R语言" scheme="https://pingansheng.github.io/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="有效的处理缺失值" scheme="https://pingansheng.github.io/tags/%E6%9C%89%E6%95%88%E7%9A%84%E5%A4%84%E7%90%86%E7%BC%BA%E5%A4%B1%E5%80%BC/"/>
    
  </entry>
  
  <entry>
    <title>chapter14-主成分和因子分析</title>
    <link href="https://pingansheng.github.io/2017/11/24/chapter14-%E4%B8%BB%E6%88%90%E5%88%86%E5%92%8C%E5%9B%A0%E5%AD%90%E5%88%86%E6%9E%90/"/>
    <id>https://pingansheng.github.io/2017/11/24/chapter14-主成分和因子分析/</id>
    <published>2017-11-24T10:07:12.000Z</published>
    <updated>2024-02-24T02:35:10.062Z</updated>
    
    <content type="html"><![CDATA[<h1 id="主成分和因子分析"><a href="#主成分和因子分析" class="headerlink" title="主成分和因子分析"></a>主成分和因子分析</h1><h2 id="主成分分析"><a href="#主成分分析" class="headerlink" title="主成分分析"></a>主成分分析</h2><h3 id="1、主成分个数"><a href="#1、主成分个数" class="headerlink" title="1、主成分个数"></a>1、主成分个数</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">##主成分和因子分析</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#主成分分析</span></div><div class="line">&gt; <span class="comment">#PCA的目标是用一组较少的不相关变量代替大量相关变量，同时尽可能保留初始变量的信</span></div><div class="line">&gt; <span class="comment">#息，这些推导所得的变量称为主成分，它们是观测变量的线性组合。如第一成分</span></div><div class="line">&gt; <span class="comment"># PC1 = a1X1 + a2X2 + ... + akXk</span></div><div class="line">&gt; <span class="comment">#它是k个观测变量的加权组合，对初始变量集的方差解释性最大。第二主成分也是初始变量</span></div><div class="line">&gt; <span class="comment">#的线性组合，对方差的解释性排第二，同时与第一主成分正交（不相关）。</span></div><div class="line">&gt; <span class="comment">#后面每一个主成分都最大化它对方差的解释程度，同时与之前所有的主成分都正交。</span></div><div class="line">&gt; <span class="comment">#你可以选取与变量数相同的主成分，但从实用的角度来看，我们都希望能用较少的主成分来近似全变量集。</span></div><div class="line">&gt; <span class="keyword">library</span>(psych)</div><div class="line">&gt; fa.parallel(USJudgeRatings[,-<span class="number">1</span>], fa=<span class="string">"pc"</span>, n.iter=<span class="number">100</span>, show.legend = <span class="literal">FALSE</span>, main=<span class="string">"Scree plot with parallel analysis"</span>)</div><div class="line">The estimated weights <span class="keyword">for</span> the factor scores are probably incorrect.  Try a different factor extraction method.</div><div class="line">Parallel analysis suggests that the number of factors =  <span class="literal">NA</span>  and the number of components =  <span class="number">1</span> </div><div class="line">&gt; <span class="comment">#碎石图（直线与x符号）、特征值大于1准则（水平线）和100次模拟的平行分析（虚线）都表明保留一个主成分即可</span></div></pre></td></tr></table></figure>
<p><img src="/2017/11/24/chapter14-主成分和因子分析/pca1.png" alt=""></p>
<h3 id="2、提取主成分"><a href="#2、提取主成分" class="headerlink" title="2、提取主成分"></a>2、提取主成分</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#提取主成分principal</span></div><div class="line">&gt; <span class="comment">#factors设定主成分数（默认为1）；</span></div><div class="line">&gt; <span class="comment">#rotate指定旋转的方法[默认最大方差旋转（varimax)]。</span></div><div class="line">&gt; <span class="comment">#scores设定是否需要计算主成分得分（默认不需要）。</span></div><div class="line">&gt; pc &lt;- principal(USJudgeRatings[,-<span class="number">1</span>], nfactors = <span class="number">1</span>)</div><div class="line">&gt; pc</div><div class="line">Principal Components Analysis</div><div class="line">Call: principal(r = USJudgeRatings[, -<span class="number">1</span>], nfactors = <span class="number">1</span>)</div><div class="line">Standardized loadings (pattern matrix) based upon correlation matrix</div><div class="line">      PC1   h2     u2 com</div><div class="line">INTG <span class="number">0.92</span> <span class="number">0.84</span> <span class="number">0.1565</span>   <span class="number">1</span></div><div class="line">DMNR <span class="number">0.91</span> <span class="number">0.83</span> <span class="number">0.1663</span>   <span class="number">1</span></div><div class="line">DILG <span class="number">0.97</span> <span class="number">0.94</span> <span class="number">0.0613</span>   <span class="number">1</span></div><div class="line">CFMG <span class="number">0.96</span> <span class="number">0.93</span> <span class="number">0.0720</span>   <span class="number">1</span></div><div class="line">DECI <span class="number">0.96</span> <span class="number">0.92</span> <span class="number">0.0763</span>   <span class="number">1</span></div><div class="line">PREP <span class="number">0.98</span> <span class="number">0.97</span> <span class="number">0.0299</span>   <span class="number">1</span></div><div class="line">FAMI <span class="number">0.98</span> <span class="number">0.95</span> <span class="number">0.0469</span>   <span class="number">1</span></div><div class="line">ORAL <span class="number">1.00</span> <span class="number">0.99</span> <span class="number">0.0091</span>   <span class="number">1</span></div><div class="line">WRIT <span class="number">0.99</span> <span class="number">0.98</span> <span class="number">0.0196</span>   <span class="number">1</span></div><div class="line">PHYS <span class="number">0.89</span> <span class="number">0.80</span> <span class="number">0.2013</span>   <span class="number">1</span></div><div class="line">RTEN <span class="number">0.99</span> <span class="number">0.97</span> <span class="number">0.0275</span>   <span class="number">1</span></div><div class="line"></div><div class="line">                 PC1</div><div class="line">SS loadings    <span class="number">10.13</span></div><div class="line">Proportion Var  <span class="number">0.92</span></div><div class="line"></div><div class="line">Mean item complexity =  <span class="number">1</span></div><div class="line">Test of the hypothesis that <span class="number">1</span> component is sufficient.</div><div class="line"></div><div class="line">The root mean square of the residuals (RMSR) is  <span class="number">0.04</span> </div><div class="line"> with the empirical chi square  <span class="number">6.2</span>  with prob &lt;  <span class="number">1</span> </div><div class="line"></div><div class="line">Fit based upon off diagonal values = <span class="number">1</span></div><div class="line">&gt; <span class="comment">#PC1栏包含了成分载荷,指观测变量与主成分的相关系数,第一主成分（PC1）与每个变量都高度相关，也就是说，它是一个可用来进行一般性评价</span></div><div class="line">&gt; <span class="comment">#的维度</span></div><div class="line">&gt; <span class="comment">#h2栏指成分公因子方差——主成分对每个变量的方差解释度。 u2栏指成分唯一性——方差无法被主成分解释的比例（1-h2）。</span></div><div class="line">&gt; <span class="comment">#例如，体能（PHYS） 80%的方差都可用第一主成分来解释，20%不能。相比而言， PHYS是用第一主成分表示性最差的变量。</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#SS loadings行包含了与主成分相关联的特征值，指的是与特定主成分相关联的标准化后的</span></div><div class="line">&gt; <span class="comment">#方差值（本例中，第一主成分的值为10）。最后， Proportion Var行表示的是每个主成分对整</span></div><div class="line">&gt; <span class="comment">#个数据集的解释程度。此处可以看到，第一主成分解释了11个变量92%的方差</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#多个主成分例子</span></div><div class="line">&gt; <span class="keyword">library</span>(psych)</div><div class="line">&gt; fa.parallel(Harman23.cor$cov, n.obs = <span class="number">302</span>, fa=<span class="string">"pc"</span>, n.iter=<span class="number">100</span>, </div><div class="line">+             show.legend = <span class="literal">FALSE</span>, main=<span class="string">"Scree plot with parallel analysis"</span>)</div><div class="line">Parallel analysis suggests that the number of factors =  <span class="literal">NA</span>  and the number of components =  <span class="number">2</span></div></pre></td></tr></table></figure>
<p><img src="/2017/11/24/chapter14-主成分和因子分析/pca2.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">&gt; pc &lt;- principal(Harman23.cor$cov, nfactors = <span class="number">2</span>, rotate=<span class="string">"none"</span>)</div><div class="line">&gt; pc</div><div class="line">Principal Components Analysis</div><div class="line">Call: principal(r = Harman23.cor$cov, nfactors = <span class="number">2</span>, rotate = <span class="string">"none"</span>)</div><div class="line">Standardized loadings (pattern matrix) based upon correlation matrix</div><div class="line">                PC1   PC2   h2    u2 com</div><div class="line">height         <span class="number">0.86</span> -<span class="number">0.37</span> <span class="number">0.88</span> <span class="number">0.123</span> <span class="number">1.4</span></div><div class="line">arm.span       <span class="number">0.84</span> -<span class="number">0.44</span> <span class="number">0.90</span> <span class="number">0.097</span> <span class="number">1.5</span></div><div class="line">forearm        <span class="number">0.81</span> -<span class="number">0.46</span> <span class="number">0.87</span> <span class="number">0.128</span> <span class="number">1.6</span></div><div class="line">lower.leg      <span class="number">0.84</span> -<span class="number">0.40</span> <span class="number">0.86</span> <span class="number">0.139</span> <span class="number">1.4</span></div><div class="line">weight         <span class="number">0.76</span>  <span class="number">0.52</span> <span class="number">0.85</span> <span class="number">0.150</span> <span class="number">1.8</span></div><div class="line">bitro.diameter <span class="number">0.67</span>  <span class="number">0.53</span> <span class="number">0.74</span> <span class="number">0.261</span> <span class="number">1.9</span></div><div class="line">chest.girth    <span class="number">0.62</span>  <span class="number">0.58</span> <span class="number">0.72</span> <span class="number">0.283</span> <span class="number">2.0</span></div><div class="line">chest.width    <span class="number">0.67</span>  <span class="number">0.42</span> <span class="number">0.62</span> <span class="number">0.375</span> <span class="number">1.7</span></div><div class="line"></div><div class="line">                       PC1  PC2</div><div class="line">SS loadings           <span class="number">4.67</span> <span class="number">1.77</span></div><div class="line">Proportion Var        <span class="number">0.58</span> <span class="number">0.22</span></div><div class="line">Cumulative Var        <span class="number">0.58</span> <span class="number">0.81</span></div><div class="line">Proportion Explained  <span class="number">0.73</span> <span class="number">0.27</span></div><div class="line">Cumulative Proportion <span class="number">0.73</span> <span class="number">1.00</span></div><div class="line"></div><div class="line">Mean item complexity =  <span class="number">1.7</span></div><div class="line">Test of the hypothesis that <span class="number">2</span> components are sufficient.</div><div class="line"></div><div class="line">The root mean square of the residuals (RMSR) is  <span class="number">0.05</span> </div><div class="line"></div><div class="line">Fit based upon off diagonal values = <span class="number">0.99</span></div><div class="line">&gt; <span class="comment">#第一主成分与每个身体测量指标都正相关，看起来似乎是</span></div><div class="line">&gt; <span class="comment">#一个一般性的衡量因子；第二主成分与前四个变量（height、arm.span、forearm和lower.leg）</span></div><div class="line">&gt; <span class="comment">#负相关，与后四个变量（weight、 bitro.diameter、 chest.girth和chest.width）正相关，</span></div><div class="line">&gt; <span class="comment">#因此它看起来似乎是一个长度—容量因子。但理念上的东西都不容易构建，当提取了多个成分时，</span></div><div class="line">&gt; <span class="comment">#对它们进行旋转可使结果更具解释性，接下来我们便讨论该问题。</span></div><div class="line">&gt;</div></pre></td></tr></table></figure>
<h3 id="3、主成分旋转"><a href="#3、主成分旋转" class="headerlink" title="3、主成分旋转"></a>3、主成分旋转</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#旋转</span></div><div class="line">&gt; <span class="comment">#旋转是一系列将成分载荷阵变得更容易解释的数学方法，它们尽可能地对成分去噪。旋转方</span></div><div class="line">&gt; <span class="comment">#法有两种：使选择的成分保持不相关（正交旋转），和让它们变得相关（斜交旋转）</span></div><div class="line">&gt; <span class="comment">#最流行的正交旋转是方差极大旋转</span></div><div class="line">&gt; pc &lt;- principal(Harman23.cor$cov, nfactors = <span class="number">2</span>, rotate=<span class="string">"varimax"</span>)</div><div class="line">&gt; pc</div><div class="line">Principal Components Analysis</div><div class="line">Call: principal(r = Harman23.cor$cov, nfactors = <span class="number">2</span>, rotate = <span class="string">"varimax"</span>)</div><div class="line">Standardized loadings (pattern matrix) based upon correlation matrix</div><div class="line">                RC1  RC2   h2    u2 com</div><div class="line">height         <span class="number">0.90</span> <span class="number">0.25</span> <span class="number">0.88</span> <span class="number">0.123</span> <span class="number">1.2</span></div><div class="line">arm.span       <span class="number">0.93</span> <span class="number">0.19</span> <span class="number">0.90</span> <span class="number">0.097</span> <span class="number">1.1</span></div><div class="line">forearm        <span class="number">0.92</span> <span class="number">0.16</span> <span class="number">0.87</span> <span class="number">0.128</span> <span class="number">1.1</span></div><div class="line">lower.leg      <span class="number">0.90</span> <span class="number">0.22</span> <span class="number">0.86</span> <span class="number">0.139</span> <span class="number">1.1</span></div><div class="line">weight         <span class="number">0.26</span> <span class="number">0.88</span> <span class="number">0.85</span> <span class="number">0.150</span> <span class="number">1.2</span></div><div class="line">bitro.diameter <span class="number">0.19</span> <span class="number">0.84</span> <span class="number">0.74</span> <span class="number">0.261</span> <span class="number">1.1</span></div><div class="line">chest.girth    <span class="number">0.11</span> <span class="number">0.84</span> <span class="number">0.72</span> <span class="number">0.283</span> <span class="number">1.0</span></div><div class="line">chest.width    <span class="number">0.26</span> <span class="number">0.75</span> <span class="number">0.62</span> <span class="number">0.375</span> <span class="number">1.2</span></div><div class="line"></div><div class="line">                       RC1  RC2</div><div class="line">SS loadings           <span class="number">3.52</span> <span class="number">2.92</span></div><div class="line">Proportion Var        <span class="number">0.44</span> <span class="number">0.37</span></div><div class="line">Cumulative Var        <span class="number">0.44</span> <span class="number">0.81</span></div><div class="line">Proportion Explained  <span class="number">0.55</span> <span class="number">0.45</span></div><div class="line">Cumulative Proportion <span class="number">0.55</span> <span class="number">1.00</span></div><div class="line"></div><div class="line">Mean item complexity =  <span class="number">1.1</span></div><div class="line">Test of the hypothesis that <span class="number">2</span> components are sufficient.</div><div class="line"></div><div class="line">The root mean square of the residuals (RMSR) is  <span class="number">0.05</span> </div><div class="line"></div><div class="line">Fit based upon off diagonal values = <span class="number">0.99</span></div><div class="line">&gt; <span class="comment">#列的名字都从PC变成了RC，以表示成分被旋转。观察RC1栏的载荷，你可以发现第一主成分</span></div><div class="line">&gt; <span class="comment">#主要由前四个变量来解释（长度变量）。 RC2栏的载荷表示第二主成分主要由变量5到变量8来解</span></div><div class="line">&gt; <span class="comment">#释（容量变量）</span></div><div class="line">&gt; <span class="comment">#两个主成分旋转后的累积方差解释性没有变化（81%），变的只是各个主成分对</span></div><div class="line">&gt; <span class="comment">#方差的解释度（成分1从58%变为44%，成分2从22%变为37%）。各成分的方差解释度趋同，准确</span></div><div class="line">&gt; <span class="comment">#来说，此时应该称它们为成分而不是主成分（因为单个主成分方差最大化性质没有保留）。</span></div></pre></td></tr></table></figure>
<h3 id="4、获取主成分得分"><a href="#4、获取主成分得分" class="headerlink" title="4、获取主成分得分"></a>4、获取主成分得分</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="keyword">library</span>(psych)</div><div class="line">&gt; pc &lt;- principal(USJudgeRatings[,-<span class="number">1</span>], nfactors = <span class="number">1</span>, scores = <span class="literal">TRUE</span>)</div><div class="line">&gt; head(pc$scores)</div><div class="line">                 PC1</div><div class="line">AARONSON,L.H.  -<span class="number">0.19</span></div><div class="line">ALEXANDER,J.M.  <span class="number">0.75</span></div><div class="line">ARMENTANO,A.J.  <span class="number">0.07</span></div><div class="line">BERDON,R.I.     <span class="number">1.14</span></div><div class="line">BRACKEN,J.J.   -<span class="number">2.16</span></div><div class="line">BURNS,E.B.      <span class="number">0.77</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#当主成分分析基于相关系数矩阵时，原始数据便不可用了，也不可能获取每个观测的主成分</span></div><div class="line">&gt; <span class="comment">#得分，但是你可以得到用来计算主成分得分的系数</span></div><div class="line">&gt; </div><div class="line">&gt; rc &lt;- principal(Harman23.cor$cov, nfactors = <span class="number">2</span>, rotate=<span class="string">"varimax"</span>)</div><div class="line">&gt; round(unclass(rc$weight), <span class="number">2</span>)</div><div class="line">                 RC1   RC2</div><div class="line">height          <span class="number">0.28</span> -<span class="number">0.05</span></div><div class="line">arm.span        <span class="number">0.30</span> -<span class="number">0.08</span></div><div class="line">forearm         <span class="number">0.30</span> -<span class="number">0.09</span></div><div class="line">lower.leg       <span class="number">0.28</span> -<span class="number">0.06</span></div><div class="line">weight         -<span class="number">0.06</span>  <span class="number">0.33</span></div><div class="line">bitro.diameter -<span class="number">0.08</span>  <span class="number">0.32</span></div><div class="line">chest.girth    -<span class="number">0.10</span>  <span class="number">0.34</span></div><div class="line">chest.width    -<span class="number">0.04</span>  <span class="number">0.27</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#则各记录的得分PC1 = 0.28*height +...-0.04 * chest.width</span></div><div class="line">&gt; <span class="comment">#得分PC2 = -0.05*height +...+0.27 * chest.width</span></div></pre></td></tr></table></figure>
<h2 id="探索性因子分析"><a href="#探索性因子分析" class="headerlink" title="探索性因子分析"></a>探索性因子分析</h2><h3 id="1、公因子数"><a href="#1、公因子数" class="headerlink" title="1、公因子数"></a>1、公因子数</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">##探索性因子分析</span></div><div class="line">&gt; <span class="comment">#EFA的目标是通过发掘隐藏在数据下的一组较少的、更为基本的无法观测的变量，来解释一</span></div><div class="line">&gt; <span class="comment">#组可观测变量的相关性。这些虚拟的、无法观测的变量称作因子。每个因子被认为可解释多个</span></div><div class="line">&gt; <span class="comment">#观测变量间共有的方差，因此准确来说，它们应该称作公共因子。</span></div><div class="line">&gt; <span class="comment">#112个人参与了六个测验，包括非语言的普通智力测验（general）、画图测验（picture）、积木图案测验（blocks）、迷津测验（maze）、</span></div><div class="line">&gt; <span class="comment">#阅读测验（reading）和词汇测验（vocab）。我们如何用一组较少的、潜在的心理学因素来解</span></div><div class="line">&gt; <span class="comment">#释参与者的测验得分呢？</span></div><div class="line">&gt; options(digits=<span class="number">2</span>)</div><div class="line">&gt; covariances &lt;- ability.cov$cov</div><div class="line">&gt; correlations &lt;- cov2cor(covariances)</div><div class="line">&gt; </div><div class="line">&gt; fa.parallel(correlations, n.obs = <span class="number">112</span>, fa=<span class="string">"both"</span>, n.iter=<span class="number">100</span>, main=<span class="string">"Scree plots with parallel analysis"</span>)</div><div class="line">The estimated weights <span class="keyword">for</span> the factor scores are probably incorrect.  Try a different factor extraction method.</div><div class="line">The estimated weights <span class="keyword">for</span> the factor scores are probably incorrect.  Try a different factor extraction method.</div><div class="line">The estimated weights <span class="keyword">for</span> the factor scores are probably incorrect.  Try a different factor extraction method.</div><div class="line">The estimated weights <span class="keyword">for</span> the factor scores are probably incorrect.  Try a different factor extraction method.</div><div class="line">The estimated weights <span class="keyword">for</span> the factor scores are probably incorrect.  Try a different factor extraction method.</div><div class="line">The estimated weights <span class="keyword">for</span> the factor scores are probably incorrect.  Try a different factor extraction method.</div><div class="line">The estimated weights <span class="keyword">for</span> the factor scores are probably incorrect.  Try a different factor extraction method.</div><div class="line">The estimated weights <span class="keyword">for</span> the factor scores are probably incorrect.  Try a different factor extraction method.</div><div class="line">The estimated weights <span class="keyword">for</span> the factor scores are probably incorrect.  Try a different factor extraction method.</div><div class="line">The estimated weights <span class="keyword">for</span> the factor scores are probably incorrect.  Try a different factor extraction method.</div><div class="line">The estimated weights <span class="keyword">for</span> the factor scores are probably incorrect.  Try a different factor extraction method.</div><div class="line">The estimated weights <span class="keyword">for</span> the factor scores are probably incorrect.  Try a different factor extraction method.</div><div class="line">The estimated weights <span class="keyword">for</span> the factor scores are probably incorrect.  Try a different factor extraction method.</div><div class="line">The estimated weights <span class="keyword">for</span> the factor scores are probably incorrect.  Try a different factor extraction method.</div><div class="line">The estimated weights <span class="keyword">for</span> the factor scores are probably incorrect.  Try a different factor extraction method.</div><div class="line">Parallel analysis suggests that the number of factors =  <span class="number">2</span>  and the number of components =  <span class="number">1</span> </div><div class="line">There were <span class="number">18</span> warnings (use warnings() to see them)</div><div class="line">&gt; <span class="comment">#图中同时展示了PCA和EFA的结果。PCA结果建议提取一个或者两个成分， EFA建议提取两个因子</span></div><div class="line">&gt; <span class="comment">#对于EFA， Kaiser-Harris准则的特征值数大于0，而不是1。</span></div><div class="line">&gt;</div></pre></td></tr></table></figure>
<p><img src="/2017/11/24/chapter14-主成分和因子分析/fa0.png" alt=""></p>
<h3 id="2、提取公共因子"><a href="#2、提取公共因子" class="headerlink" title="2、提取公共因子"></a>2、提取公共因子</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#提取公共因子</span></div><div class="line">&gt; <span class="comment"># X1 = a1F1 + a2F2 + ... +anFn</span></div><div class="line">&gt; <span class="comment">#fa(r, nfactors=, n.objs=, rotate=, scores=, fm=)</span></div><div class="line">&gt; <span class="comment">#r是相关系数矩阵或者原始数据矩阵；</span></div><div class="line">&gt; <span class="comment"># nfactors设定提取的因子数（默认为1）；</span></div><div class="line">&gt; <span class="comment"># n.obs是观测数（输入相关系数矩阵时需要填写）；</span></div><div class="line">&gt; <span class="comment"># rotate设定旋转的方法（默认互变异数最小法）；</span></div><div class="line">&gt; <span class="comment"># scores设定是否计算因子得分（默认不计算）；</span></div><div class="line">&gt; <span class="comment"># fm设定因子化方法（默认极小残差法）</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#提取公共因子的方法很多，包括最大似然法（ml）、主轴迭代法（pa）、加权</span></div><div class="line">&gt; <span class="comment">#最小二乘法（wls）、广义加权最小二乘法（gls）和最小残差法（minres）</span></div><div class="line">&gt; <span class="comment">#统计学家青睐使用最大似然法，因为它有良好的统计性质。不过有时候最大似然法不会收敛，此时使用主轴迭代法</span></div><div class="line">&gt; <span class="comment">#效果会很好。</span></div><div class="line">&gt; </div><div class="line">&gt; fa &lt;- fa(correlations, nfactors = <span class="number">2</span>, rotate = <span class="string">"none"</span>, fm=<span class="string">"pa"</span>)</div><div class="line">&gt; fa</div><div class="line">Factor Analysis using method =  pa</div><div class="line">Call: fa(r = correlations, nfactors = <span class="number">2</span>, rotate = <span class="string">"none"</span>, fm = <span class="string">"pa"</span>)</div><div class="line">Standardized loadings (pattern matrix) based upon correlation matrix</div><div class="line">         PA1   PA2   h2    u2 com</div><div class="line">general <span class="number">0.75</span>  <span class="number">0.07</span> <span class="number">0.57</span> <span class="number">0.432</span> <span class="number">1.0</span></div><div class="line">picture <span class="number">0.52</span>  <span class="number">0.32</span> <span class="number">0.38</span> <span class="number">0.623</span> <span class="number">1.7</span></div><div class="line">blocks  <span class="number">0.75</span>  <span class="number">0.52</span> <span class="number">0.83</span> <span class="number">0.166</span> <span class="number">1.8</span></div><div class="line">maze    <span class="number">0.39</span>  <span class="number">0.22</span> <span class="number">0.20</span> <span class="number">0.798</span> <span class="number">1.6</span></div><div class="line">reading <span class="number">0.81</span> -<span class="number">0.51</span> <span class="number">0.91</span> <span class="number">0.089</span> <span class="number">1.7</span></div><div class="line">vocab   <span class="number">0.73</span> -<span class="number">0.39</span> <span class="number">0.69</span> <span class="number">0.313</span> <span class="number">1.5</span></div><div class="line"></div><div class="line">                       PA1  PA2</div><div class="line">SS loadings           <span class="number">2.75</span> <span class="number">0.83</span></div><div class="line">Proportion Var        <span class="number">0.46</span> <span class="number">0.14</span></div><div class="line">Cumulative Var        <span class="number">0.46</span> <span class="number">0.60</span></div><div class="line">Proportion Explained  <span class="number">0.77</span> <span class="number">0.23</span></div><div class="line">Cumulative Proportion <span class="number">0.77</span> <span class="number">1.00</span></div><div class="line"></div><div class="line">Mean item complexity =  <span class="number">1.5</span></div><div class="line">Test of the hypothesis that <span class="number">2</span> factors are sufficient.</div><div class="line"></div><div class="line">The degrees of freedom <span class="keyword">for</span> the null model are  <span class="number">15</span>  and the objective <span class="keyword">function</span> was  <span class="number">2.5</span></div><div class="line">The degrees of freedom <span class="keyword">for</span> the model are <span class="number">4</span>  and the objective <span class="keyword">function</span> was  <span class="number">0.07</span> </div><div class="line"></div><div class="line">The root mean square of the residuals (RMSR) is  <span class="number">0.03</span> </div><div class="line">The df corrected root mean square of the residuals is  <span class="number">0.06</span> </div><div class="line"></div><div class="line">Fit based upon off diagonal values = <span class="number">0.99</span></div><div class="line">Measures of factor score adequacy             </div><div class="line">                                                   PA1  PA2</div><div class="line">Correlation of (regression) scores with factors   <span class="number">0.96</span> <span class="number">0.92</span></div><div class="line">Multiple R square of scores with factors          <span class="number">0.93</span> <span class="number">0.84</span></div><div class="line">Minimum correlation of possible factor scores     <span class="number">0.86</span> <span class="number">0.68</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#两个因子解释了六个心理学测验60%的方差。不过因子载荷阵的意义并不太好解</span></div><div class="line">&gt; <span class="comment">#释，此时使用因子旋转将有助于因子的解释。</span></div></pre></td></tr></table></figure>
<h3 id="3、因子旋转"><a href="#3、因子旋转" class="headerlink" title="3、因子旋转"></a>3、因子旋转</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#正交旋转</span></div><div class="line">&gt; fa.varimax &lt;- fa(correlations, nfactors=<span class="number">2</span>, rotate=<span class="string">"varimax"</span>, fm=<span class="string">"pa"</span>)</div><div class="line">&gt; fa.varimax</div><div class="line">Factor Analysis using method =  pa</div><div class="line">Call: fa(r = correlations, nfactors = <span class="number">2</span>, rotate = <span class="string">"varimax"</span>, fm = <span class="string">"pa"</span>)</div><div class="line">Standardized loadings (pattern matrix) based upon correlation matrix</div><div class="line">         PA1  PA2   h2    u2 com</div><div class="line">general <span class="number">0.49</span> <span class="number">0.57</span> <span class="number">0.57</span> <span class="number">0.432</span> <span class="number">2.0</span></div><div class="line">picture <span class="number">0.16</span> <span class="number">0.59</span> <span class="number">0.38</span> <span class="number">0.623</span> <span class="number">1.1</span></div><div class="line">blocks  <span class="number">0.18</span> <span class="number">0.89</span> <span class="number">0.83</span> <span class="number">0.166</span> <span class="number">1.1</span></div><div class="line">maze    <span class="number">0.13</span> <span class="number">0.43</span> <span class="number">0.20</span> <span class="number">0.798</span> <span class="number">1.2</span></div><div class="line">reading <span class="number">0.93</span> <span class="number">0.20</span> <span class="number">0.91</span> <span class="number">0.089</span> <span class="number">1.1</span></div><div class="line">vocab   <span class="number">0.80</span> <span class="number">0.23</span> <span class="number">0.69</span> <span class="number">0.313</span> <span class="number">1.2</span></div><div class="line"></div><div class="line">                       PA1  PA2</div><div class="line">SS loadings           <span class="number">1.83</span> <span class="number">1.75</span></div><div class="line">Proportion Var        <span class="number">0.30</span> <span class="number">0.29</span></div><div class="line">Cumulative Var        <span class="number">0.30</span> <span class="number">0.60</span></div><div class="line">Proportion Explained  <span class="number">0.51</span> <span class="number">0.49</span></div><div class="line">Cumulative Proportion <span class="number">0.51</span> <span class="number">1.00</span></div><div class="line"></div><div class="line">Mean item complexity =  <span class="number">1.3</span></div><div class="line">Test of the hypothesis that <span class="number">2</span> factors are sufficient.</div><div class="line"></div><div class="line">The degrees of freedom <span class="keyword">for</span> the null model are  <span class="number">15</span>  and the objective <span class="keyword">function</span> was  <span class="number">2.5</span></div><div class="line">The degrees of freedom <span class="keyword">for</span> the model are <span class="number">4</span>  and the objective <span class="keyword">function</span> was  <span class="number">0.07</span> </div><div class="line"></div><div class="line">The root mean square of the residuals (RMSR) is  <span class="number">0.03</span> </div><div class="line">The df corrected root mean square of the residuals is  <span class="number">0.06</span> </div><div class="line"></div><div class="line">Fit based upon off diagonal values = <span class="number">0.99</span></div><div class="line">Measures of factor score adequacy             </div><div class="line">                                                   PA1  PA2</div><div class="line">Correlation of (regression) scores with factors   <span class="number">0.96</span> <span class="number">0.92</span></div><div class="line">Multiple R square of scores with factors          <span class="number">0.91</span> <span class="number">0.85</span></div><div class="line">Minimum correlation of possible factor scores     <span class="number">0.82</span> <span class="number">0.71</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#阅读和词汇在第一因子上载荷较大，画图、积木图案和迷宫</span></div><div class="line">&gt; <span class="comment">#在第二因子上载荷较大，非语言的普通智力测量在两个因子上载荷较为平均，这表明存在一个语</span></div><div class="line">&gt; <span class="comment">#言智力因子和一个非语言智力因子。</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#使用正交旋转将人为地强制两个因子不相关。如果想允许两个因子相关该怎么办呢？此时可</span></div><div class="line">&gt; <span class="comment">#以使用斜交转轴法，比如promax</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="keyword">library</span>(GPArotation)</div><div class="line">&gt; fa.promax &lt;- fa(correlations, nfactors=<span class="number">2</span>, rotate=<span class="string">"promax"</span>, fm=<span class="string">"pa"</span>)</div><div class="line">Warning message:</div><div class="line">In fac(r = r, nfactors = nfactors, n.obs = n.obs, rotate = rotate,  :</div><div class="line">   A loading greater than abs(<span class="number">1</span>) was detected.  Examine the loadings carefully.</div><div class="line">&gt; <span class="comment">#因子斜交的结果图形</span></div><div class="line">&gt; factor.plot(fa.promax, labels=rownames(fa.promax$loadings))</div></pre></td></tr></table></figure>
<p><img src="/2017/11/24/chapter14-主成分和因子分析/fa1.png" alt=""><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#若使simple = TRUE，那么将仅显示每个因子下最大的载荷，以及因子</span></div><div class="line">&gt; <span class="comment">#间的相关系数。这类图形在有多个因子时十分实用。</span></div><div class="line">&gt; fa.diagram(fa.promax, simple = <span class="literal">FALSE</span>)</div></pre></td></tr></table></figure></p>
<p><img src="/2017/11/24/chapter14-主成分和因子分析/fa2.png" alt=""></p>
<h3 id="4、因子得分"><a href="#4、因子得分" class="headerlink" title="4、因子得分"></a>4、因子得分</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#因子得分</span></div><div class="line">&gt; fa.promax &lt;- fa(correlations, nfactors=<span class="number">2</span>, rotate=<span class="string">"promax"</span>, fm=<span class="string">"pa"</span>, score=<span class="literal">TRUE</span>)</div><div class="line">Warning message:</div><div class="line">In fac(r = r, nfactors = nfactors, n.obs = n.obs, rotate = rotate,  :</div><div class="line">   A loading greater than abs(<span class="number">1</span>) was detected.  Examine the loadings carefully.</div><div class="line">&gt; <span class="comment">#获得用来计算因子得分的权重</span></div><div class="line">&gt; fa.promax$weights</div><div class="line">          PA1   PA2</div><div class="line">general <span class="number">0.078</span> <span class="number">0.211</span></div><div class="line">picture <span class="number">0.020</span> <span class="number">0.090</span></div><div class="line">blocks  <span class="number">0.037</span> <span class="number">0.702</span></div><div class="line">maze    <span class="number">0.027</span> <span class="number">0.035</span></div><div class="line">reading <span class="number">0.743</span> <span class="number">0.030</span></div><div class="line">vocab   <span class="number">0.177</span> <span class="number">0.036</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;主成分和因子分析&quot;&gt;&lt;a href=&quot;#主成分和因子分析&quot; class=&quot;headerlink&quot; title=&quot;主成分和因子分析&quot;&gt;&lt;/a&gt;主成分和因子分析&lt;/h1&gt;&lt;h2 id=&quot;主成分分析&quot;&gt;&lt;a href=&quot;#主成分分析&quot; class=&quot;headerlink
    
    </summary>
    
      <category term="R语言" scheme="https://pingansheng.github.io/categories/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R语言" scheme="https://pingansheng.github.io/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="广义线性模型" scheme="https://pingansheng.github.io/tags/%E5%B9%BF%E4%B9%89%E7%BA%BF%E6%80%A7%E6%A8%A1%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>chapter13-广义线性模型</title>
    <link href="https://pingansheng.github.io/2017/11/23/chapter13-%E5%B9%BF%E4%B9%89%E7%BA%BF%E6%80%A7%E6%A8%A1%E5%9E%8B/"/>
    <id>https://pingansheng.github.io/2017/11/23/chapter13-广义线性模型/</id>
    <published>2017-11-23T05:42:07.000Z</published>
    <updated>2024-02-24T02:35:09.955Z</updated>
    
    <content type="html"><![CDATA[<h1 id="广义线性模型"><a href="#广义线性模型" class="headerlink" title="广义线性模型"></a>广义线性模型</h1><h2 id="1、广义线性模型和glm函数、logistics回归"><a href="#1、广义线性模型和glm函数、logistics回归" class="headerlink" title="1、广义线性模型和glm函数、logistics回归"></a>1、广义线性模型和glm函数、logistics回归</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#使用glm函数进行处理，可以分析多种分布，二分，多值，数值等，此处不限制因变量Y为服从正态分布</span></div><div class="line">&gt; <span class="comment">#Logistic回归</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="keyword">library</span>(AER)</div><div class="line">&gt; data(<span class="string">"Affairs"</span>,package = <span class="string">"AER"</span>)</div><div class="line">&gt; summary(Affairs)</div><div class="line">    affairs          gender         age         yearsmarried    children  religiousness  </div><div class="line"> Min.   : <span class="number">0.000</span>   female:<span class="number">315</span>   Min.   :<span class="number">17.50</span>   Min.   : <span class="number">0.125</span>   no :<span class="number">171</span>   Min.   :<span class="number">1.000</span>  </div><div class="line"> 1st Qu.: <span class="number">0.000</span>   male  :<span class="number">286</span>   1st Qu.:<span class="number">27.00</span>   1st Qu.: <span class="number">4.000</span>   yes:<span class="number">430</span>   1st Qu.:<span class="number">2.000</span>  </div><div class="line"> Median : <span class="number">0.000</span>                Median :<span class="number">32.00</span>   Median : <span class="number">7.000</span>             Median :<span class="number">3.000</span>  </div><div class="line"> Mean   : <span class="number">1.456</span>                Mean   :<span class="number">32.49</span>   Mean   : <span class="number">8.178</span>             Mean   :<span class="number">3.116</span>  </div><div class="line"> 3rd Qu.: <span class="number">0.000</span>                3rd Qu.:<span class="number">37.00</span>   3rd Qu.:<span class="number">15.000</span>             3rd Qu.:<span class="number">4.000</span>  </div><div class="line"> Max.   :<span class="number">12.000</span>                Max.   :<span class="number">57.00</span>   Max.   :<span class="number">15.000</span>             Max.   :<span class="number">5.000</span>  </div><div class="line">   education       occupation        rating     </div><div class="line"> Min.   : <span class="number">9.00</span>   Min.   :<span class="number">1.000</span>   Min.   :<span class="number">1.000</span>  </div><div class="line"> 1st Qu.:<span class="number">14.00</span>   1st Qu.:<span class="number">3.000</span>   1st Qu.:<span class="number">3.000</span>  </div><div class="line"> Median :<span class="number">16.00</span>   Median :<span class="number">5.000</span>   Median :<span class="number">4.000</span>  </div><div class="line"> Mean   :<span class="number">16.17</span>   Mean   :<span class="number">4.195</span>   Mean   :<span class="number">3.932</span>  </div><div class="line"> 3rd Qu.:<span class="number">18.00</span>   3rd Qu.:<span class="number">6.000</span>   3rd Qu.:<span class="number">5.000</span>  </div><div class="line"> Max.   :<span class="number">20.00</span>   Max.   :<span class="number">7.000</span>   Max.   :<span class="number">5.000</span>  </div><div class="line">&gt; Affairs$ynAffair[Affairs$affairs &gt; <span class="number">0</span> ] &lt;- <span class="number">1</span></div><div class="line">&gt; Affairs$ynAffair[Affairs$affairs == <span class="number">0</span> ] &lt;- <span class="number">0</span></div><div class="line">&gt; </div><div class="line">&gt; Affairs$ynAffair &lt;- factor(Affairs$ynAffair, levels = c(<span class="number">0</span>,<span class="number">1</span>), labels = c(<span class="string">"No"</span>, <span class="string">"Yes"</span>))</div><div class="line">&gt; </div><div class="line">&gt; table (Affairs$ynAffair)</div><div class="line"></div><div class="line"> No Yes </div><div class="line"><span class="number">451</span> <span class="number">150</span> </div><div class="line">&gt; </div><div class="line">&gt; fit.full &lt;- glm(ynAffair ~ gender + age + yearsmarried + children + religiousness + education + occupation + rating, data=Affairs,family = binomial())</div><div class="line">&gt; summary(fit.full)</div><div class="line"></div><div class="line">Call:</div><div class="line">glm(formula = ynAffair ~ gender + age + yearsmarried + children + </div><div class="line">    religiousness + education + occupation + rating, family = binomial(), </div><div class="line">    data = Affairs)</div><div class="line"></div><div class="line">Deviance Residuals: </div><div class="line">    Min       1Q   Median       3Q      Max  </div><div class="line">-<span class="number">1.5713</span>  -<span class="number">0.7499</span>  -<span class="number">0.5690</span>  -<span class="number">0.2539</span>   <span class="number">2.5191</span>  </div><div class="line"></div><div class="line">Coefficients:</div><div class="line">              Estimate Std. Error z value Pr(&gt;|z|)    </div><div class="line">(Intercept)    <span class="number">1.37726</span>    <span class="number">0.88776</span>   <span class="number">1.551</span> <span class="number">0.120807</span>    </div><div class="line">gendermale     <span class="number">0.28029</span>    <span class="number">0.23909</span>   <span class="number">1.172</span> <span class="number">0.241083</span>    </div><div class="line">age           -<span class="number">0.04426</span>    <span class="number">0.01825</span>  -<span class="number">2.425</span> <span class="number">0.015301</span> *  </div><div class="line">yearsmarried   <span class="number">0.09477</span>    <span class="number">0.03221</span>   <span class="number">2.942</span> <span class="number">0.003262</span> ** </div><div class="line">childrenyes    <span class="number">0.39767</span>    <span class="number">0.29151</span>   <span class="number">1.364</span> <span class="number">0.172508</span>    </div><div class="line">religiousness -<span class="number">0.32472</span>    <span class="number">0.08975</span>  -<span class="number">3.618</span> <span class="number">0.000297</span> ***</div><div class="line">education      <span class="number">0.02105</span>    <span class="number">0.05051</span>   <span class="number">0.417</span> <span class="number">0.676851</span>    </div><div class="line">occupation     <span class="number">0.03092</span>    <span class="number">0.07178</span>   <span class="number">0.431</span> <span class="number">0.666630</span>    </div><div class="line">rating        -<span class="number">0.46845</span>    <span class="number">0.09091</span>  -<span class="number">5.153</span> <span class="number">2.56e-07</span> ***</div><div class="line">---</div><div class="line">Signif. codes:  <span class="number">0</span> ‘***’ <span class="number">0.001</span> ‘**’ <span class="number">0.01</span> ‘*’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></div><div class="line"></div><div class="line">(Dispersion parameter <span class="keyword">for</span> binomial family taken to be <span class="number">1</span>)</div><div class="line"></div><div class="line">    Null deviance: <span class="number">675.38</span>  on <span class="number">600</span>  degrees of freedom</div><div class="line">Residual deviance: <span class="number">609.51</span>  on <span class="number">592</span>  degrees of freedom</div><div class="line">AIC: <span class="number">627.51</span></div><div class="line"></div><div class="line">Number of Fisher Scoring iterations: <span class="number">4</span></div><div class="line"></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#去除不显著的因素后再次进行建模</span></div><div class="line">&gt; fit.some &lt;- glm(ynAffair ~  age + yearsmarried +  religiousness +  rating, data=Affairs,family = binomial())</div><div class="line">&gt; summary(fit.some)</div><div class="line"></div><div class="line">Call:</div><div class="line">glm(formula = ynAffair ~ age + yearsmarried + religiousness + </div><div class="line">    rating, family = binomial(), data = Affairs)</div><div class="line"></div><div class="line">Deviance Residuals: </div><div class="line">    Min       1Q   Median       3Q      Max  </div><div class="line">-<span class="number">1.6278</span>  -<span class="number">0.7550</span>  -<span class="number">0.5701</span>  -<span class="number">0.2624</span>   <span class="number">2.3998</span>  </div><div class="line"></div><div class="line">Coefficients:</div><div class="line">              Estimate Std. Error z value Pr(&gt;|z|)    </div><div class="line">(Intercept)    <span class="number">1.93083</span>    <span class="number">0.61032</span>   <span class="number">3.164</span> <span class="number">0.001558</span> ** </div><div class="line">age           -<span class="number">0.03527</span>    <span class="number">0.01736</span>  -<span class="number">2.032</span> <span class="number">0.042127</span> *  </div><div class="line">yearsmarried   <span class="number">0.10062</span>    <span class="number">0.02921</span>   <span class="number">3.445</span> <span class="number">0.000571</span> ***</div><div class="line">religiousness -<span class="number">0.32902</span>    <span class="number">0.08945</span>  -<span class="number">3.678</span> <span class="number">0.000235</span> ***</div><div class="line">rating        -<span class="number">0.46136</span>    <span class="number">0.08884</span>  -<span class="number">5.193</span> <span class="number">2.06e-07</span> ***</div><div class="line">---</div><div class="line">Signif. codes:  <span class="number">0</span> ‘***’ <span class="number">0.001</span> ‘**’ <span class="number">0.01</span> ‘*’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></div><div class="line"></div><div class="line">(Dispersion parameter <span class="keyword">for</span> binomial family taken to be <span class="number">1</span>)</div><div class="line"></div><div class="line">    Null deviance: <span class="number">675.38</span>  on <span class="number">600</span>  degrees of freedom</div><div class="line">Residual deviance: <span class="number">615.36</span>  on <span class="number">596</span>  degrees of freedom</div><div class="line">AIC: <span class="number">625.36</span></div><div class="line"></div><div class="line">Number of Fisher Scoring iterations: <span class="number">4</span></div><div class="line"></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#新模型的每个回归系数都非常显著（p&lt;0.05）。由于两模型嵌套（fit.some是fit.full</span></div><div class="line">&gt; <span class="comment">#的一个子集），你可以使用anova()函数对它们进行比较，对于广义线性回归，可用卡方检验。</span></div><div class="line">&gt; </div><div class="line">&gt; anova(fit.some, fit.full, test = <span class="string">"Chisq"</span>)</div><div class="line">Analysis of Deviance Table</div><div class="line"></div><div class="line">Model <span class="number">1</span>: ynAffair ~ age + yearsmarried + religiousness + rating</div><div class="line">Model <span class="number">2</span>: ynAffair ~ gender + age + yearsmarried + children + religiousness + </div><div class="line">    education + occupation + rating</div><div class="line">  Resid. Df Resid. Dev Df Deviance Pr(&gt;Chi)</div><div class="line"><span class="number">1</span>       <span class="number">596</span>     <span class="number">615.36</span>                     </div><div class="line"><span class="number">2</span>       <span class="number">592</span>     <span class="number">609.51</span>  <span class="number">4</span>   <span class="number">5.8474</span>   <span class="number">0.2108</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#卡方值不显著，得知两种模型的解释度是一样的</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#回归系数</span></div><div class="line">&gt; coef(fit.some)</div><div class="line">  (Intercept)           age  yearsmarried religiousness        rating </div><div class="line">   <span class="number">1.93083017</span>   -<span class="number">0.03527112</span>    <span class="number">0.10062274</span>   -<span class="number">0.32902386</span>   -<span class="number">0.46136144</span> </div><div class="line">&gt; <span class="comment">#在Logistic回归中，响应变量是Y=1的对数优势比（log）。回归系数含义是当其他预测变量不</span></div><div class="line">&gt; <span class="comment">#变时，一单位预测变量的变化可引起的响应变量对数优势比的变化。</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#由于对数优势比解释性差，你可对结果进行指数化：</span></div><div class="line">&gt; exp(coef(fit.some))</div><div class="line">  (Intercept)           age  yearsmarried religiousness        rating </div><div class="line">    <span class="number">6.8952321</span>     <span class="number">0.9653437</span>     <span class="number">1.1058594</span>     <span class="number">0.7196258</span>     <span class="number">0.6304248</span> </div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#可以看到婚龄增加一年，婚外情的优势比将乘以1.106（保持年龄、宗教信仰和婚姻评定不</span></div><div class="line">&gt; <span class="comment">#变）；相反，年龄增加一岁，婚外情的的优势比则乘以0.965。因此，随着婚龄的增加和年龄、宗</span></div><div class="line">&gt; <span class="comment">#教信仰与婚姻评分的降低，婚外情优势比将上升。因为预测变量不能等于0，截距项在此处没有</span></div><div class="line">&gt; <span class="comment">#什么特定含义。</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#还可使用confint()函数获取系数的置信区间。例如， exp(confint(fit.reduced))</span></div><div class="line">&gt; <span class="comment">#可在优势比尺度上得到系数95%的置信区间。</span></div><div class="line">&gt; exp(confint(fit.some))</div><div class="line">Waiting <span class="keyword">for</span> profiling to be done...</div><div class="line">                  <span class="number">2.5</span> %     <span class="number">97.5</span> %</div><div class="line">(Intercept)   <span class="number">2.1255764</span> <span class="number">23.3506030</span></div><div class="line">age           <span class="number">0.9323342</span>  <span class="number">0.9981470</span></div><div class="line">yearsmarried  <span class="number">1.0448584</span>  <span class="number">1.1718250</span></div><div class="line">religiousness <span class="number">0.6026782</span>  <span class="number">0.8562807</span></div><div class="line">rating        <span class="number">0.5286586</span>  <span class="number">0.7493370</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#以概率的方式思考比使用优势比更直观。使用predict()函数，你</span></div><div class="line">&gt; <span class="comment">#可观察某个预测变量在各个水平时对结果概率的影响。</span></div><div class="line">&gt; </div><div class="line">&gt; testData &lt;- data.frame(rating=c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>), age=mean(Affairs$age), yearsmarried=mean(Affairs$yearsmarried),</div><div class="line">+                        religiousness=mean(Affairs$religiousness))</div><div class="line">&gt; </div><div class="line">&gt; testData$prob &lt;- predict(fit.some, newdata = testData, type=<span class="string">"response"</span>)</div><div class="line">&gt; </div><div class="line">&gt; testData</div><div class="line">  rating      age yearsmarried religiousness      prob</div><div class="line"><span class="number">1</span>      <span class="number">1</span> <span class="number">32.48752</span>     <span class="number">8.177696</span>      <span class="number">3.116473</span> <span class="number">0.5302296</span></div><div class="line"><span class="number">2</span>      <span class="number">2</span> <span class="number">32.48752</span>     <span class="number">8.177696</span>      <span class="number">3.116473</span> <span class="number">0.4157377</span></div><div class="line"><span class="number">3</span>      <span class="number">3</span> <span class="number">32.48752</span>     <span class="number">8.177696</span>      <span class="number">3.116473</span> <span class="number">0.3096712</span></div><div class="line"><span class="number">4</span>      <span class="number">4</span> <span class="number">32.48752</span>     <span class="number">8.177696</span>      <span class="number">3.116473</span> <span class="number">0.2204547</span></div><div class="line"><span class="number">5</span>      <span class="number">5</span> <span class="number">32.48752</span>     <span class="number">8.177696</span>      <span class="number">3.116473</span> <span class="number">0.1513079</span></div><div class="line">&gt; <span class="comment">#其他不变情况下 评级从1到5 婚外情概率从0.53降低至0.15</span></div><div class="line">&gt; </div><div class="line">&gt; testData2 &lt;- data.frame(age=seq(<span class="number">17</span>,<span class="number">57</span>,<span class="number">10</span>), rating=mean(Affairs$rating), yearsmarried=mean(Affairs$yearsmarried),</div><div class="line">+                        religiousness=mean(Affairs$religiousness))</div><div class="line">&gt; </div><div class="line">&gt; testData2$prob &lt;- predict(fit.some, newdata = testData2, type=<span class="string">"response"</span>)</div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#对比图 评级影响更大 更剧烈</span></div><div class="line">&gt; plot(testData$prob)</div><div class="line">&gt; lines(testData2$prob)</div></pre></td></tr></table></figure>
<p><img src="/2017/11/23/chapter13-广义线性模型/compare.png" alt=""></p>
<h2 id="2、logistics的过度离势"><a href="#2、logistics的过度离势" class="headerlink" title="2、logistics的过度离势"></a>2、logistics的过度离势</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#过度离势</span></div><div class="line">&gt; <span class="comment">#过度离势，即观测到的响应变量的方差大于期望的二项分布的方差。过度离势会导致奇异的</span></div><div class="line">&gt; <span class="comment">#标准误检验和不精确的显著性检验</span></div><div class="line">&gt; <span class="comment">#出现过度离势时，仍可使用glm()函数拟合Logistic回归，但此时需要将二项分布改为类二</span></div><div class="line">&gt; <span class="comment">#项分布（quasibinomial distribution）。</span></div><div class="line">&gt; <span class="comment">#检测过度离势的一种方法是比较二项分布模型的残差偏差与残差自由度，比值大于1很多表示存在过度离势</span></div><div class="line">&gt; <span class="comment">#婚外情中 模型中 Residual deviance: 615.36  on 596  degrees of freedom</span></div><div class="line">&gt; <span class="comment">#残差615.36 和 残差自由度596 比值为1.03， 不存在过度离势</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#也可使用检验法</span></div><div class="line">&gt; <span class="comment">#为此，你需要拟合模型两次，第一次使用family =</span></div><div class="line">&gt; <span class="comment">#  "binomial"，第二次使用family = "quasibinomial"。假设第一次glm()返回对象记为fit.1，</span></div><div class="line">&gt; <span class="comment">#第二次返回对象记为fit.2，那么：</span></div><div class="line">&gt; fit.1 &lt;- glm(ynAffair ~  age + yearsmarried +  religiousness +  rating, data=Affairs,family = binomial())</div><div class="line">&gt; </div><div class="line">&gt; fit.2 &lt;- glm(ynAffair ~  age + yearsmarried +  religiousness +  rating, data=Affairs,family = quasibinomial())</div><div class="line">&gt; </div><div class="line">&gt; pchisq(summary(fit.2)$dispersion * fit.1$df.residual, fit.1$df.residual, lower = <span class="literal">F</span>)</div><div class="line">[<span class="number">1</span>] <span class="number">0.340122</span></div><div class="line">&gt; <span class="comment">#p值（0.34）显然不显著（p &gt; 0.05），这更增强了我们认为不存在过度离势的信心。</span></div><div class="line">&gt; </div><div class="line">&gt;</div></pre></td></tr></table></figure>
<h2 id="3、logistics的扩展"><a href="#3、logistics的扩展" class="headerlink" title="3、logistics的扩展"></a>3、logistics的扩展</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#扩展</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#稳健Logistic回归 robust包中的glmRob()函数可用来拟合稳健的广义线性模型，包</span></div><div class="line">&gt; <span class="comment">#括稳健Logistic回归。当拟合Logistic回归模型数据出现离群点和强影响点时，稳健Logistic</span></div><div class="line">&gt; <span class="comment">#回归便可派上用场。</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#多项分布回归 若响应变量包含两个以上的无序类别（比如，已婚/寡居/离婚），便可使</span></div><div class="line">&gt; <span class="comment">#用mlogit包中的mlogit()函数拟合多项Logistic回归。</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#序数Logistic回归 若响应变量是一组有序的类别（比如，信用风险为差/良/好），便可</span></div><div class="line">&gt; <span class="comment">#使用rms包中的lrm()函数拟合序数Logistic回归。</span></div><div class="line">&gt;</div></pre></td></tr></table></figure>
<h2 id="4、泊松回归"><a href="#4、泊松回归" class="headerlink" title="4、泊松回归"></a>4、泊松回归</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#泊松回归</span></div><div class="line">&gt; <span class="comment">#当通过一系列连续型和/或类别型预测变量来预测计数型结果变量时，泊松回归是一个非常</span></div><div class="line">&gt; <span class="comment">#有用的工具。</span></div><div class="line">&gt; </div><div class="line">&gt; data(breslow.dat, package=<span class="string">"robust"</span>)</div><div class="line">&gt; </div><div class="line">&gt; names(breslow.dat)</div><div class="line"> [<span class="number">1</span>] <span class="string">"ID"</span>    <span class="string">"Y1"</span>    <span class="string">"Y2"</span>    <span class="string">"Y3"</span>    <span class="string">"Y4"</span>    <span class="string">"Base"</span>  <span class="string">"Age"</span>   <span class="string">"Trt"</span>   <span class="string">"Ysum"</span>  <span class="string">"sumY"</span>  <span class="string">"Age10"</span></div><div class="line">[<span class="number">12</span>] <span class="string">"Base4"</span></div><div class="line">&gt; </div><div class="line">&gt; summary(breslow.dat[c(<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">10</span>)])</div><div class="line">      Base             Age               Trt          sumY       </div><div class="line"> Min.   :  <span class="number">6.00</span>   Min.   :<span class="number">18.00</span>   placebo  :<span class="number">28</span>   Min.   :  <span class="number">0.00</span>  </div><div class="line"> 1st Qu.: <span class="number">12.00</span>   1st Qu.:<span class="number">23.00</span>   progabide:<span class="number">31</span>   1st Qu.: <span class="number">11.50</span>  </div><div class="line"> Median : <span class="number">22.00</span>   Median :<span class="number">28.00</span>                  Median : <span class="number">16.00</span>  </div><div class="line"> Mean   : <span class="number">31.22</span>   Mean   :<span class="number">28.34</span>                  Mean   : <span class="number">33.05</span>  </div><div class="line"> 3rd Qu.: <span class="number">41.00</span>   3rd Qu.:<span class="number">32.00</span>                  3rd Qu.: <span class="number">36.00</span>  </div><div class="line"> Max.   :<span class="number">151.00</span>   Max.   :<span class="number">42.00</span>                  Max.   :<span class="number">302.00</span>  </div><div class="line">&gt; </div><div class="line">&gt; </div><div class="line">&gt; opar &lt;- par(no.readonly = <span class="literal">TRUE</span>)</div><div class="line">&gt; </div><div class="line">&gt; par(mfrow=c(<span class="number">1</span>,<span class="number">2</span>))</div><div class="line">&gt; <span class="keyword">attach</span>(breslow.dat)</div><div class="line">The following objects are masked from breslow.dat (pos = <span class="number">4</span>):</div><div class="line"></div><div class="line">    Age, Age10, Base, Base4, ID, sumY, Trt, Y1, Y2, Y3, Y4, Ysum</div><div class="line"></div><div class="line">&gt; </div><div class="line">&gt; hist(sumY, breaks = <span class="number">20</span>, xlab=<span class="string">"Serzure Count"</span>, main=<span class="string">"Distribution of Serzures"</span>)</div><div class="line">&gt; boxplot(sumY ~ Trt, xlab=<span class="string">"Treatment"</span>, main=<span class="string">"Group Comparisons"</span>)</div><div class="line">&gt; par(opar)</div></pre></td></tr></table></figure>
<p><img src="/2017/11/23/chapter13-广义线性模型/compare.png" alt=""><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment"># 拟合泊松回归</span></div><div class="line">&gt; fit &lt;- glm(sumY ~ Base + Age +Trt, data = breslow.dat, family = poisson())</div><div class="line">&gt; summary(fit)</div><div class="line"></div><div class="line">Call:</div><div class="line">glm(formula = sumY ~ Base + Age + Trt, family = poisson(), data = breslow.dat)</div><div class="line"></div><div class="line">Deviance Residuals: </div><div class="line">    Min       1Q   Median       3Q      Max  </div><div class="line">-<span class="number">6.0569</span>  -<span class="number">2.0433</span>  -<span class="number">0.9397</span>   <span class="number">0.7929</span>  <span class="number">11.0061</span>  </div><div class="line"></div><div class="line">Coefficients:</div><div class="line">               Estimate Std. Error z value Pr(&gt;|z|)    </div><div class="line">(Intercept)   <span class="number">1.9488259</span>  <span class="number">0.1356191</span>  <span class="number">14.370</span>  &lt; <span class="number">2e-16</span> ***</div><div class="line">Base          <span class="number">0.0226517</span>  <span class="number">0.0005093</span>  <span class="number">44.476</span>  &lt; <span class="number">2e-16</span> ***</div><div class="line">Age           <span class="number">0.0227401</span>  <span class="number">0.0040240</span>   <span class="number">5.651</span> <span class="number">1.59e-08</span> ***</div><div class="line">Trtprogabide -<span class="number">0.1527009</span>  <span class="number">0.0478051</span>  -<span class="number">3.194</span>   <span class="number">0.0014</span> ** </div><div class="line">---</div><div class="line">Signif. codes:  <span class="number">0</span> ‘***’ <span class="number">0.001</span> ‘**’ <span class="number">0.01</span> ‘*’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></div><div class="line"></div><div class="line">(Dispersion parameter <span class="keyword">for</span> poisson family taken to be <span class="number">1</span>)</div><div class="line"></div><div class="line">    Null deviance: <span class="number">2122.73</span>  on <span class="number">58</span>  degrees of freedom</div><div class="line">Residual deviance:  <span class="number">559.44</span>  on <span class="number">55</span>  degrees of freedom</div><div class="line">AIC: <span class="number">850.71</span></div><div class="line"></div><div class="line">Number of Fisher Scoring iterations: <span class="number">5</span></div><div class="line"></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#泊松回归的因变量以条件均值的对数形式ln(λ)来建模，年龄的回归参数为0.0227，表明</span></div><div class="line">&gt; <span class="comment">#保持其他预测变量不变，年龄增加一岁，癫痫发病数的对数均值将相应增加0.03。</span></div><div class="line">&gt; <span class="comment">#指数化系数用于方便观察</span></div><div class="line">&gt; exp(coef(fit))</div><div class="line"> (Intercept)         Base          Age Trtprogabide </div><div class="line">   <span class="number">7.0204403</span>    <span class="number">1.0229102</span>    <span class="number">1.0230007</span>    <span class="number">0.8583864</span> </div><div class="line">&gt; <span class="comment">#保持其他变量不变，年龄增加一岁，期望的癫痫发病数将乘以1.023。</span></div><div class="line">&gt; <span class="comment">#与Logistic回归中的指数化参数相似，泊松模型中的指数化参数对响应</span></div><div class="line">&gt; <span class="comment">#变量的影响都是成倍增加的，而不是线性相加。</span></div><div class="line">&gt;</div></pre></td></tr></table></figure></p>
<h2 id="5、泊松回归的过度离势"><a href="#5、泊松回归的过度离势" class="headerlink" title="5、泊松回归的过度离势"></a>5、泊松回归的过度离势</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#泊松分布的过度离势</span></div><div class="line">&gt; <span class="comment">#泊松分布的方差和均值相等。当响应变量观测的方差比依据泊松分布预测的方差大时，泊松</span></div><div class="line">&gt; <span class="comment">#回归可能发生过度离势。</span></div><div class="line">&gt; <span class="comment">#与Logistic回归类似，此处如果残差偏差与残差自由度的比例远远大于1，那么表明存在过度</span></div><div class="line">&gt; <span class="comment">#离势。559.44/55 &gt;&gt;1</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#qcc包的一个方法可用于检测泊松模型的过度离势</span></div><div class="line">&gt; <span class="keyword">library</span>(qcc)</div><div class="line">&gt; qcc.overdispersion.test(breslow.dat$sumY, type=<span class="string">"poisson"</span>)</div><div class="line">                   </div><div class="line">Overdispersion test Obs.Var/Theor.Var Statistic p-value</div><div class="line">       poisson data          <span class="number">62.87013</span>  <span class="number">3646.468</span>       <span class="number">0</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#显著性检验的p值果然小于0.05，进一步表明确实存在过度离势</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#此时仍可使用glm进行拟合</span></div><div class="line">&gt; fit.od &lt;- glm(sumY ~ Base + Age +Trt, data = breslow.dat, family = quasipoisson())</div><div class="line">&gt; summary(fit.od)</div><div class="line"></div><div class="line">Call:</div><div class="line">glm(formula = sumY ~ Base + Age + Trt, family = quasipoisson(), </div><div class="line">    data = breslow.dat)</div><div class="line"></div><div class="line">Deviance Residuals: </div><div class="line">    Min       1Q   Median       3Q      Max  </div><div class="line">-<span class="number">6.0569</span>  -<span class="number">2.0433</span>  -<span class="number">0.9397</span>   <span class="number">0.7929</span>  <span class="number">11.0061</span>  </div><div class="line"></div><div class="line">Coefficients:</div><div class="line">              Estimate Std. Error t value Pr(&gt;|t|)    </div><div class="line">(Intercept)   <span class="number">1.948826</span>   <span class="number">0.465091</span>   <span class="number">4.190</span> <span class="number">0.000102</span> ***</div><div class="line">Base          <span class="number">0.022652</span>   <span class="number">0.001747</span>  <span class="number">12.969</span>  &lt; <span class="number">2e-16</span> ***</div><div class="line">Age           <span class="number">0.022740</span>   <span class="number">0.013800</span>   <span class="number">1.648</span> <span class="number">0.105085</span>    </div><div class="line">Trtprogabide -<span class="number">0.152701</span>   <span class="number">0.163943</span>  -<span class="number">0.931</span> <span class="number">0.355702</span>    </div><div class="line">---</div><div class="line">Signif. codes:  <span class="number">0</span> ‘***’ <span class="number">0.001</span> ‘**’ <span class="number">0.01</span> ‘*’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></div><div class="line"></div><div class="line">(Dispersion parameter <span class="keyword">for</span> quasipoisson family taken to be <span class="number">11.76075</span>)</div><div class="line"></div><div class="line">    Null deviance: <span class="number">2122.73</span>  on <span class="number">58</span>  degrees of freedom</div><div class="line">Residual deviance:  <span class="number">559.44</span>  on <span class="number">55</span>  degrees of freedom</div><div class="line">AIC: <span class="literal">NA</span></div><div class="line"></div><div class="line">Number of Fisher Scoring iterations: <span class="number">5</span></div><div class="line"></div><div class="line">&gt; <span class="comment">#注意，使用类泊松（quasi-Poisson）方法所得的参数估计与泊松方法相同，但标准误变大</span></div><div class="line">&gt; <span class="comment">#了许多。此处，标准误越大将会导致Trt（和Age）的p值越大于0.05。当考虑过度离势，并控</span></div><div class="line">&gt; <span class="comment">#制基础癫痫数和年龄时，并没有充足的证据表明药物治疗相对于使用安慰剂能显著降低癫痫发</span></div><div class="line">&gt; <span class="comment">#病次数</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;广义线性模型&quot;&gt;&lt;a href=&quot;#广义线性模型&quot; class=&quot;headerlink&quot; title=&quot;广义线性模型&quot;&gt;&lt;/a&gt;广义线性模型&lt;/h1&gt;&lt;h2 id=&quot;1、广义线性模型和glm函数、logistics回归&quot;&gt;&lt;a href=&quot;#1、广义线性模型和gl
    
    </summary>
    
      <category term="R语言" scheme="https://pingansheng.github.io/categories/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R语言" scheme="https://pingansheng.github.io/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="广义线性模型" scheme="https://pingansheng.github.io/tags/%E5%B9%BF%E4%B9%89%E7%BA%BF%E6%80%A7%E6%A8%A1%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>chapter12-重抽样与自助法</title>
    <link href="https://pingansheng.github.io/2017/11/21/chapter12-%E9%87%8D%E6%8A%BD%E6%A0%B7%E4%B8%8E%E8%87%AA%E5%8A%A9%E6%B3%95/"/>
    <id>https://pingansheng.github.io/2017/11/21/chapter12-重抽样与自助法/</id>
    <published>2017-11-21T03:26:58.000Z</published>
    <updated>2024-02-24T02:35:09.838Z</updated>
    
    <content type="html"><![CDATA[<h1 id="重抽样与自助法"><a href="#重抽样与自助法" class="headerlink" title="重抽样与自助法"></a>重抽样与自助法</h1><h2 id="1、置换检验"><a href="#1、置换检验" class="headerlink" title="1、置换检验"></a>1、置换检验</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#置换方法并不是将统计量与理论分布进行比较，而是将其与置换观测数据后获得的经验分布进行比较，</span></div><div class="line">&gt; <span class="comment">#根据统计量值的极端性判断是否有足够理由拒绝零假设。比如判断两组处理数据的内在差异性</span></div><div class="line">&gt; <span class="comment">#将所有观测组数据混合后重新随机拆分至所有组合计算统计量如（t值），所有统计量升序排列，根据第一个统计量</span></div><div class="line">&gt; <span class="comment">#（如t0）进行判断</span></div><div class="line">&gt; <span class="comment">#置换检验真正发挥功用的地方是处理非正态数据（如分布偏倚很大）、存在离群点、</span></div><div class="line">&gt; <span class="comment">#样本很小或无法做参数检验等情况。不过，如果初始样本对感兴趣的总体情况代表性很差，即使</span></div><div class="line">&gt; <span class="comment">#是置换检验也无法提高推断效果。</span></div><div class="line">&gt; <span class="comment">#置换检验主要用于生成检验零假设的p值，它有助于回答“效应是否存在”这样的问题。</span></div></pre></td></tr></table></figure>
<h2 id="2、使用coin包进行置换检验"><a href="#2、使用coin包进行置换检验" class="headerlink" title="2、使用coin包进行置换检验"></a>2、使用coin包进行置换检验</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#独立2样本检验和K样本检验</span></div><div class="line">&gt; <span class="keyword">library</span>(coin)</div><div class="line">&gt; score &lt;- c(<span class="number">40</span>,<span class="number">57</span>,<span class="number">45</span>,<span class="number">55</span>,<span class="number">58</span>,<span class="number">57</span>,<span class="number">64</span>,<span class="number">55</span>,<span class="number">62</span>,<span class="number">65</span>)</div><div class="line">&gt; treatment &lt;- factor(c(rep(<span class="string">"A"</span>,<span class="number">5</span>), rep(<span class="string">"B"</span>,<span class="number">5</span>)))</div><div class="line">&gt; mydata &lt;- data.frame(treatment, score)</div><div class="line">&gt; t.test(score~treatment, data=mydata,  var.equal = <span class="literal">TRUE</span>)</div><div class="line"></div><div class="line">	Two Sample t-test</div><div class="line"></div><div class="line">data:  score by treatment</div><div class="line">t = -<span class="number">2.345</span>, df = <span class="number">8</span>, p-value = <span class="number">0.04705</span></div><div class="line">alternative hypothesis: true difference <span class="keyword">in</span> means is not equal to <span class="number">0</span></div><div class="line"><span class="number">95</span> percent confidence interval:</div><div class="line"> -<span class="number">19.0405455</span>  -<span class="number">0.1594545</span></div><div class="line">sample estimates:</div><div class="line">mean <span class="keyword">in</span> group A mean <span class="keyword">in</span> group B </div><div class="line">           <span class="number">51.0</span>            <span class="number">60.6</span> </div><div class="line"></div><div class="line">&gt; <span class="comment">#distribution = "exact"，那么在零假设条件下，分布的计算是精确的（即依据所有</span></div><div class="line">&gt; <span class="comment">#可能的排列组合）,当前仅可用于两样本问题</span></div><div class="line">&gt; oneway_test(score~treatment, data=mydata,  distribution=<span class="string">'exact'</span>)</div><div class="line"></div><div class="line">	Exact Two-Sample Fisher-Pitman Permutation Test</div><div class="line"></div><div class="line">data:  score by treatment (A, B)</div><div class="line">Z = -<span class="number">1.9147</span>, p-value = <span class="number">0.07143</span></div><div class="line">alternative hypothesis: true mu is not equal to <span class="number">0</span></div><div class="line"></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#测试美国南部与非南部的监禁概率</span></div><div class="line">&gt; <span class="keyword">library</span>(MASS)</div><div class="line">&gt; UScrime &lt;- transform(UScrime, So = factor(So))</div><div class="line">&gt; wilcox_test(Prob ~ So, data=UScrime, distribution=<span class="string">"exact"</span>)</div><div class="line"></div><div class="line">	Exact Wilcoxon-Mann-Whitney Test</div><div class="line"></div><div class="line">data:  Prob by So (<span class="number">0</span>, <span class="number">1</span>)</div><div class="line">Z = -<span class="number">3.7493</span>, p-value = <span class="number">8.488e-05</span></div><div class="line">alternative hypothesis: true mu is not equal to <span class="number">0</span></div><div class="line"></div><div class="line">&gt; <span class="comment">#监禁在南部可能更多</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#K样本问题, 五种治疗方案的差异性,参考分布得自于数据9999次的置换</span></div><div class="line">&gt; <span class="keyword">library</span>(multcomp)</div><div class="line">&gt; set.seed(<span class="number">1234</span>)</div><div class="line">&gt; oneway_test(response ~ trt, data = cholesterol, distribution=approximate(B=<span class="number">9999</span>))</div><div class="line"></div><div class="line">	Approximative K-Sample Fisher-Pitman Permutation Test</div><div class="line"></div><div class="line">data:  response by trt (1time, 2times, 4times, drugD, drugE)</div><div class="line">chi-squared = <span class="number">36.381</span>, p-value &lt; <span class="number">2.2e-16</span></div><div class="line"></div><div class="line">&gt; </div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#列联表中的独立性</span></div><div class="line">&gt; <span class="comment">#检验两类别型变量的独立性</span></div><div class="line">&gt; <span class="keyword">library</span>(coin)</div><div class="line">&gt; <span class="keyword">library</span>(vcd)</div><div class="line">&gt; <span class="comment">#转换治疗效果变量为分类因子，有序因子coin会生产一个线性与线性的趋势检验，而不是卡方检验</span></div><div class="line">&gt; Arthritis &lt;- transform(Arthritis, Improved=as.factor(as.numeric(Improved)))</div><div class="line">&gt; set.seed(<span class="number">1234</span>)</div><div class="line">&gt; chisq_test(Treatment ~ Improved, data=Arthritis, distribution=approximate(B=<span class="number">9999</span>))</div><div class="line"></div><div class="line">	Approximative Pearson Chi-Squared Test</div><div class="line"></div><div class="line">data:  Treatment by Improved (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</div><div class="line">chi-squared = <span class="number">13.055</span>, p-value = <span class="number">0.0018</span></div><div class="line"></div><div class="line">&gt; </div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#两数值型变量的独立性置换检验，文盲率与谋杀率</span></div><div class="line">&gt; <span class="comment">#转换为数据框，x77是一个矩阵</span></div><div class="line">&gt; states &lt;- as.data.frame(state.x77)</div><div class="line">&gt; set.seed(<span class="number">1234</span>)</div><div class="line">&gt; spearman_test(Illiteracy~Murder, data=states, distribution=approximate(B=<span class="number">9999</span>))</div><div class="line"></div><div class="line">	Approximative Spearman Correlation Test</div><div class="line"></div><div class="line">data:  Illiteracy by Murder</div><div class="line">Z = <span class="number">4.7065</span>, p-value &lt; <span class="number">2.2e-16</span></div><div class="line">alternative hypothesis: true rho is not equal to <span class="number">0</span></div><div class="line"></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#两样本和K样本相关性检验</span></div><div class="line">&gt; <span class="keyword">library</span>(coin)</div><div class="line">&gt; <span class="keyword">library</span>(MASS)</div><div class="line">&gt; wilcoxsign_test(U1~U2, data=UScrime, distribution=<span class="string">"exact"</span>)</div><div class="line"></div><div class="line">	Exact Wilcoxon-Pratt Signed-Rank Test</div><div class="line"></div><div class="line">data:  y by x (pos, neg) </div><div class="line">	 stratified by block</div><div class="line">Z = <span class="number">5.9691</span>, p-value = <span class="number">1.421e-14</span></div><div class="line">alternative hypothesis: true mu is not equal to <span class="number">0</span></div></pre></td></tr></table></figure>
<h2 id="3、ImPerm包置换检验"><a href="#3、ImPerm包置换检验" class="headerlink" title="3、ImPerm包置换检验"></a>3、ImPerm包置换检验</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#ImPerm包 提供线性模型的置换方法，回归和方差分析</span></div><div class="line">&gt; <span class="comment">#简单回归</span></div><div class="line">&gt; <span class="keyword">library</span>(lmPerm)</div><div class="line">&gt; fit&lt;-lmp(weight~height, data=women, perm=<span class="string">"Prob"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"Settings:  unique SS : numeric variables centered"</span></div><div class="line">&gt; summary(fit)</div><div class="line"></div><div class="line">Call:</div><div class="line">lmp(formula = weight ~ height, data = women, perm = <span class="string">"Prob"</span>)</div><div class="line"></div><div class="line">Residuals:</div><div class="line">    Min      1Q  Median      3Q     Max </div><div class="line">-<span class="number">1.7333</span> -<span class="number">1.1333</span> -<span class="number">0.3833</span>  <span class="number">0.7417</span>  <span class="number">3.1167</span> </div><div class="line"></div><div class="line">Coefficients:</div><div class="line">       Estimate Iter Pr(Prob)    </div><div class="line">height     <span class="number">3.45</span> <span class="number">5000</span>   &lt;<span class="number">2e-16</span> ***</div><div class="line">---</div><div class="line">Signif. codes:  <span class="number">0</span> ‘***’ <span class="number">0.001</span> ‘**’ <span class="number">0.01</span> ‘*’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></div><div class="line"></div><div class="line">Residual standard error: <span class="number">1.525</span> on <span class="number">13</span> degrees of freedom</div><div class="line">Multiple R-Squared: <span class="number">0.991</span>,	Adjusted R-squared: <span class="number">0.9903</span> </div><div class="line"><span class="literal">F</span>-statistic:  <span class="number">1433</span> on <span class="number">1</span> and <span class="number">13</span> DF,  p-value: <span class="number">1.091e-14</span> </div><div class="line"></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#多项式回归</span></div><div class="line">&gt; <span class="keyword">library</span>(lmPerm)</div><div class="line">&gt; set.seed(<span class="number">1234</span>)</div><div class="line">&gt; fit&lt;-lmp(weight ~ height + I(height^<span class="number">2</span>), data = women, perm = <span class="string">"Prob"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"Settings:  unique SS : numeric variables centered"</span></div><div class="line">&gt; summary(fit)</div><div class="line"></div><div class="line">Call:</div><div class="line">lmp(formula = weight ~ height + I(height^<span class="number">2</span>), data = women, perm = <span class="string">"Prob"</span>)</div><div class="line"></div><div class="line">Residuals:</div><div class="line">      Min        1Q    Median        3Q       Max </div><div class="line">-<span class="number">0.509405</span> -<span class="number">0.296105</span> -<span class="number">0.009405</span>  <span class="number">0.286151</span>  <span class="number">0.597059</span> </div><div class="line"></div><div class="line">Coefficients:</div><div class="line">            Estimate Iter Pr(Prob)    </div><div class="line">height      -<span class="number">7.34832</span> <span class="number">5000</span>   &lt;<span class="number">2e-16</span> ***</div><div class="line">I(height^<span class="number">2</span>)  <span class="number">0.08306</span> <span class="number">5000</span>   &lt;<span class="number">2e-16</span> ***</div><div class="line">---</div><div class="line">Signif. codes:  <span class="number">0</span> ‘***’ <span class="number">0.001</span> ‘**’ <span class="number">0.01</span> ‘*’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></div><div class="line"></div><div class="line">Residual standard error: <span class="number">0.3841</span> on <span class="number">12</span> degrees of freedom</div><div class="line">Multiple R-Squared: <span class="number">0.9995</span>,	Adjusted R-squared: <span class="number">0.9994</span> </div><div class="line"><span class="literal">F</span>-statistic: <span class="number">1.139e+04</span> on <span class="number">2</span> and <span class="number">12</span> DF,  p-value: &lt; <span class="number">2.2e-16</span> </div><div class="line"></div><div class="line">&gt; </div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#多元回归</span></div><div class="line">&gt; <span class="keyword">library</span>(lmPerm)</div><div class="line">&gt; set.seed(<span class="number">1234</span>)</div><div class="line">&gt; states &lt;- as.data.frame(state.x77)</div><div class="line">&gt; fit &lt;- lmp(Murder ~ Population + Illiteracy + Income + Frost, data=states, perm=<span class="string">"Prob"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"Settings:  unique SS : numeric variables centered"</span></div><div class="line">&gt; summary(fit)</div><div class="line"></div><div class="line">Call:</div><div class="line">lmp(formula = Murder ~ Population + Illiteracy + Income + Frost, </div><div class="line">    data = states, perm = <span class="string">"Prob"</span>)</div><div class="line"></div><div class="line">Residuals:</div><div class="line">     Min       1Q   Median       3Q      Max </div><div class="line">-<span class="number">4.79597</span> -<span class="number">1.64946</span> -<span class="number">0.08112</span>  <span class="number">1.48150</span>  <span class="number">7.62104</span> </div><div class="line"></div><div class="line">Coefficients:</div><div class="line">            Estimate Iter Pr(Prob)    </div><div class="line">Population <span class="number">2.237e-04</span>   <span class="number">51</span>   <span class="number">1.0000</span>    </div><div class="line">Illiteracy <span class="number">4.143e+00</span> <span class="number">5000</span>   <span class="number">0.0004</span> ***</div><div class="line">Income     <span class="number">6.442e-05</span>   <span class="number">51</span>   <span class="number">1.0000</span>    </div><div class="line">Frost      <span class="number">5.813e-04</span>   <span class="number">51</span>   <span class="number">0.8627</span>    </div><div class="line">---</div><div class="line">Signif. codes:  <span class="number">0</span> ‘***’ <span class="number">0.001</span> ‘**’ <span class="number">0.01</span> ‘*’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></div><div class="line"></div><div class="line">Residual standard error: <span class="number">2.535</span> on <span class="number">45</span> degrees of freedom</div><div class="line">Multiple R-Squared: <span class="number">0.567</span>,	Adjusted R-squared: <span class="number">0.5285</span> </div><div class="line"><span class="literal">F</span>-statistic: <span class="number">14.73</span> on <span class="number">4</span> and <span class="number">45</span> DF,  p-value: <span class="number">9.133e-08</span> </div><div class="line"></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#单因素方差分析</span></div><div class="line">&gt; <span class="keyword">library</span>(lmPerm)</div><div class="line">&gt; <span class="keyword">library</span>(multcomp)</div><div class="line">&gt; set.seed(<span class="number">1234</span>)</div><div class="line">&gt; fit &lt;- aovp(response~trt, data=cholesterol, perm=<span class="string">"Prob"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"Settings:  unique SS "</span></div><div class="line">&gt; summary(fit)</div><div class="line">Component <span class="number">1</span> :</div><div class="line">            Df R Sum Sq R Mean Sq Iter  Pr(Prob)    </div><div class="line">trt          <span class="number">4</span>  <span class="number">1351.37</span>    <span class="number">337.84</span> <span class="number">5000</span> &lt; <span class="number">2.2e-16</span> ***</div><div class="line">Residuals   <span class="number">45</span>   <span class="number">468.75</span>     <span class="number">10.42</span>                   </div><div class="line">---</div><div class="line">Signif. codes:  <span class="number">0</span> ‘***’ <span class="number">0.001</span> ‘**’ <span class="number">0.01</span> ‘*’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></div><div class="line"></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#单因素协方差分析</span></div><div class="line">&gt; <span class="keyword">library</span>(lmPerm)</div><div class="line">&gt; set.seed(<span class="number">1234</span>)</div><div class="line">&gt; fit &lt;- aovp(weight ~ gesttime + dose, data=litter, perm=<span class="string">"Prob"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"Settings:  unique SS : numeric variables centered"</span></div><div class="line">&gt; summary(fit)</div><div class="line">Component <span class="number">1</span> :</div><div class="line">            Df R Sum Sq R Mean Sq Iter Pr(Prob)    </div><div class="line">gesttime     <span class="number">1</span>   <span class="number">161.49</span>   <span class="number">161.493</span> <span class="number">5000</span>   <span class="number">0.0006</span> ***</div><div class="line">dose         <span class="number">3</span>   <span class="number">137.12</span>    <span class="number">45.708</span> <span class="number">5000</span>   <span class="number">0.0392</span> *  </div><div class="line">Residuals   <span class="number">69</span>  <span class="number">1151.27</span>    <span class="number">16.685</span>                  </div><div class="line">---</div><div class="line">Signif. codes:  <span class="number">0</span> ‘***’ <span class="number">0.001</span> ‘**’ <span class="number">0.01</span> ‘*’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></div><div class="line"></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#双因素方差分析</span></div><div class="line">&gt; <span class="keyword">library</span>(lmPerm)</div><div class="line">&gt; set.seed(<span class="number">1234</span>)</div><div class="line">&gt; fit &lt;- aovp(len ~ supp * dose, data=ToothGrowth, perm=<span class="string">"Prob"</span>)</div><div class="line">[<span class="number">1</span>] <span class="string">"Settings:  unique SS : numeric variables centered"</span></div><div class="line">&gt; summary(fit)</div><div class="line">Component <span class="number">1</span> :</div><div class="line">            Df R Sum Sq R Mean Sq Iter Pr(Prob)    </div><div class="line">supp         <span class="number">1</span>   <span class="number">205.35</span>    <span class="number">205.35</span> <span class="number">5000</span>  &lt; <span class="number">2e-16</span> ***</div><div class="line">dose         <span class="number">1</span>  <span class="number">2224.30</span>   <span class="number">2224.30</span> <span class="number">5000</span>  &lt; <span class="number">2e-16</span> ***</div><div class="line">supp:dose    <span class="number">1</span>    <span class="number">88.92</span>     <span class="number">88.92</span> <span class="number">2032</span>  <span class="number">0.04724</span> *  </div><div class="line">Residuals   <span class="number">56</span>   <span class="number">933.63</span>     <span class="number">16.67</span>                  </div><div class="line">---</div><div class="line">Signif. codes:  <span class="number">0</span> ‘***’ <span class="number">0.001</span> ‘**’ <span class="number">0.01</span> ‘*’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></div></pre></td></tr></table></figure>
<h2 id="4、自助法"><a href="#4、自助法" class="headerlink" title="4、自助法"></a>4、自助法</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#boot包中的自助法，即通过一个函数重复执行多次取得统计量的序列分布</span></div><div class="line">&gt; <span class="comment">#对单个统计量使用自助法</span></div><div class="line">&gt; rsq &lt;- <span class="keyword">function</span>(formula, data, indicates) &#123;</div><div class="line">+     d &lt;- data[indicates,]</div><div class="line">+     fit &lt;- lm(formula, data=d)</div><div class="line">+     <span class="keyword">return</span>(summary(fit)$r.square)</div><div class="line">+ &#125;</div><div class="line">&gt; <span class="keyword">library</span>(boot)</div><div class="line">&gt; set.seed(<span class="number">1234</span>)</div><div class="line">&gt; results &lt;- boot(data=mtcars, statistic = rsq, R=<span class="number">1000</span>, formula=mpg~wt+disp)</div><div class="line">&gt; </div><div class="line">&gt; print(results)</div><div class="line"></div><div class="line">ORDINARY NONPARAMETRIC BOOTSTRAP</div><div class="line"></div><div class="line"></div><div class="line">Call:</div><div class="line">boot(data = mtcars, statistic = rsq, R = <span class="number">1000</span>, formula = mpg ~ </div><div class="line">    wt + disp)</div><div class="line"></div><div class="line"></div><div class="line">Bootstrap Statistics :</div><div class="line">     original    bias    std. error</div><div class="line">t1* <span class="number">0.7809306</span> <span class="number">0.0133367</span>  <span class="number">0.05068926</span></div><div class="line">&gt; plot(results)</div><div class="line"><span class="comment">#置信区间都不包含R平方值0，所以拒绝零假设</span></div><div class="line">&gt; boot.ci(results, type=c(<span class="string">"perc"</span>, <span class="string">"bca"</span>))</div><div class="line">BOOTSTRAP CONFIDENCE INTERVAL CALCULATIONS</div><div class="line">Based on <span class="number">1000</span> bootstrap replicates</div><div class="line"></div><div class="line">CALL : </div><div class="line">boot.ci(boot.out = results, type = c(<span class="string">"perc"</span>, <span class="string">"bca"</span>))</div><div class="line"></div><div class="line">Intervals : </div><div class="line">Level     Percentile            BCa          </div><div class="line"><span class="number">95</span>%   ( <span class="number">0.6838</span>,  <span class="number">0.8833</span> )   ( <span class="number">0.6344</span>,  <span class="number">0.8549</span> )  </div><div class="line">Calculations and Intervals on Original Scale</div><div class="line">Some BCa intervals may be unstable</div><div class="line">&gt;</div></pre></td></tr></table></figure>
<p><img src="/2017/11/21/chapter12-重抽样与自助法/自助法.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#多个统计量自助法</span></div><div class="line">&gt; bs &lt;- <span class="keyword">function</span>(formula, data, indices) &#123;</div><div class="line">+   d &lt;- data[indices,]</div><div class="line">+   fit &lt;- lm(formula, data=d)</div><div class="line">+   <span class="keyword">return</span>(coef(fit))</div><div class="line">+ &#125;</div><div class="line">&gt; </div><div class="line">&gt; <span class="keyword">library</span>(boot)</div><div class="line">&gt; set.seed(<span class="number">1234</span>)</div><div class="line">&gt; results &lt;- boot(data=mtcars, statistic = bs, R=<span class="number">1000</span>, formula=mpg~wt+disp)</div><div class="line">&gt; </div><div class="line">&gt; print(results)</div><div class="line"></div><div class="line">ORDINARY NONPARAMETRIC BOOTSTRAP</div><div class="line"></div><div class="line"></div><div class="line">Call:</div><div class="line">boot(data = mtcars, statistic = bs, R = <span class="number">1000</span>, formula = mpg ~ </div><div class="line">    wt + disp)</div><div class="line"></div><div class="line"></div><div class="line">Bootstrap Statistics :</div><div class="line">       original        bias    std. error</div><div class="line">t1* <span class="number">34.96055404</span>  <span class="number">0.1378732942</span> <span class="number">2.485756673</span></div><div class="line">t2* -<span class="number">3.35082533</span> -<span class="number">0.0539040965</span> <span class="number">1.170427539</span></div><div class="line">t3* -<span class="number">0.01772474</span> -<span class="number">0.0001208075</span> <span class="number">0.008786803</span></div><div class="line">&gt; <span class="comment">#查看车重的抽样结果</span></div><div class="line">&gt; plot(results, index=<span class="number">2</span>)</div><div class="line">&gt; <span class="comment">#查看车重的95置信区间</span></div><div class="line">&gt; boot.ci(results, type= <span class="string">"bca"</span>, index=<span class="number">2</span>)</div><div class="line">BOOTSTRAP CONFIDENCE INTERVAL CALCULATIONS</div><div class="line">Based on <span class="number">1000</span> bootstrap replicates</div><div class="line"></div><div class="line">CALL : </div><div class="line">boot.ci(boot.out = results, type = <span class="string">"bca"</span>, index = <span class="number">2</span>)</div><div class="line"></div><div class="line">Intervals : </div><div class="line">Level       BCa          </div><div class="line"><span class="number">95</span>%   (-<span class="number">5.655</span>, -<span class="number">1.194</span> )  </div><div class="line">Calculations and Intervals on Original Scale</div><div class="line">&gt; <span class="comment">#查看排量的95置信区间</span></div><div class="line">&gt; boot.ci(results, type= <span class="string">"bca"</span>, index=<span class="number">3</span>)</div><div class="line">BOOTSTRAP CONFIDENCE INTERVAL CALCULATIONS</div><div class="line">Based on <span class="number">1000</span> bootstrap replicates</div><div class="line"></div><div class="line">CALL : </div><div class="line">boot.ci(boot.out = results, type = <span class="string">"bca"</span>, index = <span class="number">3</span>)</div><div class="line"></div><div class="line">Intervals : </div><div class="line">Level       BCa          </div><div class="line"><span class="number">95</span>%   (-<span class="number">0.0331</span>,  <span class="number">0.0010</span> )  </div><div class="line">Calculations and Intervals on Original Scale</div></pre></td></tr></table></figure>
<p><img src="/2017/11/21/chapter12-重抽样与自助法/自助法2.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;重抽样与自助法&quot;&gt;&lt;a href=&quot;#重抽样与自助法&quot; class=&quot;headerlink&quot; title=&quot;重抽样与自助法&quot;&gt;&lt;/a&gt;重抽样与自助法&lt;/h1&gt;&lt;h2 id=&quot;1、置换检验&quot;&gt;&lt;a href=&quot;#1、置换检验&quot; class=&quot;headerlink&quot; 
    
    </summary>
    
      <category term="R语言" scheme="https://pingansheng.github.io/categories/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R语言" scheme="https://pingansheng.github.io/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="重抽样与自助法" scheme="https://pingansheng.github.io/tags/%E9%87%8D%E6%8A%BD%E6%A0%B7%E4%B8%8E%E8%87%AA%E5%8A%A9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Understand JVM Part IV</title>
    <link href="https://pingansheng.github.io/2017/07/03/Understand-JVM-Part-IV/"/>
    <id>https://pingansheng.github.io/2017/07/03/Understand-JVM-Part-IV/</id>
    <published>2017-07-03T08:00:30.000Z</published>
    <updated>2024-02-24T02:35:09.671Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内存模型与并发"><a href="#内存模型与并发" class="headerlink" title="内存模型与并发"></a>内存模型与并发</h1><h2 id="1-内存模型"><a href="#1-内存模型" class="headerlink" title="1 内存模型"></a>1 内存模型</h2><h3 id="1-1-硬件层面的缓存一致性"><a href="#1-1-硬件层面的缓存一致性" class="headerlink" title="1.1 硬件层面的缓存一致性"></a>1.1 硬件层面的缓存一致性</h3><ul>
<li>CPU核心、高速缓存与主内存之间通过缓存一致性协议保持数据的版本问题<h3 id="1-2-Java内存模型"><a href="#1-2-Java内存模型" class="headerlink" title="1.2 Java内存模型"></a>1.2 Java内存模型</h3><h4 id="1-2-1-Java内存模型概述"><a href="#1-2-1-Java内存模型概述" class="headerlink" title="1.2.1 Java内存模型概述"></a>1.2.1 Java内存模型概述</h4></li>
<li>每个线程拥有自己的工作内存，不同线程间的工作内存不可见，线程所有操作都操作工作内存</li>
<li>工作内存与主内存之间的数据同步通过定义的一些原子操作实现（lock、unlock、read、load、use、assign（赋值）、store、write）（1.5之后不再使用这种方式描述内存模型，使用先行发生原则）<h4 id="1-2-2-volatile变量"><a href="#1-2-2-volatile变量" class="headerlink" title="1.2.2 volatile变量"></a>1.2.2 volatile变量</h4></li>
<li>volatile只保证可见性，并非线程安全，多线程仍然会出现不安全的</li>
<li>运算结果不依赖当前volatile变量或不需要与其他变量共同参与不变约束时，推荐使用volatile</li>
<li>volatile禁止指令重排序，线程内表现为串行<h4 id="1-2-3-long与double"><a href="#1-2-3-long与double" class="headerlink" title="1.2.3 long与double"></a>1.2.3 long与double</h4></li>
<li>Java内存模型不保证64位数据类型的load、store、read、write 4个操作的原子性，long与double的非原子性协定，但现在的虚拟机已经实现原子性<h4 id="1-2-4-原子性、可见性与有序性"><a href="#1-2-4-原子性、可见性与有序性" class="headerlink" title="1.2.4 原子性、可见性与有序性"></a>1.2.4 原子性、可见性与有序性</h4></li>
<li>原子性：字节码monitorenter与monitorexit实现（管程）</li>
<li>可见性：新值同步主存，读取从主存刷新方式实现，另外，volatile保证新值立即同步主存，读取时立即从内存刷新，synchronized块中，对一个变量执行unlock之前必须刷回主存，final保证一单初始化完成，其他线程立即可见</li>
<li>有序性：线程内观察，所有操作有序，观察其他线程，所有操作无序（线程内表现为串行语义；指令重排序与工作内存与主存的差异）</li>
</ul>
<h4 id="1-2-5-先行发生原则"><a href="#1-2-5-先行发生原则" class="headerlink" title="1.2.5 先行发生原则"></a>1.2.5 先行发生原则</h4><ul>
<li>Java内存模型中存在天然的先后操作顺序，无需同步措施，如果两个操作不属于这些规则，则不保证顺序性</li>
<li>先行发生原则：<ul>
<li>程序次序：     最终按照代码顺序执行</li>
<li>管程锁定：     unlock操作先于同一个锁的后一个lock操作（时间的先后）</li>
<li>volatile变量：对一个volatile变量的写先于后面的读（时间的先后）</li>
<li>线程启动：     Thread的start先于线程的每一个动作</li>
<li>线程终止：     线程中的左右操作都先于对该线程的终止检测</li>
<li>线程中断：     对线程interrupt()方法的调用先于被中断线程的代码检测到中断事件的发生</li>
<li>对象终结：     一个对象的初始化完成先于finalize()方法</li>
<li>传递性：      A先于B，B先于C，A先于C</li>
</ul>
</li>
<li>一个操作<code>时间上的先发生</code>不代表该操作<code>先行发生</code></li>
</ul>
<h3 id="1-3-Java与线程"><a href="#1-3-Java与线程" class="headerlink" title="1.3 Java与线程"></a>1.3 Java与线程</h3><h4 id="1-3-1-线程的实现"><a href="#1-3-1-线程的实现" class="headerlink" title="1.3.1 线程的实现"></a>1.3.1 线程的实现</h4><ul>
<li>使用内核线程实现：程序使用轻量级进程LWP（内核线程的高级接口）进行线程映射，每个轻量级进程对应一个内核线程，这种1:1的关系成为一对一的线程模型，线程的所有操作需要进行系统调用，需要用户态和内核态进行切换，轻量级进程需要消耗一定的内核资源，一个系统支持的轻量级进程数量是有限的</li>
</ul>
<p><img src="/2017/07/03/Understand-JVM-Part-IV/1v1.png" alt=""></p>
<ul>
<li>使用用户线程实现：系统内核不能感知用户线程的存在，其建立、同步、销毁和调度全在用户态完成，不需要内核的帮助，这种进程与用户线程的1:N的关系成为一对多的线程模型，难以实现，逐步放弃</li>
</ul>
<p><img src="/2017/07/03/Understand-JVM-Part-IV/userThread.jpg" alt=""></p>
<ul>
<li>使用用户线程+LWP：以上两种结合推理</li>
</ul>
<p><img src="/2017/07/03/Understand-JVM-Part-IV/multThread.jpg" alt=""></p>
<ul>
<li>Java实现：Windows与Linux使用一对一线程模型实现，Windows与Linux提供的线程模型就是一对一的</li>
</ul>
<h4 id="1-3-2-线程调度"><a href="#1-3-2-线程调度" class="headerlink" title="1.3.2 线程调度"></a>1.3.2 线程调度</h4><ul>
<li>协同式调度（协程）：线程主动通知系统切换线程，如Lua的协程，缺点执行时间不可控制，某个线程可能一直不通知</li>
<li>抢占式调度：每个线程由系统来分配执行时间，Java采用，Java提供了10中线程的优先级来代表次序，但是Java的优先级不一定靠谱，有的OS提供的线程优先级不一致，如windows提供7种，无法与之一一对应，此外优先级可能被OS的各种优化与功能改变</li>
</ul>
<h4 id="1-3-3-状态转换"><a href="#1-3-3-状态转换" class="headerlink" title="1.3.3 状态转换"></a>1.3.3 状态转换</h4><p><a href="http://peterping.top/2016/11/01/The-Art-of-Java-Concurrency-Programming-I/#4-1线程" target="_blank" rel="noopener">参见</a></p>
<h2 id="2-线程安全与锁优化"><a href="#2-线程安全与锁优化" class="headerlink" title="2 线程安全与锁优化"></a>2 线程安全与锁优化</h2><h3 id="2-1-线程安全"><a href="#2-1-线程安全" class="headerlink" title="2.1 线程安全"></a>2.1 线程安全</h3><ul>
<li>多线程访问一个对象，不用考虑线程的调度与交替运行，也不需要进行额外的同步，调用这个对象的行为产生正确的结果<h4 id="2-1-1-Java的线程安全"><a href="#2-1-1-Java的线程安全" class="headerlink" title="2.1.1 Java的线程安全"></a>2.1.1 Java的线程安全</h4></li>
<li>Java的安全性：<ul>
<li>不可变</li>
<li>绝对线程安全</li>
<li>相对线程安全（单独的操作是线程安全的，但是对于特定的顺序连续调用，需要额外的同步手段，如Vector的读取与删除同时进行）</li>
<li>线程兼容（对象不是线程安全，可以使用同步手段达到线程安全）</li>
<li>线程对立（无法在多线程环境运行，Threadsuspend()、Thread.resume()可能引发死锁）</li>
</ul>
</li>
</ul>
<h4 id="2-1-2-Java的线程安全的实现方法"><a href="#2-1-2-Java的线程安全的实现方法" class="headerlink" title="2.1.2 Java的线程安全的实现方法"></a>2.1.2 Java的线程安全的实现方法</h4><ul>
<li><p>互斥同步：<code>synchronized</code>关键字实现，字节码指令对应<code>monitorenter</code>与<code>monitorexit</code>,这两个字节码需要一个<code>reference</code>类型参数，如果Java代码未指定，则为对象实例或Class对象，进入该指令时，首先要获取对象的锁，如果当前线程已经获取则将计数器+1，线程可重入，不会锁死自己，由于该语句会导致线程状态切换，线程需要进入核心态，消耗较大</p>
<ul>
<li>也可以使用<code>ReentrantLock</code>，性能更好, 但1.6之后<code>synchronized</code>关键字的吞吐量已经大幅提高，推荐使用原生<code>synchronized</code>关键字（1.8 ConcurrentHashMap源码已经使用<code>synchronized</code>来实现，Doug lea已经认可了<code>synchronized</code>的性能）</li>
</ul>
</li>
<li><p>非阻塞同步：CAS指令，需要硬件指令集支持（比较和更新需要原子操作），需要三个参数，内存位置，预期值，新值，Java中使用Unsafe类提供该操作</p>
<ul>
<li>CAS指令会有ABA问题，可以使用<code>AtomicStampedReference</code>来控制变量的版本，更推荐使用互斥同步解决，因为一般ABA不影响并发的正确性。</li>
<li>该类只支持<code>Bootstrap ClassLoader</code>加载，用户程序默认无法使用，只可以通过反射：<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 一个简单的示例</div><div class="line"> * Date: 2017/6/13</div><div class="line"> * Time: 17:04</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CasSample</span> </span>&#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">volatile</span> <span class="keyword">long</span> casVar;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">long</span> CASVAR_OFFSET;</div><div class="line">    <span class="keyword">static</span> Unsafe unsafe;</div><div class="line"></div><div class="line">    <span class="keyword">static</span> &#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            Field field = Unsafe.class.getDeclaredField(<span class="string">"theUnsafe"</span>);</div><div class="line">            field.setAccessible(<span class="keyword">true</span>);</div><div class="line">            unsafe = (Unsafe) field.get(<span class="keyword">null</span>);</div><div class="line">            Class&lt;?&gt; k = CasSample.class;</div><div class="line"></div><div class="line">            <span class="comment">//取偏移量 实例变量使用objectFieldOffset，类静态变量使用staticFieldOffset</span></div><div class="line">            CASVAR_OFFSET = unsafe.objectFieldOffset(k.getField(<span class="string">"casVar"</span>));</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line"></div><div class="line">        CasSample casSample = <span class="keyword">new</span> CasSample();</div><div class="line">        casSample.casVar = <span class="number">1</span>;</div><div class="line">        casSample.CAS_Swap();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CAS_Swap</span><span class="params">()</span> </span>&#123;</div><div class="line">        unsafe.compareAndSwapInt(<span class="keyword">this</span>, CASVAR_OFFSET, <span class="number">1</span>, <span class="number">2</span>);</div><div class="line">        System.out.println(<span class="string">"cas"</span> + casVar);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h3 id="2-2-锁优化"><a href="#2-2-锁优化" class="headerlink" title="2.2 锁优化"></a>2.2 锁优化</h3><ul>
<li>JVM层面的优化<h4 id="2-2-1-自旋锁与自适应锁"><a href="#2-2-1-自旋锁与自适应锁" class="headerlink" title="2.2.1 自旋锁与自适应锁"></a>2.2.1 自旋锁与自适应锁</h4></li>
<li>自旋锁：互斥同步线程阻塞不先不进入内核态挂起，而是让线程执行一个自旋，期待循环之后别的线程就可以释放锁了，自旋占用CPU时间，不可无限制自旋，自旋次数默认10</li>
<li>自适应锁：自旋的时间不固定了，由前一次在同一个锁上的自旋时间以及锁拥有着的状态决定，比如上次自旋成功获得了锁A，当前持有锁的线程正在运行，虚拟机判断本次自旋获取到锁的可能性很大，进而自旋100次</li>
</ul>
<h4 id="2-2-2-锁消除"><a href="#2-2-2-锁消除" class="headerlink" title="2.2.2 锁消除"></a>2.2.2 锁消除</h4><ul>
<li>自动判断当前代码块内是否会出现共享数据竞争，如果没有竞争，则将该段的同步措施去除。</li>
</ul>
<h4 id="2-2-3-锁粗化"><a href="#2-2-3-锁粗化" class="headerlink" title="2.2.3 锁粗化"></a>2.2.3 锁粗化</h4><ul>
<li>锁的使用通常要求锁的范围越小越好，但是若一系列的操作对同一个对象频繁的加锁解锁，比如出现在循环体内，那么这种加锁导致不必要的性能损耗，虚拟机探测到后会将同步措施放在整个操作序列的外部。</li>
</ul>
<h4 id="2-2-4-轻量级锁"><a href="#2-2-4-轻量级锁" class="headerlink" title="2.2.4 轻量级锁"></a>2.2.4 轻量级锁</h4><ul>
<li><p>假设是对于绝大部分锁，整个同步周期内不存在竞争，根据对象头中的信息来表示对象的锁信息，<a href="http://peterping.top/2017/06/14/Understand-JVM-Part-I/#2、对象的内存布局" target="_blank" rel="noopener">参考</a></p>
</li>
<li><p>如果对象没有被锁定，即锁标志位为<code>01</code>，则JVM在栈帧中创建一个锁记录的空间（Lock Record）,存储当前对象的Mark Word备份，CAS更新对象的Mark Word为Lock Record的指针，若成功，则表示该线程获得了锁，且锁标志位变为<code>00</code>，此时对象处于轻量级锁定状态、</p>
</li>
<li><p>如果上述CAS失败，JVM检查该对象的Mark Word是否指向当前线程的栈帧，如果是则表示该线程已经获得锁，直接进入同步块执行，若失败，则锁膨胀为重量级锁，锁标志位变为<code>10</code>，Mark Word中存储重量级锁的指针（互斥量），后续等待线程进入阻塞状态</p>
</li>
<li><p>解锁依然使用CAS，若Mark Word依然指向线程的锁记录，则CAS替换回来那份拷贝，成功则完毕，失败则表示锁定期间有其他线程尝试获取改锁（此时Mark Word指向的是互斥量），释放锁同时唤醒被挂起的线程 </p>
</li>
</ul>
<h4 id="2-2-5-偏向锁"><a href="#2-2-5-偏向锁" class="headerlink" title="2.2.5 偏向锁"></a>2.2.5 偏向锁</h4><ul>
<li>据统计，在实际情况下，大部分的锁对象永远只被一个线程占用，轻量级锁在每次monitorenter和monitorexit的时候（非重入），都会进行一次cas操作，为了进一步减少cas操作，偏向锁（biased locking）诞生了。是否启用偏向锁由Mark Word中的一位表示，位于锁标记位前，可偏向为<code>1</code></li>
<li>锁对象第一次被线程获取，CAS将线程ID设置在Mark Word中，成功则该线程进入同步块时，不再进行任何同步操作</li>
<li>另外一个线程获取锁时：<ol>
<li>看一眼持有锁的线程是否还活着，如果已经死了，那将对象设置为无锁状态就可以了</li>
<li>如果这个线程还活着，那需要遍历持有这个锁的线程的栈帧中的所有lock record，如果所有lock record都不指向锁对象，那么这个线程实际上不持有这个对象锁。同1，将对象设置为无锁状态即可</li>
<li>如果这个线程正在占用这个锁对象，那么需要修改线程中的锁记录与对象头，将它们都修改为轻量级锁状态，然后正常走轻量级锁的流程即可，是否偏向锁标记位为<code>0</code></li>
</ol>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;内存模型与并发&quot;&gt;&lt;a href=&quot;#内存模型与并发&quot; class=&quot;headerlink&quot; title=&quot;内存模型与并发&quot;&gt;&lt;/a&gt;内存模型与并发&lt;/h1&gt;&lt;h2 id=&quot;1-内存模型&quot;&gt;&lt;a href=&quot;#1-内存模型&quot; class=&quot;headerlink&quot; 
    
    </summary>
    
      <category term="Java" scheme="https://pingansheng.github.io/categories/Java/"/>
    
    
      <category term="JVM" scheme="https://pingansheng.github.io/tags/JVM/"/>
    
  </entry>
  
  <entry>
    <title>Understand JVM Part III</title>
    <link href="https://pingansheng.github.io/2017/06/28/Understand-JVM-Part-III/"/>
    <id>https://pingansheng.github.io/2017/06/28/Understand-JVM-Part-III/</id>
    <published>2017-06-28T08:17:49.000Z</published>
    <updated>2024-02-24T02:35:09.594Z</updated>
    
    <content type="html"><![CDATA[<h1 id="编译与代码优化"><a href="#编译与代码优化" class="headerlink" title="编译与代码优化"></a>编译与代码优化</h1><h2 id="1-编译过程与优化"><a href="#1-编译过程与优化" class="headerlink" title="1 编译过程与优化"></a>1 编译过程与优化</h2><h3 id="1-1-解析填充符号表"><a href="#1-1-解析填充符号表" class="headerlink" title="1.1 解析填充符号表"></a>1.1 解析填充符号表</h3><ul>
<li>词法分析</li>
<li>语法分析</li>
<li>填充符号表</li>
</ul>
<h3 id="1-2-注解处理器"><a href="#1-2-注解处理器" class="headerlink" title="1.2 注解处理器"></a>1.2 注解处理器</h3><ul>
<li>处理注解信息</li>
</ul>
<h3 id="1-3-语义分析与字节码生成"><a href="#1-3-语义分析与字节码生成" class="headerlink" title="1.3 语义分析与字节码生成"></a>1.3 语义分析与字节码生成</h3><ul>
<li>标注检查（类型匹配、常量折叠等）</li>
<li>数据与控制流分析（分支返回值检查、异常处理、局部变量的赋值等）<ul>
<li>局部变量的final含义在编译期保证，运行期常量没有访问标志</li>
</ul>
</li>
<li>解语法糖<ul>
<li>泛型、变长参数、自动拆装箱</li>
</ul>
</li>
<li>字节码生成<ul>
<li>除写入磁盘字节码信息外，额外修改了少量代码（父类的实例构造器、变量初始化、语句块等按顺序收缩到<code>&lt;init&gt;</code>或<code>&lt;clinit&gt;</code>方法中，或者如StringBuilder的自动生成等）</li>
</ul>
</li>
</ul>
<h2 id="2-运行过程与优化"><a href="#2-运行过程与优化" class="headerlink" title="2 运行过程与优化"></a>2 运行过程与优化</h2><h3 id="2-1-即时编译器"><a href="#2-1-即时编译器" class="headerlink" title="2.1 即时编译器"></a>2.1 即时编译器</h3><h4 id="2-1-1-热点代码识别"><a href="#2-1-1-热点代码识别" class="headerlink" title="2.1.1 热点代码识别"></a>2.1.1 热点代码识别</h4><ul>
<li>可识别热点方法与热点代码块（执行期间进行，栈上替换）</li>
<li>HotSpot使用计数器热点探测方式（还有采样的方式，即周期性的检查栈顶的方法，找到经常出现的）</li>
<li>计数器分为方法调用计数器和回边计数器</li>
<li>计数器阀值默认Client下1500，Server下10000</li>
<li>执行方法时，先检查有没有JIT版本，存在使用，否则该方法的调用计数器+1，然后判断调用计数器与回边计数器值之和是否超过方法调用计数器阀值，是则向JIT编译器发出编译请求</li>
<li>默认设置下方法调用计数器超过一定时间减半，该过程为热度衰减，时间段称为方法统计的半衰期</li>
<li>回边计数器统计循环体中代码执行的次数（字节码中遇到控制流向后跳转称为回边）</li>
<li>回边计数器阀值通过计算公式：<ul>
<li>Client模式：方法调用计数器阀值 *　OSR比率(OnStackReplacePercentage) / 100 = 13995（默认）</li>
<li>Server模式：方法调用计数器阀值 *　OSR比率(OnStackReplacePercentage) - 解释器监控比率（InterpreterProfilePercentage） / 100 = 10700（默认）</li>
</ul>
</li>
<li>遇到回边指令时，检查是否有编译版本，没有则回边计数器+1并判断二计数器之和是否超过阀值，超过则发出OSR编译请求，并降低回边计数器值以继续使用解释模式运行来等待编译。</li>
</ul>
<h4 id="2-1-2-编译过程"><a href="#2-1-2-编译过程" class="headerlink" title="2.1.2 编译过程"></a>2.1.2 编译过程</h4><p><img src="/2017/06/28/Understand-JVM-Part-III/JITCompiler.png" alt=""></p>
<h3 id="2-2-编译优化"><a href="#2-2-编译优化" class="headerlink" title="2.2 编译优化"></a>2.2 编译优化</h3><h4 id="2-2-1-公共字表达式消除（类似合并同类项）"><a href="#2-2-1-公共字表达式消除（类似合并同类项）" class="headerlink" title="2.2.1 公共字表达式消除（类似合并同类项）"></a>2.2.1 公共字表达式消除（类似合并同类项）</h4><ul>
<li><code>a * c</code>与<code>c * a</code>合并</li>
<li><code>a + a</code> =&gt; <code>a * 2</code></li>
</ul>
<h4 id="2-2-2-数组边界检查消除"><a href="#2-2-2-数组边界检查消除" class="headerlink" title="2.2.2 数组边界检查消除"></a>2.2.2 数组边界检查消除</h4><ul>
<li>上下文判断索引不会越界，去掉检查数组越界的逻辑</li>
<li>隐式异常优化</li>
</ul>
<h4 id="2-2-3-方法内联"><a href="#2-2-3-方法内联" class="headerlink" title="2.2.3 方法内联"></a>2.2.3 方法内联</h4><ul>
<li>非虚方法直接内联</li>
<li>虚方法查询CHA，如果只有一个版本使用，可以内联，但需要设置逃生门以切换会解释模式</li>
<li>内联缓存，虚方法入口前，发生一次调用后，缓存方法接收者版本，每次调用都比较方法接收者版本，如果每次调用方法接收者版本一致，则内联继续使用</li>
<li>逃逸分析，目前不成熟<ul>
<li>对象在方法中定义，可能会传入其他外部方法或赋值给其他线程可访问的变量，称之为方法逃逸或线程逃逸</li>
<li>如果证明一个对象不会逃逸，则可进行特殊优化：<ol>
<li>栈上分配（目前HotSpot不支持），直接在方法帧上分配对象内存，出栈直接销毁，避免GC</li>
<li>同步消除，对该变量的同步措施去除（没人来竞争）</li>
<li>标量替换，将变量拆散（如对象），需要时不创建对象，而创建可被该方法使用到的成员变量</li>
</ol>
</li>
</ul>
</li>
</ul>
<h3 id="2-3-Java编译器的劣势与优势"><a href="#2-3-Java编译器的劣势与优势" class="headerlink" title="2.3 Java编译器的劣势与优势"></a>2.3 Java编译器的劣势与优势</h3><h4 id="2-3-1-劣势"><a href="#2-3-1-劣势" class="headerlink" title="2.3.1 劣势"></a>2.3.1 劣势</h4><ol>
<li>受制于编译成本</li>
<li>类型安全检查成本</li>
<li>多态选择频率极大</li>
<li>动态扩展，加载新的类改变整体继承关系，全局优化难以施展</li>
<li>对象堆内存分配，局部变量才栈上分配，C++多种方式</li>
<li>GC</li>
</ol>
<h4 id="2-3-2-优势"><a href="#2-3-2-优势" class="headerlink" title="2.3.2 优势"></a>2.3.2 优势</h4><ol>
<li>动态安全</li>
<li>动态扩展</li>
<li>垃圾回收</li>
<li>别名分析</li>
<li>运行期间监控为基础的优化（调用频率预测，分支频率预测，裁剪未选中分支）</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;编译与代码优化&quot;&gt;&lt;a href=&quot;#编译与代码优化&quot; class=&quot;headerlink&quot; title=&quot;编译与代码优化&quot;&gt;&lt;/a&gt;编译与代码优化&lt;/h1&gt;&lt;h2 id=&quot;1-编译过程与优化&quot;&gt;&lt;a href=&quot;#1-编译过程与优化&quot; class=&quot;header
    
    </summary>
    
      <category term="Java" scheme="https://pingansheng.github.io/categories/Java/"/>
    
    
      <category term="JVM" scheme="https://pingansheng.github.io/tags/JVM/"/>
    
  </entry>
  
  <entry>
    <title>Understand JVM Part II</title>
    <link href="https://pingansheng.github.io/2017/06/22/Understand-JVM-Part-II/"/>
    <id>https://pingansheng.github.io/2017/06/22/Understand-JVM-Part-II/</id>
    <published>2017-06-22T05:24:36.000Z</published>
    <updated>2024-02-24T02:35:09.438Z</updated>
    
    <content type="html"><![CDATA[<h1 id="虚拟机执行系统"><a href="#虚拟机执行系统" class="headerlink" title="虚拟机执行系统"></a>虚拟机执行系统</h1><h2 id="Class文件结构与字节码"><a href="#Class文件结构与字节码" class="headerlink" title="Class文件结构与字节码"></a>Class文件结构与字节码</h2><h3 id="Class文件结构（详细结构规则请Google）"><a href="#Class文件结构（详细结构规则请Google）" class="headerlink" title="Class文件结构（详细结构规则请Google）"></a>Class文件结构（详细结构规则请Google）</h3><ul>
<li>魔数与类文件版本：文件的头4字节表示Class文件：0XCAFEBABE</li>
<li>常量池</li>
<li>访问标志</li>
<li>类索引、父类索引与接口索引集合</li>
<li>字段表集合</li>
<li>方法表集合</li>
<li>属性表集合<h3 id="字节码（列表请Google）"><a href="#字节码（列表请Google）" class="headerlink" title="字节码（列表请Google）"></a>字节码（列表请Google）</h3></li>
<li>大部分与数据类型有关的字节码都包含了类型信息，如iload、fload, 但底层可能是同样逻辑</li>
<li>大多数对于boolean、short、byte、char等类型的操作，实际使用int类型作为运算类型</li>
<li>运算指令中，只有除0操作抛出ArithmeticException，其他操作不会出现异常</li>
<li>窄化类型转换指令直接丢弃最低N个字节以外的东西，不会有异常</li>
<li>指令类型主要有（加载存储、运算、类型转换、对象创建与访问、操作数栈、控制转移、方法调用与返回、异常处理、同步（管程））</li>
</ul>
<h2 id="类加载"><a href="#类加载" class="headerlink" title="类加载"></a>类加载</h2><h3 id="时机"><a href="#时机" class="headerlink" title="时机"></a>时机</h3><ol>
<li>遇到new getstatic putstatic invokestatic这4条指令，如果类没有初始化，则进行初始化</li>
<li>使用reflect包对类方法反射调用，如果没有初始化则初始化</li>
<li>初始化某类，若父类未初始化，则初始化父类</li>
<li>jvm启动时，用户需要指定一个主类（main方法），jvm首先初始化这个类</li>
<li>使用JDM1.7的动态语言支持，MethodHandler实例的相关使用时，方法句柄对应类未初始化时</li>
</ol>
<ul>
<li>以上5中情况称为对类的主动引用，被动引用时不触发初始化类（创建数组，引用别的类的静态常量，通过子类引用父类的静态变量）</li>
<li>接口的初始化中，不要求父接口初始化，只有需要使用时才进行初始化父接口</li>
</ul>
<h3 id="类加载过程"><a href="#类加载过程" class="headerlink" title="类加载过程"></a>类加载过程</h3><ul>
<li>类的生命周期：加载-&gt;验证-&gt;准备-&gt;解析-&gt;初始化-&gt;使用-&gt;卸载</li>
<li>加载：类的二进制字节流保存在方法区中，并生成一个Class对象作为方法区这个类数据的入口，对于HotSpot虚拟机来说Class对象存放在方法区中而不是堆中（如果是数组类型，则递归加载去掉一个维度的组件类型，如果组件类型为引用类型，则数组在加载这个组件的类加载器的类空间名称上被标识）</li>
<li>验证：文件格式、元数据、字节码、符号引用</li>
<li>准备：设置类变量（非实例变量）初始值，方法区中进行，如果不是final static, 则首先按照类型赋值0值，初始化用户指定值包装在类构造器<code>&lt;clinit&gt;</code>方法中，在初始化阶段执行，final static则直接赋值为用户指定值</li>
<li>解析：常量池中的符号引用替换为直接引用（类或接口、字段、类方法、接口方法）</li>
<li>初始化：执行类构造器<code>&lt;clinit&gt;()</code>方法,<ul>
<li><code>&lt;clinit&gt;()</code>由类变量的赋值动作和static语句块合并产生，static语句块不可以赋值定义在其后的变量</li>
<li>jvm保证父类的<code>&lt;clinit&gt;()</code>方法先执行，static语句块也是父类的先执行</li>
<li><code>&lt;clinit&gt;()</code>方法不是必须的，如果既没有类变量的赋值也没有static语句块</li>
<li>接口也会有该方法，但执行时不需要先执行父接口（使用时才执行）中的该方法，接口的实现类初始化不会执行接口的该方法</li>
<li>jvm保证执行该方法多线程安全，如果耗时，则造成阻塞</li>
</ul>
</li>
</ul>
<h3 id="类加载器"><a href="#类加载器" class="headerlink" title="类加载器"></a>类加载器</h3><ul>
<li>类加载器用于获取某个类的二进制字节流</li>
<li>每一个类加载器，都有一个类名称空间，判断两个类是否相等，需要在两个类都为同一个类加载器加载的情况下才有意义，否则必定不等  <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestUserClassLoder</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        ClassLoader MyClassLoader = <span class="keyword">new</span> ClassLoader() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="keyword">public</span> Class&lt;?&gt; loadClass(String name) <span class="keyword">throws</span> ClassNotFoundException &#123;</div><div class="line"></div><div class="line">                <span class="keyword">try</span> &#123;</div><div class="line">                    String fileName = name.substring(name.lastIndexOf(<span class="string">"."</span>) + <span class="number">1</span>) + <span class="string">".class"</span>;</div><div class="line">                    InputStream is = getClass().getResourceAsStream(fileName);</div><div class="line">                    <span class="keyword">if</span> (is == <span class="keyword">null</span>) &#123;</div><div class="line">                        <span class="keyword">return</span> <span class="keyword">super</span>.loadClass(name);</div><div class="line">                    &#125;</div><div class="line">                    <span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[is.available()];</div><div class="line">                    is.read(b);</div><div class="line">                    <span class="keyword">return</span> defineClass(name, b, <span class="number">0</span>, b.length);</div><div class="line"></div><div class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> ClassNotFoundException(name);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">        Object a = MyClassLoader.loadClass(<span class="string">"jvm.classloader.TestUserClassLoder"</span>).newInstance();</div><div class="line">        Object b = <span class="keyword">new</span> TestUserClassLoder();</div><div class="line">        System.out.println(a <span class="keyword">instanceof</span> TestUserClassLoder);<span class="comment">//false 不是同一个类加载器实例加载 必然不相等 包括instance</span></div><div class="line">        System.out.println(b <span class="keyword">instanceof</span> TestUserClassLoder);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="双亲委派"><a href="#双亲委派" class="headerlink" title="双亲委派"></a>双亲委派</h3><ul>
<li><p>对于JVM来说，只存在两种不同的类加载器：一种是启动类加载器（jvm一部分，c++实现，用户获取不到），另一种由Java实现，独立于JVM</p>
</li>
<li><p>从开发角度，主要有三种类加载器：</p>
<ol>
<li>启动类加载器：加载JAVA_HOME/lib目录下面的复合条件的类（jar包）</li>
<li>扩展类加载器：加载JAVA_HOME/lib/ext目录下面的所有类库</li>
<li>应用程序类加载器：用于加载用户类路径上的类库，程序中默认的类加载器</li>
</ol>
</li>
<li><p>类加载器之间通过双亲委派规则进行配合，如图</p>
<p>  <img src="/2017/06/22/Understand-JVM-Part-II/双亲委派.png" alt=""></p>
</li>
<li><p>双亲委派模型中：</p>
<ol>
<li>除了顶层启动类加载器，其他类加载器都应当有自己的父类加载器(一般通过组合实现)</li>
<li>类加载器接收到类加载请求，首先将请求委派给父类加载器完成，只有父类加载器反馈无法加载才尝试自己加载</li>
<li>Java类随着类加载器具备了优先级的层次关系（Object类存在于rt.jar中，用户定义的Object即使全类名一致也不会加载，因为启动类加载器已经加载了该类，所有任何环境中Object类都是同一个）</li>
</ol>
</li>
<li><p>双亲委派模型的破坏，JVM团队为了解决某些问题引入了线程上下文加载器，破坏了双亲委派请求链路，直接使用下层类加载器加载目标类（如Spring框架可以放在共享的jar目录中，则Spring类的加载由共享类加载器加载，而此时Spring需要管理用户的类，加载Spring类的共享类加载器无法加载用户的类，此时Spring则使用线程上下文加载器，即谁调用Spring去管理Bean，谁就要提供给Spring类加载器）</p>
</li>
</ul>
<h3 id="案例：Tomcat类加载结构"><a href="#案例：Tomcat类加载结构" class="headerlink" title="案例：Tomcat类加载结构"></a>案例：Tomcat类加载结构</h3><ul>
<li><p>要解决的问题</p>
<ol>
<li>部署在同一个服务器上的多个应用Java类库实现相互隔离</li>
<li>部署在同一个服务器上的应用间Java类库可以共享（例如公共的类库）</li>
<li>服务器需要保证自身的安全不受应用影响，服务器所使用的类库与应用使用的类库应该隔离</li>
<li>JSP服务器需要支持HotSwap(JSP文件修改，JSP对应的生成类需要热替换) </li>
</ol>
</li>
<li><p>Tomcat的类文件目录结构</p>
<ul>
<li><code>/common/*</code>：放在这个下面的类库，可以被Tomcat和多有的Web应用程序共同使用。</li>
<li><code>/server/*</code>：类库可以被Tomcat使用，对所有的Web应用程序都不可见。</li>
<li><code>/shared/*</code>：类库可被所有web应用程序共同使用，但对Tomcat自己不可见</li>
<li><code>/WEB-INF/*</code>：类库仅仅可以被此Web应用程序使用，对Tomcat和其他web程序都不可见。</li>
</ul>
</li>
<li><p>Tomcat设计的类加载器结构，不同的类加载器加载不同的部分，实现了隔离</p>
<p>  <img src="/2017/06/22/Understand-JVM-Part-II/Tomcat类加载器.png" alt=""></p>
</li>
<li><p>JasperLoader的加载范围仅仅是这个 JSP 文件所编译出来的那一个 Class， 它出现的目的就是为了被丢弃：当服务器检测到 JSP 文件被修改时，会替换掉目前的 JasperLoader 的实例，并通过再建立一个新的 Jsp 类加载器来实现 JSP 文件的 HotSwap 功能。</p>
</li>
<li><p>对于 Tomcat 的 6.x 版本，只有指定了 tomcat/conf/catalina.properties配置文件的 server.loader 和 share.loader 项后才会真正建立 CatalinaClassLoader 和 SharedClassLoader 的实例，否则会用到这两个类加载器的地方都会用 CommonClassLoader 的实例代替，而默认没有设置，所以 Tomcat 6.x 顺理成章地把/common、/server 和/shared 三个目录默认合并到一起变成一个/lib 目录。这个目录里的类库相当于以前/common目录中类库的作用。这是Tomcat设计团队为了简化部署所做的一项改进。</p>
</li>
</ul>
<h2 id="字节码执行引擎"><a href="#字节码执行引擎" class="headerlink" title="字节码执行引擎"></a>字节码执行引擎</h2><h3 id="运行时栈帧结构"><a href="#运行时栈帧结构" class="headerlink" title="运行时栈帧结构"></a>运行时栈帧结构</h3><ul>
<li>栈帧存储了方法的局部变量表、操作数栈、动态连接和方法返回地址等信息。</li>
<li>每一个方法从调用开始至执行完成的过程，都对应着一个栈帧在虚拟机栈里面从入栈到出栈的过程。</li>
<li>每一个栈帧都包括了局部变量表、操作数栈、动态连接、方法返回地址和一些额外的附加信息。</li>
<li>对于执行引擎来说，在活动线程中，只有位于栈顶的栈帧才是有效的，称为当前栈帧。</li>
</ul>
<h4 id="局部变量表"><a href="#局部变量表" class="headerlink" title="局部变量表"></a>局部变量表</h4><ul>
<li>存放方法参数和方法内部的局部变量</li>
<li>局部变量表容量以变量槽为最小单位（Slot），每个Slot可以存放32位以内的数据，64存放在两个Slot中（long double）</li>
<li>编译程序时，需要使用多少局部变量表已经确定，不受代码运行期间影响</li>
<li>方法执行时，使用局部变量表完成传参，如果是实例方法，第0位Slot存放对象的实例引用（this指针），其他参数从1开始传入，之后是内部的局部变量</li>
<li><p>Slot会复用，会对垃圾回收产生影响，但编译成JIT代码后枚举GC Roots行为会与解释执行有不同，不会有问题</p>
  <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">byte</span>[] bytes=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">64</span> * <span class="number">1024</span> * <span class="number">1024</span>];</div><div class="line">        &#125;</div><div class="line">        <span class="comment">//此处不一定回收内存，回收bytes本质是要看Slot中是否存在对bytes数据对象的引用，GC Roots包含局部变量表</span></div><div class="line">        <span class="comment">//此时占用的Slot没有被其他变量使用，栈帧中的存放bytes的Slot中仍然存在对数据的引用</span></div><div class="line">        <span class="comment">// int i=0; 此处加本行则会回收，i会复用bytes的Slot</span></div><div class="line">        System.gc();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>局部变量初始化才可以使用，不存在准备阶段（赋初值，参考类变量）</p>
</li>
</ul>
<h4 id="操作数栈"><a href="#操作数栈" class="headerlink" title="操作数栈"></a>操作数栈</h4><ul>
<li>编译程序时，需要使用深的操作数栈已经确定，不受代码运行期间影响</li>
<li>操作数栈的数据类型必须与字节码指令序列严格匹配，编译器保证</li>
<li>Java虚拟机的解释执行引擎称为基于栈的执行引擎，栈即指操作数栈</li>
<li>一般的虚拟机会对操作数栈进行优化，让下面栈帧的部分操作数栈与上面栈帧的部分局部变量表重叠，省去了额外的参数复制</li>
</ul>
<h4 id="动态连接"><a href="#动态连接" class="headerlink" title="动态连接"></a>动态连接</h4><ul>
<li>指向运行时常量池中该栈帧方法的引用，用户支持调用过程中的动态连接（Dynamic Linking）</li>
</ul>
<h4 id="方法返回地址"><a href="#方法返回地址" class="headerlink" title="方法返回地址"></a>方法返回地址</h4><ul>
<li>保存方法被调用的位置</li>
<li>方法可以正常返回或异常返回，异常返回没有返回值</li>
<li>方法退出操作大致：恢复上层方法的局部变量表和操作数栈 -&gt; 返回值压入调用者操作数栈 -&gt; PC计数器指向下一条地址</li>
</ul>
<h3 id="方法调用"><a href="#方法调用" class="headerlink" title="方法调用"></a>方法调用</h3><ul>
<li>确定被调用方法的版本过程而不是执行过程</li>
<li>类加载阶段的解析阶段，将一部分方法转换为直接引用，这些方法在执行前可确定版本，且运行期不可变（见下）</li>
<li><p>Java关于方法调用的字节码：</p>
<ol>
<li>invokestatic:调用静态方法 <strong>（执行前可确定版本）</strong></li>
<li>invokespecial:调用实例构造器方法，私有方法和父类方法 <strong>（执行前可确定版本）</strong></li>
<li>invokevirtual:调用虚方法 <strong>（final方法也是该字节码调，但是其不是虚方法）</strong></li>
<li>invokeinterface:调用接口方法，会在运行时再确定一个实现此接口的对象。</li>
<li>invokedynamic:先在运行时动态解析出调用点限定符所引用的方法，然后再执行该方法，在此之前的4条调用指令，分派逻辑是固化在Java虚拟机内部的，而invokedynamic指令的分派逻辑是由用户所设定的引导方法决定的。</li>
</ol>
</li>
<li><p>方法版本的确定-分派：</p>
<ul>
<li>静态分派：根据依赖静态类型选择方法版本（方法重载）</li>
<li>动态分派：运行期根据实际类型确定方法执行版本</li>
</ul>
</li>
<li>Java: 静态多分派（根据静态类型与参数列表选择方法，编译期确定），动态单分派（此时只需要确定具体对象类型的方法版本，不同参数列表导致的方法版本确定已经在编译期完成）</li>
<li><p>动态分派实现方式：虚方法表，保存各个方法的实际入口，没有重写父类方法就指向父类实现入口（还有其他方法，如内联缓存Inline Cache、基于继承关系分析CHA的守护内联Guard Inlining等非稳定手段）</p>
<p>  <img src="/2017/06/22/Understand-JVM-Part-II/vtable.png" alt=""></p>
</li>
<li><p>Java7之后提供了MethodHandle机制实现动态方法调用</p>
</li>
</ul>
<h3 id="基于栈的字节码执行引擎"><a href="#基于栈的字节码执行引擎" class="headerlink" title="基于栈的字节码执行引擎"></a>基于栈的字节码执行引擎</h3><ul>
<li>Java 编译器输出的指令流，基本上是一种基于栈的指令集架构，大部分都是零地址指令。</li>
<li>基于栈的指令集主要的优点就是可移植，寄存器由硬件直接提供，程序直接依赖这些硬件寄存器则不可避免地要受到硬件的约束。</li>
<li>栈架构指令集的主要缺点是执行速度相对来说会稍慢一些。</li>
</ul>
<h3 id="案例：远程调用"><a href="#案例：远程调用" class="headerlink" title="案例：远程调用"></a>案例：远程调用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClassExecutor</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">MyClassLoader</span> <span class="keyword">extends</span> <span class="title">ClassLoader</span> </span>&#123;</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MyClassLoader</span><span class="params">()</span> </span>&#123;</div><div class="line">            <span class="keyword">super</span>(MyClassLoader.class.getClassLoader());</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">public</span> Class <span class="title">loadBytes</span><span class="params">(<span class="keyword">byte</span>[] bytes)</span> </span>&#123;</div><div class="line">            <span class="keyword">return</span> defineClass(<span class="keyword">null</span>, bytes, <span class="number">0</span>, bytes.length);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 执行外部传过来的代表一个Java类的Byte数组&lt;br&gt;</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> classByte</div><div class="line">     *         代表一个Java类的Byte数组</div><div class="line">     * <span class="doctag">@param</span> methodName</div><div class="line">     *          方法名称</div><div class="line">     * <span class="doctag">@return</span> 执行结果</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">execute</span><span class="params">(<span class="keyword">byte</span>[] classByte, String methodName)</span> </span>&#123;</div><div class="line">        Class clazz = <span class="keyword">new</span> MyClassLoader().loadBytes(classByte);</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">           Object obj=clazz.newInstance();</div><div class="line">            Method method = clazz.getMethod(methodName);</div><div class="line">            <span class="keyword">return</span> method.invoke(obj);</div><div class="line">        &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">            <span class="keyword">return</span> <span class="string">"Err"</span> + e.getMessage();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;虚拟机执行系统&quot;&gt;&lt;a href=&quot;#虚拟机执行系统&quot; class=&quot;headerlink&quot; title=&quot;虚拟机执行系统&quot;&gt;&lt;/a&gt;虚拟机执行系统&lt;/h1&gt;&lt;h2 id=&quot;Class文件结构与字节码&quot;&gt;&lt;a href=&quot;#Class文件结构与字节码&quot; class
    
    </summary>
    
      <category term="Java" scheme="https://pingansheng.github.io/categories/Java/"/>
    
    
      <category term="JVM" scheme="https://pingansheng.github.io/tags/JVM/"/>
    
  </entry>
  
  <entry>
    <title>Understand JVM Part I</title>
    <link href="https://pingansheng.github.io/2017/06/14/Understand-JVM-Part-I/"/>
    <id>https://pingansheng.github.io/2017/06/14/Understand-JVM-Part-I/</id>
    <published>2017-06-14T01:38:00.000Z</published>
    <updated>2024-02-24T02:35:09.224Z</updated>
    
    <content type="html"><![CDATA[<h1 id="自动内存管理机制"><a href="#自动内存管理机制" class="headerlink" title="自动内存管理机制"></a>自动内存管理机制</h1><h2 id="Java的内存区域"><a href="#Java的内存区域" class="headerlink" title="Java的内存区域"></a>Java的内存区域</h2><p><img src="/2017/06/14/Understand-JVM-Part-I/运行时数据区.png" alt=""></p>
<h4 id="1、程序计数（寄存）器"><a href="#1、程序计数（寄存）器" class="headerlink" title="1、程序计数（寄存）器"></a>1、程序计数（寄存）器</h4><ul>
<li>可看作当前线程执行的字节码行数指示器，各线程私有，线程切换时可以恢复当前的状态</li>
<li>此内存区域是唯一一个不定义OutOfMemoryError的区域</li>
<li>如果执行的是Java方法，计数器记录的是正在执行的虚拟机字节码指令的地址，本地方法则为空</li>
</ul>
<h4 id="2、Java虚拟机栈"><a href="#2、Java虚拟机栈" class="headerlink" title="2、Java虚拟机栈"></a>2、Java虚拟机栈</h4><ul>
<li>线程私有，生命周期与线程相同</li>
<li>此区域描述的是Java方法执行的内存模型 - 每个方法执行同时在栈中创建一个新的栈元素，即栈帧(Stack Frame), 用于存储局部变量表、操作数栈、动态链接、方法出口等信息（递归调用如果没有终止条件或次数过多，每次递归调用都会创建栈帧，栈就会无法容纳足够的栈帧而溢出）</li>
<li>局部变量表在编译期间完成分配，进入方法时，这个方法在栈帧中的局部变量表分配空间完全确定，运行期间不会改变</li>
<li>当线程请求的栈深度超过允许抛出StackOverflowError</li>
<li>若是虚拟机允许动态扩展此区域（大多数都可以），那么扩展时申请不到足够的内存，抛出OOM</li>
</ul>
<h4 id="3、本地方法栈"><a href="#3、本地方法栈" class="headerlink" title="3、本地方法栈"></a>3、本地方法栈</h4><ul>
<li>类似于虚拟机栈，为Native方法服务</li>
<li>也会抛出两种异常SOE、OOM</li>
</ul>
<h4 id="4、Java堆"><a href="#4、Java堆" class="headerlink" title="4、Java堆"></a>4、Java堆</h4><ul>
<li>JVM管理的最大一块内存，所有线程共享</li>
<li>分配所有的对象实例与数组</li>
<li>JVM的优化技术如逃逸分析、栈上分配、标量替换会导致上条规则不绝对</li>
<li>进一步可分为新生代与老年代或Eden、FromSurvivor、ToSurvivor空间</li>
<li>内存分配时也可能会分出线程私有的分配缓冲区（Thread Local Allocation Buffer, TLAB）</li>
<li>Java堆划分的目的都是为了更好更快的回收与分配内存</li>
<li>堆分配可抛出OOM</li>
<li>多线程创建过程中，如果每个线程分配的内存过大，更容易OOM，此时需要减少最大堆与栈容量来换取更多线程（每个进程OS分配的内存是有上限的）</li>
</ul>
<h4 id="5、方法区"><a href="#5、方法区" class="headerlink" title="5、方法区"></a>5、方法区</h4><ul>
<li>线程共享，存储被虚拟机加载的类信息、常量、静态变量、即时编译器(JIT)编译后的代码</li>
<li>HotSpot虚拟机使用永久代来实现方法区，这样可以使得GC一起管理这部分内存</li>
<li>未来逐步将采用Native Memory来实现，避免内存溢出，Java8已经使用元空间来实现这一部分</li>
<li>分配可抛出OOM</li>
</ul>
<h4 id="6、运行时常量池"><a href="#6、运行时常量池" class="headerlink" title="6、运行时常量池"></a>6、运行时常量池</h4><ul>
<li>方法区的一部分</li>
<li>存放Class文件中的各种字面量和符号引用，以及翻译出来的直接引用</li>
<li>具备动态性，运行期间也可以将新的常量放入</li>
<li>可抛出OOM</li>
</ul>
<h4 id="7、直接内存"><a href="#7、直接内存" class="headerlink" title="7、直接内存"></a>7、直接内存</h4><ul>
<li>不属于运行时数据区，不是Java虚拟机规范中定义的内存区域</li>
<li>此部分内存也频繁的使用且会抛出OOM</li>
<li>NIO类可以使用Native函数直接分配堆外内存，通过存储在Java堆中的DirectByteBuffer对象作为内存的引用进行操作，这样可以避免在Native堆与Java堆复制数据</li>
<li>此区域内存不受Java堆限制，当各个区域内存总和大于物理内存时，动态扩展时出现OOM</li>
</ul>
<h2 id="Java对象"><a href="#Java对象" class="headerlink" title="Java对象"></a>Java对象</h2><h4 id="1、对象的创建"><a href="#1、对象的创建" class="headerlink" title="1、对象的创建"></a>1、对象的创建</h4><p><img src="/2017/06/14/Understand-JVM-Part-I/对象创建过程.png" alt=""></p>
<h4 id="2、对象的内存布局"><a href="#2、对象的内存布局" class="headerlink" title="2、对象的内存布局"></a>2、对象的内存布局</h4><ul>
<li>对象结构包含对象头（Header）、示例数据（Instance Data）、对齐填空（Padding）</li>
<li>32位机器上，非数组对象，对象头一共4 + 4 = 8字节，64为机器为8 + 8 = 16字节，数组长度始终为4字节<br><img src="/2017/06/14/Understand-JVM-Part-I/对象头结构.png" alt=""></li>
<li><p>其中MarkWord结构如下<br><img src="/2017/06/14/Understand-JVM-Part-I/MarkWord结构.jpg" alt=""></p>
</li>
<li><p>由于HotSpot要求对象的起始地址为8字节的整数倍，所有需要Padding来补全</p>
</li>
</ul>
<h4 id="3、对象的访问"><a href="#3、对象的访问" class="headerlink" title="3、对象的访问"></a>3、对象的访问</h4><ul>
<li>直接指针访问<blockquote>
<p>本地变量表中存储Java堆中的对象引用，堆中对象存储指向方法区类型数据</p>
</blockquote>
</li>
<li>句柄访问<blockquote>
<p>本地变量表中存储指向句柄池中的对象句柄地址，句柄中包含实例数据地址与类型数据地址，对象移动时，只改变句柄池中的指针，本地变量表指向的是稳定的句柄地址</p>
</blockquote>
</li>
</ul>
<h2 id="垃圾收集器与内存分配"><a href="#垃圾收集器与内存分配" class="headerlink" title="垃圾收集器与内存分配"></a>垃圾收集器与内存分配</h2><h4 id="1、需要收集的内存"><a href="#1、需要收集的内存" class="headerlink" title="1、需要收集的内存"></a>1、需要收集的内存</h4><ul>
<li>程序计数器、虚拟机栈、本地方法栈随线程消亡而消亡（栈帧入栈与出栈）</li>
<li>堆（包括方法区）需要垃圾回收器参与</li>
</ul>
<h4 id="2、寻找可回收的对象"><a href="#2、寻找可回收的对象" class="headerlink" title="2、寻找可回收的对象"></a>2、寻找可回收的对象</h4><ul>
<li>引用计数：难以解决循环引用问题</li>
<li>可达性分析：Java、C#使用, 通过GC Roots系列对象进行可达性分析，不可用的对象就可以回收，GC Root对象主要包括：栈中的引用（本地变量表）、方法区类静态属性引用、方法区常量引用、本地方法栈中JNI(Native方法)的引用</li>
<li>引用的加强：JVM对引用进行了进一步划分<ol>
<li>强引用：一般情况下的引用，<code>Object o = new Object()</code></li>
<li>软引用：系统发送OOM之前将这些引用再次回收，如果还不够才OOM, 参见类<code>SoftReference</code></li>
<li>弱引用：存活至下一次垃圾回收，参见类<code>WeakReference</code></li>
<li>虚引用：无法通过虚引用来获取一个对象，为一个对象设置虚引用关联唯一目的是在其回收时收到一个通知，参见类<code>PhantomReference</code></li>
</ol>
</li>
</ul>
<h4 id="3、最后一次挣扎"><a href="#3、最后一次挣扎" class="headerlink" title="3、最后一次挣扎"></a>3、最后一次挣扎</h4><ul>
<li>对象判定不可达之后不会马上回收，会进行判定需要不需要执行<code>finalize()</code>方法，如果需要执行，进入F-Queue，Finalizer线程会进行处理，如果<code>finalize()</code>方法中对象成功“自救”则不会回收（重新与引用链挂钩，例如将自己挂在某个类的静态变量下）</li>
<li>强制！！finalize方法不允许使用！</li>
</ul>
<h4 id="4、关于方法区"><a href="#4、关于方法区" class="headerlink" title="4、关于方法区"></a>4、关于方法区</h4><ul>
<li>存在垃圾回收，主要有废弃常量与无用类</li>
<li>废弃常量判断条件：如果没有地方引用某个常量，则垃圾回收时可以回收</li>
<li>废弃类判断条件按：该类所有实例被回收、该类的ClassLoder被回收、该类对应的Class对象没有被引用，无法在任何地方通过反射该类的方法</li>
<li>JVM创建的3个默认的类加载器（BootStrap Classloader、ExtClassLoader、AppClassLoader）加载的系统类（如String）或应用类都不能再运行时释放，无法满足上面的条件</li>
</ul>
<h4 id="5、垃圾回收算法"><a href="#5、垃圾回收算法" class="headerlink" title="5、垃圾回收算法"></a>5、垃圾回收算法</h4><pre><code>1. 标记清扫（Mark-Sweep）
    * 效率低、碎片化
    * 分配大对象找不到连续内存引发二次清扫

2. 复制（Copying）
    * 现代商业虚拟机都采用这种方式
    * 将内存分成两块，把存活的对象复制到另一块，整体清理前一块内存
    * IBM研究表明大部分对象“朝生夕死”，将内寸分为一大（Eden）二小（Survivor），清理时
      将Eden和S1存活的对象复制到S2中，清理掉Eden和S1，HotSpot默认的比例是8:1
    * 上条提到的S2不足时，需要老年代进行分配担保，即将无法存放的对象放置老年代
    * 两个Survivor区域的操作逻辑目的是为了始终保留一个S区域是空的

3. 标记整理（Mark-Compact）
    * 标记后，让存活的对象都向一端移动，直接清理端边界以外的内存

4. 分代回收
    * 当前商业虚拟机均采用
    * 将内存分代，不同代内存采用不同方式，新生代有大量对象死亡，采用复制算法，而老年代
      对象存活率高，没有额外的空间做分配担保，使用“标记清理”或“标记整理”方式
</code></pre><h4 id="6、HotSpot算法实现"><a href="#6、HotSpot算法实现" class="headerlink" title="6、HotSpot算法实现"></a>6、HotSpot算法实现</h4><pre><code>1. 枚举根节点
    * 在枚举根节点时，需要停顿所有Java执行线程以保证结果的准确性（Stop The World）
    * 使用OopMap数据结构快速直接得知那些地方存在对象引用，类加载完成的时候，HotSpot把对象什么偏移量是什么类型计算出来，
      JIT编译过程也会记录栈与寄存器哪些位置是引用，GC扫描时直接获取该信息
2. 安全点（Safepoint）
    * 对于具备长时间执行特征的程序，程序执行在到达安全点时才暂停，依靠指令序列重复判定（方法调用、循环跳转、异常跳转）
    * 采用主动式中断，在执行指令中加入test执行使得线程自陷，进而中断
3. 安全区域（Saferegion）
    * 对于无法进入安全点的程序，如Sleep、Block中的线程，通过判定当前是否进入安全区并标识自身，此时GC时将跳过这些线程
    * 线程离开安全区时，检查系统是否完成根节点枚举或GC过程，完成则继续执行，否则等待完成的信号
</code></pre><h4 id="7、垃圾收集器"><a href="#7、垃圾收集器" class="headerlink" title="7、垃圾收集器"></a>7、垃圾收集器</h4><p><img src="/2017/06/14/Understand-JVM-Part-I/GCs.png" alt=""></p>
<ul>
<li>垃圾收集器是搭配使用的</li>
</ul>
<table>
<thead>
<tr>
<th>收集器</th>
<th style="text-align:left">算法</th>
<th style="text-align:left">用于分代</th>
<th style="text-align:left">多线程</th>
<th style="text-align:left">配对收集器</th>
<th style="text-align:left">暂停所有用户线程</th>
<th style="text-align:left">备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>Serial</td>
<td style="text-align:left">复制</td>
<td style="text-align:left">新生代</td>
<td style="text-align:left">N</td>
<td style="text-align:left">Serial Old; CMS</td>
<td style="text-align:left">Y</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td>ParNew</td>
<td style="text-align:left">复制</td>
<td style="text-align:left">新生代</td>
<td style="text-align:left">Y</td>
<td style="text-align:left">Serial Old; CMS</td>
<td style="text-align:left">Y</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td>Parallel Scavenge</td>
<td style="text-align:left">复制</td>
<td style="text-align:left">新生代</td>
<td style="text-align:left">Y</td>
<td style="text-align:left">Serial Old; Parallel Old</td>
<td style="text-align:left">Y</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td>Serial Old</td>
<td style="text-align:left">标记整理</td>
<td style="text-align:left">老年代</td>
<td style="text-align:left">N</td>
<td style="text-align:left">Serial; ParNew; Parallel Scavenge;</td>
<td style="text-align:left">Y</td>
<td style="text-align:left">( CMS 在Server模式下的备用预案)</td>
</tr>
<tr>
<td>Parallel Old</td>
<td style="text-align:left">标记整理</td>
<td style="text-align:left">老年代</td>
<td style="text-align:left">Y</td>
<td style="text-align:left">Parallel Scavenge</td>
<td style="text-align:left">Y</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td>CMS(Concurrent Mark Sweep)</td>
<td style="text-align:left">标记清扫</td>
<td style="text-align:left">老年代</td>
<td style="text-align:left">Y</td>
<td style="text-align:left">Serial; ParNew</td>
<td style="text-align:left">part</td>
<td style="text-align:left">初始标记与重新标记停所有用户线程</td>
</tr>
<tr>
<td>G1</td>
<td style="text-align:left">标记整理（整体）<br>复制（局部）</td>
<td style="text-align:left">新生代; 老年代</td>
<td style="text-align:left">Y</td>
<td style="text-align:left">-</td>
<td style="text-align:left">part</td>
<td style="text-align:left">初始标记、最终标记、筛选回收暂停所有用户线程</td>
</tr>
</tbody>
</table>
<h4 id="8、内存分配与回收策略"><a href="#8、内存分配与回收策略" class="headerlink" title="8、内存分配与回收策略"></a>8、内存分配与回收策略</h4><ul>
<li>对象首先在Eden上分配，空间不足时，JVM发起Minor GC(新生代GC 对应的老年代GC称为 Major/Full GC)</li>
<li>大对象直接进入老年代（例如大的字符串或数组）</li>
<li>长期存活的对象将进入老年代（每个对象定义了一个Age计数器，每次Minor GC存活Age+1，超过阀值进入老年代）</li>
<li>Survivor中相同年龄所有对象大小总和超过一半的，年龄大于该数的进入老年代，不需要阀值条件</li>
<li>JDK 1.6U24之后，分配对象时若老年代连续空间大于新生代对象总大小或每次晋升的平均值就会发生Minor GC，否则进行Full GC, 之前版本依赖HandlePromotionFailure参数进行判断</li>
<li>Perm区域的回收由Full GC触发</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;自动内存管理机制&quot;&gt;&lt;a href=&quot;#自动内存管理机制&quot; class=&quot;headerlink&quot; title=&quot;自动内存管理机制&quot;&gt;&lt;/a&gt;自动内存管理机制&lt;/h1&gt;&lt;h2 id=&quot;Java的内存区域&quot;&gt;&lt;a href=&quot;#Java的内存区域&quot; class=&quot;he
    
    </summary>
    
      <category term="Java" scheme="https://pingansheng.github.io/categories/Java/"/>
    
    
      <category term="JVM" scheme="https://pingansheng.github.io/tags/JVM/"/>
    
  </entry>
  
  <entry>
    <title>Skip List</title>
    <link href="https://pingansheng.github.io/2017/05/11/Skip-List/"/>
    <id>https://pingansheng.github.io/2017/05/11/Skip-List/</id>
    <published>2017-05-11T05:39:55.000Z</published>
    <updated>2024-02-24T02:35:09.115Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Skip-List"><a href="#Skip-List" class="headerlink" title="Skip List"></a>Skip List</h1><h2 id="1-overview"><a href="#1-overview" class="headerlink" title="1. overview"></a>1. overview</h2><ul>
<li>Skip List是一种经过优化的链表，通过存储了冗余的节点作为跳板指针，提供了O(logn)的增删改查效率</li>
<li>结构与算法过程较红黑树更容易理解，实现也更简单</li>
</ul>
<p><img src="/2017/05/11/Skip-List/overview.png" alt=""></p>
<ul>
<li>如果某一层拥有某节点，则其下每一层均有该节点，之间存在指针关联，例如3,5</li>
<li>链表的层数在插入节点时有机会更新，采用丢硬币方法，如果产生的新层数newLevel比原始层数level大，则加一层并且且在新层及其以下层均插入节点，否则，在newLevel至底层间所有层插入节点</li>
</ul>
<p>存储结构如图所示，红色线条代表查询路径，在跳板指针的帮助下，直接跳过了大部分节点，很容易的可以写出搜索代码</p>
<p>首先给出基础的节点定义与变量:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//当前跳表层数</span></div><div class="line"><span class="keyword">private</span> <span class="keyword">int</span> level = <span class="number">1</span>;</div><div class="line"><span class="comment">//头节点的key</span></div><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> HEAD_KEY = Integer.MIN_VALUE;</div><div class="line"><span class="comment">//节点数</span></div><div class="line"><span class="keyword">private</span> <span class="keyword">int</span> count = <span class="number">0</span>;</div><div class="line"><span class="keyword">private</span> Random r;</div><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">double</span> PROBABILITY = <span class="number">0.5</span>;<span class="comment">//向上提升一个的概率</span></div><div class="line"></div><div class="line"><span class="comment">//顶层指针</span></div><div class="line"><span class="keyword">private</span> Node top;</div><div class="line"><span class="comment">//底层链表指针</span></div><div class="line"><span class="keyword">private</span> Node bottomHead;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 跳表的节点定义</div><div class="line"> */</div><div class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span> </span>&#123;</div><div class="line">    Node next;</div><div class="line">    Node down;</div><div class="line">    <span class="keyword">int</span> key;</div><div class="line">    V value;</div><div class="line">    <span class="keyword">int</span> level;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">()</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">(<span class="keyword">int</span> key, V value)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.key = key;</div><div class="line">        <span class="keyword">this</span>.value = value;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">(<span class="keyword">int</span> key, V value, <span class="keyword">int</span> level)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.key = key;</div><div class="line">        <span class="keyword">this</span>.value = value;</div><div class="line">        <span class="keyword">this</span>.level = level;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">(Node node, <span class="keyword">int</span> level)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.key = node.key;</div><div class="line">        <span class="keyword">this</span>.value = node.value;</div><div class="line">        <span class="keyword">this</span>.level = level;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">(Node node)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.key = node.key;</div><div class="line">        <span class="keyword">this</span>.value = node.value;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 初始化</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initList</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="comment">//空表 初始化</span></div><div class="line">    top = <span class="keyword">new</span> Node(HEAD_KEY, <span class="keyword">null</span>);</div><div class="line">    bottomHead = top;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 确定新的层数，随机丢硬币</div><div class="line"> *</div><div class="line"> * <span class="doctag">@return</span></div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">newLevel</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> level = <span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span> (r.nextDouble() &gt; PROBABILITY) &#123;</div><div class="line">        level++;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> level;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="2-查找"><a href="#2-查找" class="headerlink" title="2. 查找"></a>2. 查找</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 查找节点</div><div class="line"> *</div><div class="line"> * <span class="doctag">@param</span> key</div><div class="line"> *</div><div class="line"> * <span class="doctag">@return</span></div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> Node <span class="title">find</span><span class="params">(<span class="keyword">int</span> key)</span> </span>&#123;</div><div class="line">    Node p = top;</div><div class="line">    <span class="keyword">if</span> (p == <span class="keyword">null</span>) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</div><div class="line">        <span class="keyword">while</span> (p.next != <span class="keyword">null</span> &amp;&amp; p.next.key &lt;= key) &#123;</div><div class="line">            p = p.next;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (p.down != <span class="keyword">null</span>) &#123;</div><div class="line">            p = p.down;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (p.key == key) &#123;</div><div class="line">        <span class="keyword">return</span> p;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="/2017/05/11/Skip-List/update_delete.png" alt=""></p>
<h2 id="3-插入"><a href="#3-插入" class="headerlink" title="3. 插入"></a>3. 插入</h2><ul>
<li>如图红色区域所示，插入节点的核心思想，找到需要插入层的新节点位置之前的指针，循环指针完成指针指向即可</li>
<li>插入节点之前需要确认新的随机层数，之后找到开始插入的层，由上到下</li>
<li>注意不要使用每一层都重新查找的方式进行节点插入，可行，但是速度极慢<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 插入</div><div class="line"> *</div><div class="line"> * <span class="doctag">@param</span> value</div><div class="line"> *</div><div class="line"> * <span class="doctag">@return</span></div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> Node <span class="title">insert</span><span class="params">(<span class="keyword">int</span> key, V value)</span> </span>&#123;</div><div class="line"></div><div class="line">    List&lt;Node&gt; noteToUpdate = Lists.newArrayList();</div><div class="line"></div><div class="line">    <span class="comment">//迭代各层寻找需要插入key节点的前置节点，放入List</span></div><div class="line">    Node p = top;</div><div class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</div><div class="line">        <span class="keyword">while</span> (p.next != <span class="keyword">null</span> &amp;&amp; p.next.key &lt;= key) &#123;</div><div class="line">            p = p.next;</div><div class="line">        &#125;</div><div class="line">        noteToUpdate.add(p);</div><div class="line">        <span class="keyword">if</span> (p.down != <span class="keyword">null</span>) &#123;</div><div class="line">            p = p.down;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//查询是否存在，如果存在，最后一个节点一定是</span></div><div class="line">    Node lastOne = noteToUpdate.get(noteToUpdate.size() - <span class="number">1</span>);</div><div class="line">    <span class="keyword">if</span> (lastOne.key == key) &#123;</div><div class="line">        <span class="keyword">return</span> lastOne;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//新层数，如果比现在大，就赋值1，增加一层，否则根据随机值向下寻找插入节点的首层</span></div><div class="line">    <span class="keyword">int</span> newLevel = newLevel() - level;</div><div class="line">    newLevel = newLevel &gt; <span class="number">0</span> ? <span class="number">1</span> : newLevel;</div><div class="line">    Node headNode = top;</div><div class="line"></div><div class="line">    <span class="comment">//新层数小于当前层，则从高层开始，每层插入节点即可</span></div><div class="line">    <span class="keyword">while</span> (newLevel != <span class="number">0</span>) &#123;</div><div class="line">        <span class="keyword">if</span> (newLevel &gt; <span class="number">0</span>) &#123;</div><div class="line">            Node oldHead = headNode;</div><div class="line">            headNode = <span class="keyword">new</span> Node(HEAD_KEY, <span class="keyword">null</span>, oldHead.level + <span class="number">1</span>);</div><div class="line">            headNode.down = oldHead;</div><div class="line">            top = headNode;</div><div class="line">            level++;</div><div class="line">            newLevel--;</div><div class="line">            <span class="comment">//增加新层，则要插入的节点需要增加，放在List头部，节点就是新headNode</span></div><div class="line">            noteToUpdate.add(<span class="number">0</span>, headNode);</div><div class="line">            <span class="keyword">continue</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (newLevel &lt; <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">if</span> (headNode.down != <span class="keyword">null</span>) &#123;</div><div class="line">                headNode = headNode.down;</div><div class="line">                <span class="comment">//插入层向下移动，则要插入的节点需要减少，从头开始减少</span></div><div class="line">                noteToUpdate.remove(<span class="number">0</span>);</div><div class="line">            &#125;</div><div class="line">            newLevel++;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//循环各个需要插入的节点进行插入，并配置向下指针</span></div><div class="line">    <span class="comment">//此处从末尾节点开始，方便配置down指针</span></div><div class="line">    Node bottomNode = <span class="keyword">null</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = noteToUpdate.size() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</div><div class="line">        Node pre = noteToUpdate.get(i);</div><div class="line">        Node preNext = pre.next;</div><div class="line">        Node node = <span class="keyword">new</span> Node(key, value, pre.level);</div><div class="line">        pre.next = node;</div><div class="line">        node.next = preNext;</div><div class="line">        node.down = bottomNode;</div><div class="line">        bottomNode = node;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    count++;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="4-更新"><a href="#4-更新" class="headerlink" title="4. 更新"></a>4. 更新</h2><ul>
<li>如图蓝色路径显示，找到该节点，从上到下更新即可</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">    * 更新</div><div class="line">    *</div><div class="line">    * <span class="doctag">@param</span> key</div><div class="line">    *</div><div class="line">    * <span class="doctag">@return</span></div><div class="line">    */</div><div class="line">   <span class="function"><span class="keyword">private</span> Node <span class="title">update</span><span class="params">(<span class="keyword">int</span> key, V value)</span> </span>&#123;</div><div class="line">       Node p = top;</div><div class="line">       <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</div><div class="line">           <span class="keyword">while</span> (p.next != <span class="keyword">null</span> &amp;&amp; p.next.key &lt;= key) &#123;</div><div class="line">               p = p.next;</div><div class="line">           &#125;</div><div class="line">           <span class="keyword">if</span> (p.key == key) &#123;</div><div class="line">               <span class="keyword">break</span>;</div><div class="line">           &#125; <span class="keyword">else</span> &#123;</div><div class="line">               <span class="keyword">if</span> (p.down != <span class="keyword">null</span>) &#123;</div><div class="line">                   p = p.down;</div><div class="line">               &#125; <span class="keyword">else</span> &#123;</div><div class="line">                   p = <span class="keyword">null</span>;</div><div class="line">                   <span class="keyword">break</span>;</div><div class="line">               &#125;</div><div class="line">           &#125;</div><div class="line">       &#125;</div><div class="line">       <span class="keyword">if</span> (p == <span class="keyword">null</span>) &#123;</div><div class="line">           <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">       &#125;</div><div class="line">       Node updated = p;</div><div class="line">       <span class="keyword">while</span> (p != <span class="keyword">null</span>) &#123;</div><div class="line">           updated = p;</div><div class="line">           p.value = value;</div><div class="line">           p = p.down;</div><div class="line">       &#125;</div><div class="line">       <span class="keyword">return</span> updated;</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<h2 id="5-删除"><a href="#5-删除" class="headerlink" title="5. 删除"></a>5. 删除</h2><ul>
<li>如图紫色路径显示，找到该节点的所有前驱，从上到下更新指向下一个节点即可</li>
<li>同时需要处理空层，将其去除</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 删除</div><div class="line"> *</div><div class="line"> * <span class="doctag">@param</span> key</div><div class="line"> *</div><div class="line"> * <span class="doctag">@return</span></div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> key)</span> </span>&#123;</div><div class="line">    Node p = top;</div><div class="line">    Node head = p;</div><div class="line">    List&lt;Node&gt; noteToUpdate = Lists.newArrayList();</div><div class="line">    List&lt;Node&gt; headTodelete = Lists.newArrayList();</div><div class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</div><div class="line">        <span class="keyword">while</span> (p.next != <span class="keyword">null</span> &amp;&amp; p.next.key &lt; key) &#123;</div><div class="line">            p = p.next;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (p.next != <span class="keyword">null</span> &amp;&amp; p.next.key == key) &#123;</div><div class="line">            noteToUpdate.add(p);</div><div class="line">        &#125;</div><div class="line">        headTodelete.add(head);</div><div class="line">        <span class="keyword">if</span> (p.down != <span class="keyword">null</span>) &#123;</div><div class="line">            p = p.down;</div><div class="line">            head = head.down;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    Node old;</div><div class="line">    <span class="keyword">for</span> (Node node : noteToUpdate) &#123;</div><div class="line">        old = node.next;</div><div class="line">        node.next = old.next;</div><div class="line">        <span class="comment">//释放指针</span></div><div class="line">        old.next = <span class="keyword">null</span>;</div><div class="line">        old.down = <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (Node headNode : headTodelete) &#123;</div><div class="line">        <span class="keyword">if</span> (headNode.next == <span class="keyword">null</span> &amp;&amp; <span class="keyword">null</span> != headNode.down) &#123;</div><div class="line">            top = headNode.down;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="6-打印跳表结构"><a href="#6-打印跳表结构" class="headerlink" title="6. 打印跳表结构"></a>6. 打印跳表结构</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 打印跳表结构</div><div class="line"> *</div><div class="line"> * <span class="doctag">@return</span></div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showNodes</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">    List&lt;V&gt; values = Lists.newArrayList();</div><div class="line">    Node headFirst = bottomHead.next;</div><div class="line">    <span class="keyword">while</span> (headFirst != <span class="keyword">null</span>) &#123;</div><div class="line">        values.add(headFirst.value);</div><div class="line">        headFirst = headFirst.next;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    Node head = top, p;</div><div class="line">    <span class="keyword">while</span> ((p = head) != <span class="keyword">null</span>) &#123;</div><div class="line"></div><div class="line">        <span class="keyword">int</span> lineSepratorCount = <span class="number">0</span>;</div><div class="line">        List&lt;Integer&gt; downPointer = Lists.newArrayList();</div><div class="line">        <span class="keyword">while</span> (p != <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">if</span> (p.key == HEAD_KEY) &#123;</div><div class="line">                System.out.print(<span class="string">"HEAD"</span>);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                <span class="comment">//计算这个value在底层链表中的索引</span></div><div class="line">                <span class="keyword">int</span> valueIndex = values.indexOf(p.value);</div><div class="line">                <span class="comment">//计算本次输出需要输出的-----&gt; 如果是底层就是1，如果不是就是本次value序号减去当前行已经输出的----&gt;</span></div><div class="line">                <span class="keyword">int</span> sepratorCount = head == bottomHead ? <span class="number">1</span> : valueIndex + <span class="number">1</span> - lineSepratorCount;</div><div class="line"></div><div class="line">                <span class="comment">//保存需要输出竖线的索引</span></div><div class="line">                downPointer.add(valueIndex);</div><div class="line"></div><div class="line">                <span class="comment">//更新并输出----&gt;</span></div><div class="line">                lineSepratorCount = lineSepratorCount + sepratorCount;</div><div class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sepratorCount; i++) &#123;</div><div class="line">                    <span class="comment">//如果不是紧接着数值的输出，多输出一个-,用于补位</span></div><div class="line">                    <span class="keyword">if</span> (sepratorCount &gt; <span class="number">1</span> &amp;&amp; i &lt; sepratorCount - <span class="number">1</span>) &#123;</div><div class="line">                        printChar(<span class="number">1</span>, <span class="string">'-'</span>);</div><div class="line">                    &#125;</div><div class="line">                    printChar(<span class="number">4</span>, <span class="string">'-'</span>);</div><div class="line">                    System.out.print(<span class="string">"&gt;"</span>);</div><div class="line">                &#125;</div><div class="line">                System.out.print(p.value);</div><div class="line"></div><div class="line">            &#125;</div><div class="line">            p = p.next;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        head = head.down;</div><div class="line"></div><div class="line">        <span class="comment">//输出竖线</span></div><div class="line">        <span class="keyword">if</span> (head != <span class="keyword">null</span>) &#123;</div><div class="line">            System.out.println();</div><div class="line">            <span class="comment">//补位HEAD的输出，输出头节点之间的竖线</span></div><div class="line">            System.out.print(<span class="string">" |  "</span>);</div><div class="line">            <span class="comment">//输出竖线，如果当前索引在需要输出竖线的List中，则输出竖线，否则输出6个空格</span></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; lineSepratorCount; i++) &#123;</div><div class="line">                printChar(<span class="number">5</span>, <span class="string">' '</span>);</div><div class="line">                <span class="keyword">if</span> (downPointer.contains(i)) &#123;</div><div class="line">                    System.out.print(<span class="string">"|"</span>);</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    printChar(<span class="number">1</span>, <span class="string">' '</span>);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            System.out.println();</div><div class="line"></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    System.out.println();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 输出空格</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">printChar</span><span class="params">(<span class="keyword">int</span> num, <span class="keyword">char</span> cahr)</span> </span>&#123;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</div><div class="line">        System.out.print(cahr);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="7-测试"><a href="#7-测试" class="headerlink" title="7. 测试"></a>7. 测试</h2><ul>
<li>插入应该仍有优化空间<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">ArrayList插入时间：<span class="number">174</span>ms , 数量:<span class="number">5000000</span></div><div class="line">ArrayList搜索时间：<span class="number">18</span>ms</div><div class="line">LinkedList插入时间：<span class="number">2991</span>ms , 数量:<span class="number">5000000</span></div><div class="line">LinkedList搜索时间：<span class="number">31</span>ms</div><div class="line">SkipList插入时间：<span class="number">3717</span>ms , 数量:<span class="number">5000000</span>,层数：<span class="number">22</span></div><div class="line">SkipList搜索时间：<span class="number">0</span>ms</div><div class="line">RBtree插入时间：<span class="number">1583</span>ms , 数量:<span class="number">5000000</span></div><div class="line">RBtree搜索时间：<span class="number">0</span>ms</div></pre></td></tr></table></figure></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Skip-List&quot;&gt;&lt;a href=&quot;#Skip-List&quot; class=&quot;headerlink&quot; title=&quot;Skip List&quot;&gt;&lt;/a&gt;Skip List&lt;/h1&gt;&lt;h2 id=&quot;1-overview&quot;&gt;&lt;a href=&quot;#1-overview&quot; cla
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://pingansheng.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="Skip List" scheme="https://pingansheng.github.io/tags/Skip-List/"/>
    
  </entry>
  
  <entry>
    <title>Red–black tree</title>
    <link href="https://pingansheng.github.io/2017/05/05/Red-black-tree/"/>
    <id>https://pingansheng.github.io/2017/05/05/Red-black-tree/</id>
    <published>2017-05-05T09:09:00.000Z</published>
    <updated>2024-02-24T02:35:08.883Z</updated>
    
    <content type="html"><![CDATA[<h1 id="红黑树"><a href="#红黑树" class="headerlink" title="红黑树"></a>红黑树</h1><h2 id="1-overview"><a href="#1-overview" class="headerlink" title="1. overview"></a>1. overview</h2><ul>
<li>红黑树是一种二叉搜索树 <a href="https://zh.wikipedia.org/wiki/%E4%BA%8C%E5%85%83%E6%90%9C%E5%B0%8B%E6%A8%B9" title="二叉搜索树" target="_blank" rel="noopener">点击查看</a></li>
<li>红黑树实现了一种自平衡，可叫做一种平衡二叉查找树，但其并非完全平衡</li>
<li>在O(log n)时间内做查找，插入和删除</li>
<li>新插入的节点默认都是红色，之后进行插入修复</li>
<li>红黑树的平衡实现靠插入与删除节点后根据颜色规则进行的重新修复</li>
<li><p>红黑树的红黑规则，按照此规则调整数结构即可保持相对平衡</p>
<p>  1）每个结点要么是红的，要么是黑的。<br>  2）根结点是黑的。<br>  3）每个叶结点（叶结点即指树尾端NIL指针或NULL结点）是黑的。<br>  4）如果一个结点是红的，那么它的俩个儿子都是黑的。<br>  5）对于任一结点而言，其到叶结点树尾端NIL指针的每一条路径都包含相同数目的黑结点。  </p>
</li>
<li><p>红黑树的基本操作要点：（查询与插入节点、删除节点与二叉搜索树一致）</p>
<ul>
<li>左旋转</li>
<li>右旋转</li>
<li>插入后修复</li>
<li>删除后修复</li>
</ul>
</li>
</ul>
<h2 id="2-旋转"><a href="#2-旋转" class="headerlink" title="2. 旋转"></a>2. 旋转</h2><ul>
<li>旋转是红黑树动态调整保持相对平衡的实现方式<h3 id="2-1-左旋转"><a href="#2-1-左旋转" class="headerlink" title="2.1 左旋转"></a>2.1 左旋转</h3><img src="/2017/05/05/Red-black-tree/左旋.png" alt=""></li>
<li>如果以<code>X</code>为旋转点，则左旋的含义就是以<code>XY</code>之间连线为轴将重心左移，类似跷跷板，同时保证二叉搜索树的基本性质，所以<code>b</code>节点重新挂在<code>X</code>右下</li>
</ul>
<p><img src="/2017/05/05/Red-black-tree/左旋分解.png" alt=""></p>
<ul>
<li>详细分解图解析算法步骤，图中线段序号为操作方式顺序，虚线为断开<br>  1）将Y的左孩子b连接到旋转节点X右孩子，线1<br>  2）设置Y左的父亲为X，线2,3<br>  3）Y的父亲设置为X的父亲 线4,5<br>  4）如果X是其父左，将Y设置为其父左，否则设置为右 线4,5<br>  5）设置Y的左为X，X的父为Y x线6<br>  6）结束</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">  * 左旋转</div><div class="line">  *</div><div class="line">  * <span class="doctag">@param</span> root</div><div class="line">  * <span class="doctag">@param</span> p</div><div class="line">  *</div><div class="line">  * <span class="doctag">@return</span></div><div class="line">  */</div><div class="line"> <span class="function"><span class="keyword">static</span> TreeNode <span class="title">rotateLeft</span><span class="params">(TreeNode root, TreeNode p)</span> </span>&#123;</div><div class="line">     TreeNode pRight, pRightLeft, pParent;</div><div class="line"></div><div class="line">     <span class="keyword">if</span> (p != <span class="keyword">null</span> &amp;&amp; (pRight = p.right) != <span class="keyword">null</span>) &#123;</div><div class="line">         <span class="comment">//右边节点左孩子至旋转点右侧</span></div><div class="line">         pRightLeft = p.right = pRight.left;</div><div class="line">         <span class="keyword">if</span> (pRightLeft != <span class="keyword">null</span>) &#123;</div><div class="line">             pRightLeft.parent = p;</div><div class="line">         &#125;</div><div class="line">         <span class="comment">//将旋转节点的父节点赋予旋转节点右边节点父节点</span></div><div class="line">         pParent = pRight.parent = p.parent;</div><div class="line">         <span class="keyword">if</span> (pParent == <span class="keyword">null</span>) &#123;</div><div class="line">             <span class="comment">//如果旋转节点父为空，表示其为root，直接赋给root变黑</span></div><div class="line">             root = pRight;</div><div class="line">             root.red = <span class="keyword">false</span>;<span class="comment">//root必须为黑节点</span></div><div class="line">         &#125; <span class="keyword">else</span> <span class="keyword">if</span> (pParent.left == p) &#123;</div><div class="line">             <span class="comment">//父节点存在且旋转节点为左节点，则将其右接在父左</span></div><div class="line">             pParent.left = pRight;</div><div class="line">         &#125; <span class="keyword">else</span> &#123;</div><div class="line">             <span class="comment">//否则就是右边</span></div><div class="line">             pParent.right = pRight;</div><div class="line">         &#125;</div><div class="line">         <span class="comment">//旋转节点链接至旋转节点的右孩子</span></div><div class="line">         pRight.left = p;</div><div class="line">         p.parent = pRight;</div><div class="line">     &#125;</div><div class="line">     <span class="keyword">return</span> root;</div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<h3 id="2-2-右旋转"><a href="#2-2-右旋转" class="headerlink" title="2.2 右旋转"></a>2.2 右旋转</h3><p>参照左旋转分解同理可写出右旋的代码：<br><img src="/2017/05/05/Red-black-tree/右旋.png" alt=""></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"> <span class="comment">/**</span></div><div class="line"> * 右旋转</div><div class="line"> *</div><div class="line"> * <span class="doctag">@param</span> root</div><div class="line"> * <span class="doctag">@param</span> p</div><div class="line"> *</div><div class="line"> * <span class="doctag">@return</span></div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">static</span> TreeNode <span class="title">rotateRight</span><span class="params">(TreeNode root, TreeNode p)</span> </span>&#123;</div><div class="line">    TreeNode pLeft, pLeftRight, pParent;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (p != <span class="keyword">null</span> &amp;&amp; (pLeft = p.left) != <span class="keyword">null</span>) &#123;</div><div class="line">        <span class="comment">//左边节点右孩子至旋转点左侧</span></div><div class="line">        pLeftRight = p.left = pLeft.right;</div><div class="line">        <span class="keyword">if</span> (pLeftRight != <span class="keyword">null</span>) &#123;</div><div class="line">            pLeftRight.parent = p;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">//将旋转节点的父节点赋予旋转节点左边节点父节点</span></div><div class="line">        pParent = pLeft.parent = p.parent;</div><div class="line">        <span class="keyword">if</span> (pParent == <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="comment">//如果旋转节点父为空，表示其为root，直接赋给root变黑</span></div><div class="line">            root = pLeft;</div><div class="line">            root.red = <span class="keyword">false</span>;<span class="comment">//root必须为黑节点</span></div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (pParent.right == p) &#123;</div><div class="line">            <span class="comment">//父节点存在且旋转节点为右节点，则将其右接在父右</span></div><div class="line">            pParent.right = pLeft;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="comment">//否则就是左边</span></div><div class="line">            pParent.left = pLeft;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">//旋转节点链接至旋转节点左孩子</span></div><div class="line">        pLeft.right = p;</div><div class="line">        p.parent = pLeft;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> root;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="3-插入"><a href="#3-插入" class="headerlink" title="3. 插入"></a>3. 插入</h2><h3 id="3-1-节点插入"><a href="#3-1-节点插入" class="headerlink" title="3.1 节点插入"></a>3.1 节点插入</h3><p>红黑树的节点插入与二叉搜索树一致，找到位置接入即可，注意其接入的节点都是叶子节点</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">    * 插入</div><div class="line">    *</div><div class="line">    * <span class="doctag">@param</span> root</div><div class="line">    * <span class="doctag">@param</span> node</div><div class="line">    *</div><div class="line">    * <span class="doctag">@return</span></div><div class="line">    */</div><div class="line">   <span class="function"><span class="keyword">static</span> TreeNode <span class="title">insert</span><span class="params">(TreeNode root, TreeNode node)</span> </span>&#123;</div><div class="line">       TreeNode checkPoint = root, insertPoint = checkPoint;</div><div class="line">       <span class="keyword">int</span> value = node.value;</div><div class="line">       <span class="keyword">while</span> (checkPoint != <span class="keyword">null</span>) &#123;</div><div class="line">           <span class="comment">//最后检查点指向最后的一个叶子节点，新节点在其左或右</span></div><div class="line">           insertPoint = checkPoint;</div><div class="line">           <span class="keyword">if</span> (checkPoint.value &gt; value) &#123;</div><div class="line">               checkPoint = checkPoint.left;</div><div class="line">           &#125; <span class="keyword">else</span> &#123;</div><div class="line">               checkPoint = checkPoint.right;</div><div class="line">           &#125;</div><div class="line">       &#125;</div><div class="line">       node.parent = insertPoint;</div><div class="line">       <span class="keyword">if</span> (insertPoint == <span class="keyword">null</span>) &#123;</div><div class="line">           <span class="comment">//空树</span></div><div class="line">           root = node;</div><div class="line">       &#125; <span class="keyword">else</span> <span class="keyword">if</span> (insertPoint.value &gt; value) &#123;</div><div class="line">           insertPoint.left = node;</div><div class="line">       &#125; <span class="keyword">else</span> &#123;</div><div class="line">           insertPoint.right = node;</div><div class="line">       &#125;</div><div class="line"></div><div class="line">       node.left = node.right = <span class="keyword">null</span>;</div><div class="line">       node.red = <span class="keyword">true</span>;</div><div class="line">       <span class="keyword">return</span> root;</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<h3 id="3-2-插入后的修复"><a href="#3-2-插入后的修复" class="headerlink" title="3.2 插入后的修复"></a>3.2 插入后的修复</h3><ul>
<li>二叉搜索树在节点的插入之后，树的平衡性会遭到破坏，导致查找时间不确定，平均查找时间变坏，红黑树利用节点的颜色规则通过旋转保持了树的相对平衡</li>
</ul>
<p>插入修复的示意图如下：</p>
<p><img src="/2017/05/05/Red-black-tree/插入修复.png" alt=""></p>
<p>在节点插入时，总共有如下几种情况：</p>
<ol>
<li><strong>树空</strong></li>
<li><strong>父黑</strong></li>
<li><strong>父红，叔红，自己左</strong></li>
<li><strong>父红，叔红，自己右</strong></li>
<li><strong>父红，叔黑，自己为右</strong></li>
<li><strong>父红，叔黑，自己为左</strong></li>
</ol>
<p>插入的修复算法只要针对以上情况进行处理即可：处理规则如下,设p为新增节点指针：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</div><div class="line">    <span class="number">1</span>. 树空 -&gt; p节点变黑，root=p,返回root</div><div class="line">    <span class="number">2</span>. 父黑 -&gt; 不违反红黑树规则，返回root</div><div class="line">    <span class="number">3</span>. 父红，叔红，自己左 -&gt; 祖父变红，父叔变黑，将当前处理节点指针p指向祖父</div><div class="line">    <span class="number">4</span>. 父红，叔红，自己右 -&gt; 同<span class="number">3</span></div><div class="line">    <span class="number">5</span>. 父红，叔黑，自己为右 -&gt; 以父为处理节点p，以父左旋</div><div class="line">    <span class="number">6</span>. 父红，叔黑，自己为左 -&gt; 父变黑，祖父变红，以祖父右旋</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>可以看出，插入调整的大原则就是，哪边的节点多，就往另一边转一下，但并非每次都转（如规则2）,确保平衡的同时减少树的调整次数</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 需要修复的4种情况</div><div class="line"> * 1、新插入的是根</div><div class="line"> * 2、新插入的node父是红，叔叔红</div><div class="line"> * 3、新插入的node父是红，叔叔黑，node是左子</div><div class="line"> * 4、新插入的node父是红，叔叔黑，node是右子</div><div class="line"> *</div><div class="line"> * <span class="doctag">@param</span> root</div><div class="line"> * <span class="doctag">@param</span> node</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">static</span> TreeNode <span class="title">repairColor</span><span class="params">(TreeNode root, TreeNode node)</span> </span>&#123;</div><div class="line">    TreeNode me = node, parent, grand, uncle;</div><div class="line"></div><div class="line">    <span class="comment">//自己的父亲是红持续循环</span></div><div class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</div><div class="line">        parent = me.parent;</div><div class="line">        <span class="keyword">if</span> (parent == <span class="keyword">null</span>) &#123;</div><div class="line">            me.red = <span class="keyword">false</span>;</div><div class="line">            <span class="keyword">return</span> me;</div><div class="line">        &#125;</div><div class="line">        grand = parent.parent;</div><div class="line">        <span class="keyword">if</span> (!parent.red || grand == <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="comment">//grand为空父亲节点为root，其一定黑不需要处理</span></div><div class="line">            <span class="keyword">return</span> root;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (parent == grand.left) &#123;</div><div class="line">            <span class="comment">//父亲是爷爷左</span></div><div class="line">            uncle = grand.right;</div><div class="line">            <span class="keyword">if</span> (uncle != <span class="keyword">null</span> &amp;&amp; uncle.red) &#123;</div><div class="line">                <span class="comment">//叔叔节点是红色</span></div><div class="line">                parent.red = <span class="keyword">false</span>;</div><div class="line">                uncle.red = <span class="keyword">false</span>;</div><div class="line">                grand.red = <span class="keyword">true</span>;</div><div class="line">                me = grand;</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (me == parent.right) &#123;</div><div class="line">                <span class="comment">//叔叔黑且自己是右边</span></div><div class="line">                me = me.parent;</div><div class="line">                root = rotateLeft(root, me);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                <span class="comment">//叔叔黑自己在左边</span></div><div class="line">                parent = me.parent;</div><div class="line">                <span class="keyword">if</span> (parent != <span class="keyword">null</span>) &#123;</div><div class="line">                    grand = parent.parent;</div><div class="line">                    parent.red = <span class="keyword">false</span>;</div><div class="line">                    <span class="keyword">if</span> (grand != <span class="keyword">null</span>) &#123;</div><div class="line">                        grand.red = <span class="keyword">true</span>;</div><div class="line">                        root = rotateRight(root, grand);</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            uncle = grand.left;</div><div class="line"></div><div class="line">            <span class="keyword">if</span> (uncle != <span class="keyword">null</span> &amp;&amp; uncle.red) &#123;</div><div class="line">                <span class="comment">//叔叔节点是红色</span></div><div class="line">                parent.red = <span class="keyword">false</span>;</div><div class="line">                uncle.red = <span class="keyword">false</span>;</div><div class="line">                grand.red = <span class="keyword">true</span>;</div><div class="line">                me = grand;</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (me == parent.left) &#123;</div><div class="line">                <span class="comment">//叔叔黑且自己是左边</span></div><div class="line">                me = me.parent;</div><div class="line">                rotateRight(root, me);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                <span class="comment">//叔叔黑且自己是右边</span></div><div class="line">                parent = me.parent;</div><div class="line">                <span class="keyword">if</span> (parent != <span class="keyword">null</span>) &#123;</div><div class="line">                    grand = parent.parent;</div><div class="line">                    parent.red = <span class="keyword">false</span>;</div><div class="line">                    <span class="keyword">if</span> (grand != <span class="keyword">null</span>) &#123;</div><div class="line">                        grand.red = <span class="keyword">true</span>;</div><div class="line">                        root = rotateLeft(root, grand);</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="3-3-方便调试的代码"><a href="#3-3-方便调试的代码" class="headerlink" title="3.3 方便调试的代码"></a>3.3 方便调试的代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 打印树状图方便调试</div><div class="line"> *</div><div class="line"> *               ROOT-B_3</div><div class="line"> *               +-------R-B_5</div><div class="line"> *               |         +-------R-R_7</div><div class="line"> *               |         |        +-------R-B_8</div><div class="line"> *               |         |        |        +-------R-R_9</div><div class="line"> *               |         |        +-------L-B_6</div><div class="line"> *               |         +-------L-B_4</div><div class="line"> *               +-------L-B_1</div><div class="line"> *               +-------R-B_2</div><div class="line"> *               +-------L-B_0</div><div class="line"> * <span class="doctag">@param</span> root</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">showTree</span><span class="params">(TreeNode root, <span class="keyword">int</span> level, String leftRight, <span class="keyword">boolean</span> isRight)</span> </span>&#123;</div><div class="line">    TreeNode p = root;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (p != <span class="keyword">null</span>) &#123;</div><div class="line">        <span class="comment">//右子树节点输出首个竖线</span></div><div class="line">        <span class="keyword">if</span> (isRight) &#123;</div><div class="line">            System.out.print(<span class="string">"|"</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (level &gt; <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; (level - <span class="number">1</span>) * <span class="number">9</span>; i++) &#123;</div><div class="line">                <span class="comment">//第一次不输入竖线，第三层开始输出，每隔8个空格输出一个竖线</span></div><div class="line">                <span class="keyword">if</span> (level &gt; <span class="number">2</span> &amp;&amp; i &gt; <span class="number">0</span> &amp;&amp; i % <span class="number">9</span> == <span class="number">0</span>) &#123;</div><div class="line">                    <span class="comment">//最后一个恰好无法满足取余，所以叶子节点不会输出竖线</span></div><div class="line">                    System.out.print(<span class="string">"|"</span>);</div><div class="line">                &#125;<span class="keyword">else</span>&#123;</div><div class="line">                    System.out.print(<span class="string">" "</span>);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            System.out.print(<span class="string">"+"</span>);</div><div class="line">            <span class="comment">//输出节点树枝</span></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">7</span>; i++) &#123;</div><div class="line">                System.out.print(<span class="string">"-"</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">//标识左右与黑白</span></div><div class="line">        System.out.print(leftRight + (p.red ? <span class="string">"-R_"</span> : <span class="string">"-B_"</span>) + p.value);</div><div class="line">        System.out.println();</div><div class="line"></div><div class="line">        <span class="comment">//只有根节点右边的子树输出竖线，此处判断节点时候是右侧子树</span></div><div class="line">        TreeNode check = p;</div><div class="line">        <span class="keyword">boolean</span> right = <span class="keyword">false</span>;</div><div class="line">        <span class="keyword">while</span> (check.parent != <span class="keyword">null</span> &amp;&amp; check.parent.parent != <span class="keyword">null</span>) &#123;</div><div class="line">            check = check.parent;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (check.parent != <span class="keyword">null</span> &amp;&amp; check == check.parent.right) &#123;</div><div class="line">            right = <span class="keyword">true</span>;</div><div class="line">        &#125;</div><div class="line">        showTree(p.right, level + <span class="number">1</span>, <span class="string">"R"</span>, right);</div><div class="line">        showTree(p.left, level + <span class="number">1</span>, <span class="string">"L"</span>, right);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="4-删除"><a href="#4-删除" class="headerlink" title="4. 删除"></a>4. 删除</h2><ul>
<li>删除较为复杂，核心思想点就是，如果删除的是黑色节点，那么删除节点替补节点及其子树少了一个黑节点，想办法补充一个（增加一个，或兄弟节点子树减少一个）</li>
</ul>
<p>二叉搜索树删除节点p的方法：</p>
<ol>
<li><strong>如果p是叶子只有一个儿子节点，直接将其儿子或nil链接给父</strong></li>
<li><strong>p有双儿子，从左子树找到最大值节点y，将y.value赋给p.value, y的左子树链接至y.parent,此时y被删除</strong></li>
</ol>
<p>红黑树节点删除：</p>
<ol>
<li><strong>节点的删除与普通二叉搜索树相同</strong></li>
<li><strong>如果删除的是黑节点，可能破坏了规则5，那么需要调整修复颜色</strong></li>
</ol>
<p>红黑树节点删除调整颜色的CASE如下,x表示删除节点的替换节点，即其左子树或右子树：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</div><div class="line">    <span class="number">1</span>. x为根或为NULL -&gt; 变黑返回</div><div class="line">    <span class="number">2</span>. x红 -&gt; 变黑返回</div><div class="line">    <span class="number">3</span>. x黑，兄红-&gt; 兄变黑，父变红，以父左旋，更新兄弟节点</div><div class="line">    <span class="number">4</span>. x黑，兄黑，兄二子黑 -&gt; 兄变红，更新x=x.parent</div><div class="line">    <span class="number">5</span>. x黑，兄黑，兄右子红 -&gt; 兄为父色，兄右子黑，父黑，父左旋</div><div class="line">    <span class="number">6</span>. x黑，兄黑，兄左子红，右子黑 -&gt; 兄红，兄左子黑，以兄右旋，更新兄弟节点</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>请观察图，其本质都是平衡删除节点左右的黑节点数量</strong><br><img src="/2017/05/05/Red-black-tree/删除.png" alt=""></p>
<h3 id="4-1-删除节点"><a href="#4-1-删除节点" class="headerlink" title="4.1 删除节点"></a>4.1 删除节点</h3><p>两个版本的删除节点方法，第一个更易读一些：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 删除节点</div><div class="line"> *</div><div class="line"> * <span class="doctag">@param</span> root</div><div class="line"> * <span class="doctag">@param</span> t</div><div class="line"> *</div><div class="line"> * <span class="doctag">@return</span></div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">static</span> TreeNode <span class="title">delete</span><span class="params">(TreeNode root, TreeNode t)</span> </span>&#123;</div><div class="line">    TreeNode y = t;</div><div class="line">    TreeNode next;</div><div class="line">    <span class="keyword">if</span> (y.left == <span class="keyword">null</span> || y.right == <span class="keyword">null</span>) &#123;</div><div class="line">        <span class="comment">//叶子节点或只有一个儿子节点</span></div><div class="line">        next = y.left == <span class="keyword">null</span> ? y.right : y.left;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (y.parent == <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="comment">//y是root更新root</span></div><div class="line">            root = next;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="comment">//将next链接在父亲的左右</span></div><div class="line">            <span class="keyword">if</span> (y.parent.left == t) &#123;</div><div class="line">                y.parent.left = next;</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                y.parent.right = next;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">//链接next父</span></div><div class="line">        <span class="keyword">if</span> (next != <span class="keyword">null</span>) &#123;</div><div class="line">            next.parent = y.parent;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">//删除的节点黑，修复颜色</span></div><div class="line">        <span class="keyword">if</span>(!y.red)&#123;</div><div class="line">            root=repairDelete(root,next);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> root;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//双儿子不为空</span></div><div class="line">    TreeNode searchPoint;</div><div class="line">    next = y.left;<span class="comment">//next初始化为左节点</span></div><div class="line">    <span class="comment">//找到左子树的最大值作为新的t值</span></div><div class="line">    <span class="keyword">while</span> ((searchPoint = next.right) != <span class="keyword">null</span>) &#123;</div><div class="line">        next = searchPoint;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//此处只有可能next的左子树不为空，上循环已经循环了右子树</span></div><div class="line">    TreeNode x = next.left;</div><div class="line">    <span class="comment">//将next的左链接在next的父左或右</span></div><div class="line">    <span class="keyword">if</span> (next.parent.left == next) &#123;</div><div class="line">        next.parent.left = x;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        next.parent.right = x;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//链接x的父</span></div><div class="line">    <span class="keyword">if</span> (x != <span class="keyword">null</span>) &#123;</div><div class="line">        x.parent = next.parent;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//交换值</span></div><div class="line">    t.value = next.value;</div><div class="line"></div><div class="line">    <span class="comment">//删除的节点黑，修复颜色</span></div><div class="line">    <span class="keyword">if</span>(!next.red)&#123;</div><div class="line">        root=repairDelete(root,x);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> root;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 简化版本的删除节点方法，不易读</div><div class="line"> *</div><div class="line"> * <span class="doctag">@param</span> root</div><div class="line"> * <span class="doctag">@param</span> t</div><div class="line"> *</div><div class="line"> * <span class="doctag">@return</span></div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">static</span> TreeNode <span class="title">deleteSimple</span><span class="params">(TreeNode root, TreeNode t)</span> </span>&#123;</div><div class="line">    TreeNode y;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (t.left == <span class="keyword">null</span> || t.right == <span class="keyword">null</span>) &#123;</div><div class="line">        y = t;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="comment">//双儿子不为空，寻找替换点，左子树最大值</span></div><div class="line">        y = t.left;<span class="comment">//y初始化为左节点</span></div><div class="line">        TreeNode searchPoint;</div><div class="line">        <span class="comment">//找到左子树的最大值作为新的t值</span></div><div class="line">        <span class="keyword">while</span> ((searchPoint = y.right) != <span class="keyword">null</span>) &#123;</div><div class="line">            y = searchPoint;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    TreeNode x;<span class="comment">//x标识y的左子树或者右子树，当y为t时，x就是需要t的直接子树，否则，x是左子树最大值点的左子树</span></div><div class="line">    <span class="keyword">if</span> (y.left != <span class="keyword">null</span>) &#123;</div><div class="line">        x = y.left;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        x = y.right;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (x != <span class="keyword">null</span>) &#123;</div><div class="line">        x.parent = y.parent;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//此种方法共享了y作为两种情况的操作指针，即最多一个子树的t本身与有双子树的左子树最大值节点</span></div><div class="line">    <span class="keyword">if</span> (y.parent == <span class="keyword">null</span>) &#123;</div><div class="line">        <span class="comment">//y的父为空，其为Root,直接将x赋予root，此时若x为空，标识左右子树都是空，此时只有一个y节点</span></div><div class="line">        root = x;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">if</span> (y.parent.left == y) &#123;</div><div class="line">            y.parent.left = x;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            y.parent.right = x;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//y!=t表示此时y指向了左子树最大值节点而不是t本身</span></div><div class="line">    <span class="keyword">if</span> (y != t) &#123;</div><div class="line">        t.value = y.value;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (!y.red) &#123;</div><div class="line">        <span class="comment">//删除的是黑节点才需要修复，修复节点是y的左子树或右子树，违反规则只会在x及其子树上</span></div><div class="line">        <span class="comment">//这里考虑的是影响性质5</span></div><div class="line">        root = repairDelete(root, x);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> root;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="4-2-删除节点后的修复"><a href="#4-2-删除节点后的修复" class="headerlink" title="4.2 删除节点后的修复"></a>4.2 删除节点后的修复</h3><p>修复详细代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">    * 修复删除后问题</div><div class="line">    *</div><div class="line">    * <span class="doctag">@param</span> root</div><div class="line">    * <span class="doctag">@param</span> x</div><div class="line">    *         删除时候的替换节点</div><div class="line">    *</div><div class="line">    * <span class="doctag">@return</span></div><div class="line">    */</div><div class="line">   <span class="function"><span class="keyword">static</span> TreeNode <span class="title">repairDelete</span><span class="params">(TreeNode root, TreeNode x)</span> </span>&#123;</div><div class="line"></div><div class="line">       TreeNode xParent, brother;</div><div class="line"></div><div class="line">       <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</div><div class="line"></div><div class="line">           <span class="keyword">if</span> (x == <span class="keyword">null</span>) &#123;</div><div class="line">               <span class="keyword">return</span> root;</div><div class="line">           &#125;</div><div class="line">           <span class="keyword">if</span> (x.red || x == root) &#123;</div><div class="line">               <span class="comment">//x节点是红色，或者x就是根，直接变黑</span></div><div class="line">               <span class="comment">//删除x的父之后，表示这一个分叉少了一个黑节点</span></div><div class="line">               <span class="comment">//如果此时x是红色，则直接将其变黑，相当于补充了一个黑节点</span></div><div class="line">               x.red = <span class="keyword">false</span>;</div><div class="line">               <span class="keyword">return</span> root;</div><div class="line">           &#125;</div><div class="line"></div><div class="line">           <span class="keyword">if</span> ((xParent = x.parent).left == x) &#123;</div><div class="line">               <span class="comment">//x自己是左边</span></div><div class="line">               brother = xParent.right;</div><div class="line">               <span class="keyword">if</span> (brother != <span class="keyword">null</span> &amp;&amp; brother.red) &#123;</div><div class="line">                   <span class="comment">//兄弟红,此时父亲一定黑</span></div><div class="line">                   <span class="comment">//兄弟变黑，父变红，以父左旋</span></div><div class="line">                   <span class="comment">//相当于去掉右侧子树的一个黑节点，同时左侧不加黑节点</span></div><div class="line">                   <span class="comment">// （父原本在右子树的路径上，但是变了红成为了左子树，兄弟变黑但是变成了父）</span></div><div class="line">                   brother.red = <span class="keyword">false</span>;</div><div class="line">                   xParent.red = <span class="keyword">true</span>;</div><div class="line">                   root = rotateLeft(root, xParent);</div><div class="line"></div><div class="line">                   <span class="comment">//此时x的兄弟为旋转之前的兄弟节点左子，更新为当前父右子</span></div><div class="line">                   brother = (xParent = x.parent) == <span class="keyword">null</span> ? <span class="keyword">null</span> : xParent.right;</div><div class="line">               &#125;</div><div class="line">               <span class="keyword">if</span> (brother == <span class="keyword">null</span>) &#123;</div><div class="line">                   <span class="comment">//兄弟节点为空,将调整的节点</span></div><div class="line">                   x = xParent;</div><div class="line">               &#125; <span class="keyword">else</span> &#123;</div><div class="line">                   <span class="comment">//兄弟不为空且黑</span></div><div class="line">                   TreeNode broLeft = brother.left, broRight = brother.right;</div><div class="line">                   <span class="keyword">if</span> ((broLeft == <span class="keyword">null</span> || !broLeft.red) &amp;&amp; (broRight == <span class="keyword">null</span> || !broRight.red)) &#123;</div><div class="line">                       <span class="comment">//二黑侄，bro直接变红</span></div><div class="line">                       <span class="comment">//同样的原理，右边减少一个黑节点</span></div><div class="line">                       brother.red = <span class="keyword">true</span>;</div><div class="line">                       <span class="comment">//如果xParent为红，下一轮直接黑，如果为黑，继续循环</span></div><div class="line">                       x = xParent;</div><div class="line">                   &#125; <span class="keyword">else</span> &#123;</div><div class="line">                       <span class="keyword">if</span> (broRight == <span class="keyword">null</span> || !broRight.red) &#123;</div><div class="line">                           <span class="comment">//右子为空或者黑色，左子定为红，则左子变黑，兄弟标红，以兄右旋</span></div><div class="line">                           brother.red = <span class="keyword">true</span>;</div><div class="line">                           broLeft.red = <span class="keyword">false</span>;</div><div class="line">                           root = rotateRight(root, brother);</div><div class="line">                           <span class="comment">//更新兄弟</span></div><div class="line">                           brother = (xParent = x.parent) == <span class="keyword">null</span> ? <span class="keyword">null</span> : xParent.right;</div><div class="line">                       &#125;</div><div class="line">                       <span class="keyword">if</span> (brother != <span class="keyword">null</span>) &#123;</div><div class="line">                           <span class="comment">// 此时右子为红色，否则进不来此处，</span></div><div class="line">                           <span class="comment">// 同时兼容上一个循环右旋之后的新兄弟节点，其右为红，处理方式一样</span></div><div class="line">                           <span class="comment">// 兄弟右子为红，兄弟继承父亲颜色，父亲变黑，右儿子变黑，以父左旋</span></div><div class="line">                           brother.red = xParent.red;</div><div class="line">                           <span class="keyword">if</span>((broRight=brother.right)!=<span class="keyword">null</span>)&#123;</div><div class="line">                               broRight.red= <span class="keyword">false</span>;</div><div class="line">                           &#125;</div><div class="line">                           xParent.red = <span class="keyword">false</span>;</div><div class="line">                           root = rotateLeft(root, xParent);</div><div class="line">                           x = root;</div><div class="line">                       &#125;</div><div class="line">                   &#125;</div><div class="line">               &#125;</div><div class="line"></div><div class="line">           &#125; <span class="keyword">else</span> &#123;</div><div class="line">               <span class="comment">//上边if的方向翻转</span></div><div class="line">               <span class="comment">//x自己是右边</span></div><div class="line">               brother = xParent.left;</div><div class="line">               <span class="keyword">if</span> (brother != <span class="keyword">null</span> &amp;&amp; brother.red) &#123;</div><div class="line">                   <span class="comment">//兄弟红,此时父亲一定黑</span></div><div class="line">                   brother.red = <span class="keyword">false</span>;</div><div class="line">                   xParent.red = <span class="keyword">true</span>;</div><div class="line"></div><div class="line">                   root = rotateRight(root, xParent);</div><div class="line"></div><div class="line">                   <span class="comment">//此时x的兄弟为旋转之前的兄弟节点右子，更新为当前父左子</span></div><div class="line"></div><div class="line">                   brother = (xParent = x.parent) == <span class="keyword">null</span> ? <span class="keyword">null</span> : xParent.left;</div><div class="line">               &#125;</div><div class="line">               <span class="keyword">if</span> (brother == <span class="keyword">null</span>) &#123;</div><div class="line">                   <span class="comment">//兄弟节点为空</span></div><div class="line">                   x = xParent;</div><div class="line">               &#125; <span class="keyword">else</span> &#123;</div><div class="line">                   TreeNode broLeft = brother.left, broRight = brother.right;</div><div class="line">                   <span class="keyword">if</span> ((broLeft == <span class="keyword">null</span> || !broLeft.red) &amp;&amp; (broRight == <span class="keyword">null</span> || !broRight.red)) &#123;</div><div class="line">                       <span class="comment">//二黑侄，bro直接变红，此时x与bro父有可能为红，所以x为x父，进行继续调整</span></div><div class="line">                       brother.red = <span class="keyword">true</span>;</div><div class="line">                       x = xParent;</div><div class="line">                   &#125; <span class="keyword">else</span> &#123;</div><div class="line">                       <span class="keyword">if</span> (broLeft == <span class="keyword">null</span> || !broLeft.red) &#123;</div><div class="line">                           <span class="comment">//左子为空或者黑色，则右子变黑，兄弟标红，以兄左旋</span></div><div class="line">                           brother.red = <span class="keyword">true</span>;</div><div class="line">                           broRight.red = <span class="keyword">false</span>;</div><div class="line">                           root = rotateLeft(root, brother);</div><div class="line">                           <span class="comment">//更新兄弟</span></div><div class="line">                           brother = (xParent = x.parent) == <span class="keyword">null</span> ? <span class="keyword">null</span> : xParent.left;</div><div class="line">                       &#125;</div><div class="line">                       <span class="keyword">if</span> (brother != <span class="keyword">null</span>) &#123;</div><div class="line">                           <span class="comment">//兄弟左子为红，兄弟继承父亲颜色，父亲变黑，左儿子变黑，以父右旋</span></div><div class="line">                           brother.red = xParent.red;</div><div class="line">                           brother.left.red = <span class="keyword">false</span>;</div><div class="line">                           xParent.red = <span class="keyword">false</span>;</div><div class="line">                           root = rotateRight(root, xParent);</div><div class="line">                           x = root;</div><div class="line">                       &#125;</div><div class="line">                   &#125;</div><div class="line">               &#125;</div><div class="line">           &#125;</div><div class="line"></div><div class="line">       &#125;</div><div class="line">   &#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;红黑树&quot;&gt;&lt;a href=&quot;#红黑树&quot; class=&quot;headerlink&quot; title=&quot;红黑树&quot;&gt;&lt;/a&gt;红黑树&lt;/h1&gt;&lt;h2 id=&quot;1-overview&quot;&gt;&lt;a href=&quot;#1-overview&quot; class=&quot;headerlink&quot; title=&quot;1
    
    </summary>
    
      <category term="数据结构与算法" scheme="https://pingansheng.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="红黑树" scheme="https://pingansheng.github.io/tags/%E7%BA%A2%E9%BB%91%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>统计学习方法-概论</title>
    <link href="https://pingansheng.github.io/2017/04/26/%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-%E6%A6%82%E8%AE%BA/"/>
    <id>https://pingansheng.github.io/2017/04/26/统计学习方法-概论/</id>
    <published>2017-04-26T01:10:34.000Z</published>
    <updated>2024-02-24T02:35:08.794Z</updated>
    
    <content type="html"><![CDATA[<h1 id="统计学习方法概论"><a href="#统计学习方法概论" class="headerlink" title="统计学习方法概论"></a>统计学习方法概论</h1><h2 id="1、机器学习-lt-gt-统计机器学习"><a href="#1、机器学习-lt-gt-统计机器学习" class="headerlink" title="1、机器学习&lt;=&gt;统计机器学习"></a>1、机器学习&lt;=&gt;统计机器学习</h2><h2 id="2、统计学习的基本假设：同类数据具有一定的统计规律性"><a href="#2、统计学习的基本假设：同类数据具有一定的统计规律性" class="headerlink" title="2、统计学习的基本假设：同类数据具有一定的统计规律性"></a>2、统计学习的基本假设：同类数据具有一定的统计规律性</h2><h2 id="3、统计学习的目的：预测与分析"><a href="#3、统计学习的目的：预测与分析" class="headerlink" title="3、统计学习的目的：预测与分析"></a>3、统计学习的目的：预测与分析</h2><h2 id="4、统计学习方法：监督学习，非监督学习，半监督学习，强化学习"><a href="#4、统计学习方法：监督学习，非监督学习，半监督学习，强化学习" class="headerlink" title="4、统计学习方法：监督学习，非监督学习，半监督学习，强化学习"></a>4、统计学习方法：监督学习，非监督学习，半监督学习，强化学习</h2><h2 id="5、评估模型，损失函数"><a href="#5、评估模型，损失函数" class="headerlink" title="5、评估模型，损失函数"></a>5、评估模型，损失函数</h2><p>(1) 0-1损失函数：<br><span>$$L(Y,f(X))=\begin{cases}1&amp; \text{Y$\neq$f(X)} \\0&amp; \text{Y=f(X)}\end{cases}$$</span><!-- Has MathJax --><br>(2) 平方损失函数：<br><span>$$L(Y,f(X))=(Y-f(X))^{2}$$</span><!-- Has MathJax --><br>(3) 绝对损失函数：<br><span>$$L(Y,f(X))=|Y-f(X)|$$</span><!-- Has MathJax --><br>(2) 对数损失函数：<br><span>$$L(Y,P(Y|X))=-\log P(Y|X)$$</span><!-- Has MathJax --></p>
<h2 id="6、经验风险，数据量很小时，经验风险最小化效果差，会产生过拟合"><a href="#6、经验风险，数据量很小时，经验风险最小化效果差，会产生过拟合" class="headerlink" title="6、经验风险，数据量很小时，经验风险最小化效果差，会产生过拟合"></a>6、经验风险，数据量很小时，经验风险最小化效果差，会产生过拟合</h2><span>$$R_{emp}(f)=\frac{1}{N}\sum_{i=1}^NL(y_i,f(x_i))$$</span><!-- Has MathJax -->
<h2 id="7、结构风险"><a href="#7、结构风险" class="headerlink" title="7、结构风险"></a>7、结构风险</h2><span>$$R_{emp}(f)=\frac{1}{N}\sum_{i=1}^NL(y_i,f(x_i))+\lambda J(f)$$</span><!-- Has MathJax -->
<blockquote>
<p>λ为罚项，权衡经验风险与模型复杂度<br>J(f)为模型复杂度，模型越复杂越大</p>
</blockquote>
<h2 id="8、模型选择，模型复杂度提升，测试误差会先降低后上升，最终目的使得测试误差最小"><a href="#8、模型选择，模型复杂度提升，测试误差会先降低后上升，最终目的使得测试误差最小" class="headerlink" title="8、模型选择，模型复杂度提升，测试误差会先降低后上升，最终目的使得测试误差最小"></a>8、模型选择，模型复杂度提升，测试误差会先降低后上升，最终目的使得测试误差最小</h2><p><img src="/2017/04/26/统计学习方法-概论/复杂度与误差.jpg" alt="模型复杂度与测试误差关系"></p>
<blockquote>
<p>正则化（奥卡姆剃刀原理）<br>交叉验证（简单交叉，S折交叉，留一交叉）</p>
</blockquote>
<h2 id="9、泛化误差-训练误差-关于N的单调递减函数"><a href="#9、泛化误差-训练误差-关于N的单调递减函数" class="headerlink" title="9、泛化误差=训练误差+关于N的单调递减函数"></a>9、泛化误差=训练误差+关于N的单调递减函数</h2><span>$$R(f)\leq+\varepsilon(d,N,\delta)$$</span><!-- Has MathJax -->
<span>$$\varepsilon(d,N,\delta)=\sqrt{\frac{1}{2N}(\log d+\log \frac{1}{\delta})}$$</span><!-- Has MathJax -->
<h2 id="10、分类问题几个基本概念"><a href="#10、分类问题几个基本概念" class="headerlink" title="10、分类问题几个基本概念"></a>10、分类问题几个基本概念</h2><ul>
<li>TP-正预测为正</li>
<li>FN-正预测为负</li>
<li>FP-负预测为正</li>
<li>TN-负预测为负<br>精确率：<span>$$P=\frac{TP}{TP+FP}$$</span><!-- Has MathJax -->
召回率：<span>$$P=\frac{TP}{TP+FN}$$</span><!-- Has MathJax --></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;统计学习方法概论&quot;&gt;&lt;a href=&quot;#统计学习方法概论&quot; class=&quot;headerlink&quot; title=&quot;统计学习方法概论&quot;&gt;&lt;/a&gt;统计学习方法概论&lt;/h1&gt;&lt;h2 id=&quot;1、机器学习-lt-gt-统计机器学习&quot;&gt;&lt;a href=&quot;#1、机器学习-lt-
    
    </summary>
    
      <category term="机器学习" scheme="https://pingansheng.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习" scheme="https://pingansheng.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Effective Java 2th Part III</title>
    <link href="https://pingansheng.github.io/2017/03/27/Effective-Java-2th-Part-III/"/>
    <id>https://pingansheng.github.io/2017/03/27/Effective-Java-2th-Part-III/</id>
    <published>2017-03-27T08:22:27.000Z</published>
    <updated>2024-02-24T02:35:08.767Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Effective-Java-2th-Part-III"><a href="#Effective-Java-2th-Part-III" class="headerlink" title="Effective Java 2th Part III"></a>Effective Java 2th Part III</h1><h2 id="通用程序设计"><a href="#通用程序设计" class="headerlink" title="通用程序设计"></a>通用程序设计</h2><p>45、将局部变量的作用域最小化</p>
<ul>
<li>第一次使用的地方声明</li>
<li>每个局部变量的声明都应该有一个初始化表达式</li>
<li><code>for(int i=0,j=getMax();i&gt;j;i++)</code>使用这种方式避免每次迭代的冗余计算</li>
<li>方法小而集中</li>
</ul>
<p>46、for-each优先</p>
<ul>
<li>没有性能损失（集合数只取了一次，见45条）</li>
<li>删除元素无法使用</li>
<li>转换元素无法使用</li>
<li><p>多个集合平行迭代无法使用</p>
<p>47、了解和使用类库</p>
<ul>
<li>Random.nextInt</li>
</ul>
</li>
</ul>
<p>48、需要精确的答案避免使用float和double</p>
<ul>
<li>BigDecimal，int(9位数字)或long(18位数字)</li>
<li>int或long需要手动控制小数位数</li>
<li>BigDecimal功能齐全但用法不方便，速度慢</li>
</ul>
<p>49、基本类型优先于装箱基本类型</p>
<ul>
<li>==操作符执行同一性比较</li>
<li>操作中混合装箱与基本类型，都会进行拆箱比较</li>
<li>循环中注意装箱类型反复计算导致的大量装箱拆箱操作<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Long sum=<span class="number">0L</span>;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">long</span> i=<span class="number">0L</span>;i&lt;<span class="number">1000000</span>;i++)&#123;</div><div class="line">    sum+=i;<span class="comment">//装箱拆箱</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>50、如果其他类型更适合，尽量避免使用字符串</p>
<ul>
<li>不要代替其他类型，如int等数字形式，应当做类型转换</li>
<li>不适合代替枚举</li>
<li>不适合代替聚集类型（以分隔符表示一串有含义的信息”Name-kkk#Age-12”）</li>
<li>不适合代替能力表（用于授权的某个唯一变量标识）</li>
</ul>
<p>51、当心字符串拼接性能</p>
<ul>
<li>拼接字符串时间复杂度n平方</li>
<li>使用StringBuilder</li>
</ul>
<p>52、通过接口引用对象</p>
<ul>
<li>如果没有合适的接口存在，使用类引用</li>
</ul>
<p>53、接口优先于反射机制</p>
<ul>
<li>编译检查失效</li>
<li>代码冗长难懂</li>
<li>性能损失</li>
</ul>
<p>54、谨慎的使用本地方法</p>
<ul>
<li>性能逐渐不是问题</li>
<li>本地语言不是安全的</li>
<li>不可再自由移植</li>
</ul>
<p>55、谨慎优化</p>
<ul>
<li>不要进行优化</li>
<li>还是不要进行优化-在未找到清晰的优化方案之前</li>
<li>设计时要考虑性能（算法，API，数据格式，线路层）</li>
<li>避免限制性能的设计决策</li>
<li>优化之前与之后，测量性能</li>
</ul>
<p>56、遵守普遍接受的命名惯例</p>
<ul>
<li>详细内容见alibaba Java开发手册</li>
</ul>
<h2 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h2><p>57、只针对异常的情况才使用异常</p>
<ul>
<li>不要使用异常用于正常的控制流</li>
</ul>
<p>58、对可恢复的情况使用受检异常，对编程错误使用运行时异常</p>
<ul>
<li>不要使用error</li>
<li>未受检的抛出结构使用RuntimeException的子类</li>
</ul>
<p>59、避免不必要地使用受检的异常</p>
<p>60、优先使用标准异常</p>
<p>61、抛出与抽象相对应的异常</p>
<ul>
<li>高层的实现捕获底层的异常，同时抛出可以按照高层抽象进行解释的异常</li>
<li>尽量处理或阻止来自底层的异常</li>
</ul>
<p>62、每个方法抛出的异常要有文档</p>
<ul>
<li>记录异常与条件</li>
<li>只记录未受检异常</li>
</ul>
<p>63、在细节消息中包含能捕获失败的消息</p>
<ul>
<li>异常信息应该包含所有对该异常有贡献的参数和值</li>
<li>可以通过构造特定的异常类构造函数去规范的产生高质量的帮助信息</li>
</ul>
<p>64、努力使失败保持原子性</p>
<ul>
<li>异常出现后，尽量使得处理的对象保持之前的状态而不要修改属性等信息</li>
<li>所有可能的检查在修改对象之前进行</li>
</ul>
<p>65、不要忽略异常</p>
<ul>
<li>catch语句不要空置</li>
</ul>
<h2 id="并发"><a href="#并发" class="headerlink" title="并发"></a>并发</h2><p>66、同步访问共享的可变数据</p>
<ul>
<li>注意”活性失败”, JVM优化可能将局部变量修改读取方式导致无法看到关键的开关变量</li>
<li>读写都需要同步</li>
<li>“安全性失败”，常规的并发问题，如i++</li>
</ul>
<p>67、避免过度同步</p>
<ul>
<li>同步区域尽可能小</li>
<li>同步区域不可调用外来方法（接口，可覆盖的方法等），会导致死锁或异常</li>
</ul>
<p>68、Executor和task优于线程</p>
<ul>
<li>使用线程池而不是简单的new Thread(){}.start();</li>
</ul>
<p>69、并发工具优先于wait和notify</p>
<ul>
<li>永远不要在循环之外调用o.wait()</li>
<li>新代码中不要使用wait和notify,而是用并发工具替代（Executor，并发集合，同步器）</li>
<li>优先使用notifyAll();</li>
</ul>
<p>70、线程安全文档化</p>
<ul>
<li>不同级别的线程安全要有文档说明</li>
<li>锁封装在同步的对象中</li>
</ul>
<p>71、慎用延迟初始化</p>
<ul>
<li><p>静态域使用内部类实现</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</div><div class="line">        <span class="keyword">static</span> <span class="keyword">final</span> Object field=getField();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="title">A</span><span class="params">()</span></span>&#123;&#125;;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getField</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> B.field;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>实例域使用双重检查</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="function">Object <span class="title">getField</span><span class="params">()</span></span>&#123;</div><div class="line">    Object res=field;</div><div class="line">    <span class="keyword">if</span>(<span class="keyword">null</span>==field)&#123;</div><div class="line">        <span class="keyword">synchronized</span>(<span class="keyword">this</span>)&#123;</div><div class="line">            res=field;</div><div class="line">            <span class="keyword">if</span>(<span class="keyword">null</span>==res)&#123;</div><div class="line">                field=res=getField();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> res;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>72、不要依赖于线程调度器</p>
<ul>
<li>Thead.yield 不靠谱，只用于手动的增加并发用以复现测试bug</li>
<li>线程优先级不靠谱</li>
</ul>
<p>73、避免使用线程组</p>
<ul>
<li>禁用</li>
</ul>
<h2 id="序列化"><a href="#序列化" class="headerlink" title="序列化"></a>序列化</h2><p>74、谨慎地实现Serializable接口</p>
<ul>
<li>大大降低修改灵活性</li>
<li>serialVersionUID如果不提供，系统会调用复杂运算过程生成</li>
<li>序列化构造器覆盖了默认的构造器行为</li>
<li>新版本发布，测试负担加重</li>
<li>为继承而设计的类尽量少的实现序列化接口</li>
<li>使用AtomicReference实现线程安全状态机表示类已经初始化等信息</li>
<li>内部类不要实现（内部类有另外的合成域用于指向外部类成员，序列化形式不清楚）</li>
<li>静态成员类可以实现</li>
</ul>
<p>75、考虑使用自定义的序列化形式</p>
<ul>
<li>如果对象的物理表示法和逻辑数据内容有实质性的区别，不建议使用默认序列化形式</li>
<li>加序列化UID(性能提升一些)</li>
</ul>
<p>76、保护性的编写readobject方法</p>
<ul>
<li>readObject方法中尽量对字段进行保护性拷贝后赋值，序列化字节流可能存在对对象内部字段的引用，进而再反序列化之后调用readObject之后对内部字段进行修改</li>
</ul>
<p>77、对于实例控制，枚举类型优先于readResolve</p>
<ul>
<li>对于单例模式实例化，使用枚举类型作为实例控制</li>
</ul>
<p>78、考虑用序列化代理代替序列化实例</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Effective-Java-2th-Part-III&quot;&gt;&lt;a href=&quot;#Effective-Java-2th-Part-III&quot; class=&quot;headerlink&quot; title=&quot;Effective Java 2th Part III&quot;&gt;&lt;/a&gt;Effec
    
    </summary>
    
      <category term="Java" scheme="https://pingansheng.github.io/categories/Java/"/>
    
    
      <category term="Effective Java" scheme="https://pingansheng.github.io/tags/Effective-Java/"/>
    
  </entry>
  
  <entry>
    <title>Effective Java 2th Part II</title>
    <link href="https://pingansheng.github.io/2017/02/16/Effective-Java-2th-Part-II/"/>
    <id>https://pingansheng.github.io/2017/02/16/Effective-Java-2th-Part-II/</id>
    <published>2017-02-16T08:10:41.000Z</published>
    <updated>2024-02-24T02:35:08.732Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Effective-Java-2th-Part-II"><a href="#Effective-Java-2th-Part-II" class="headerlink" title="Effective Java 2th Part II"></a>Effective Java 2th Part II</h1><h2 id="泛型"><a href="#泛型" class="headerlink" title="泛型"></a>泛型</h2><p>23、请不要在新代码中使用原生态类型</p>
<ul>
<li>尽量使用泛型</li>
</ul>
<p>24、消除非受检警告</p>
<p>25、列表优先于数组</p>
<ul>
<li>不要混用数据与列表</li>
<li>数据是具体化的，运行时才知道类型，泛型是擦除式的，运行时会丢弃类型，在编译时强化类型</li>
</ul>
<p>26、优先考虑泛型</p>
<p>27、优先考虑泛型方法</p>
<ul>
<li>静态工具尤其适合泛型化</li>
</ul>
<p>28、利用有限制通配符来提升API的灵活性</p>
<ul>
<li>PECS, 用于生产者使用&lt;? extends T&gt;, 用于消费者使用&lt;? super T&gt;</li>
<li>所有的comparable和comparator都是消费者</li>
</ul>
<p>29、优先考虑类型安全的异构容器</p>
<ul>
<li>Map中存储不同类型的对象可以用类型对象Class<t>作为Key,get时候使用Class.cast进行转换</t></li>
</ul>
<h2 id="枚举和注解"><a href="#枚举和注解" class="headerlink" title="枚举和注解"></a>枚举和注解</h2><p>30、用enum代替常量int</p>
<ul>
<li>枚举是不可变的，每个枚举都有自己的命名空间，不担心重名问题</li>
<li><p>如果每个枚举对应不同的行为，使用特定于常量的方法实现</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">enum</span> Oper&#123;</div><div class="line"></div><div class="line">    PLUS&#123;<span class="function"><span class="keyword">double</span> <span class="title">apply</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">double</span> y)</span></span>&#123;<span class="keyword">return</span> x+y;&#125;&#125;,</div><div class="line">    MINUS&#123;<span class="function"><span class="keyword">double</span> <span class="title">apply</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">double</span> y)</span></span>&#123;<span class="keyword">return</span> x-y;&#125;&#125;;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">abstract</span> <span class="keyword">double</span> <span class="title">apply</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">double</span> y)</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>多个枚举常量同时共享相同的行为，则考虑策略枚举（枚举套枚举，里面的枚举提供方法）</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//伪代码 </span></div><div class="line"><span class="keyword">public</span> <span class="keyword">enum</span> A&#123;</div><div class="line">    X1(B.Y1),</div><div class="line">    X2(B.Y1),</div><div class="line">    X3(B.Y2);</div><div class="line"></div><div class="line">    <span class="keyword">enum</span> B&#123;</div><div class="line">        Y1(<span class="function"><span class="keyword">void</span> <span class="title">do</span><span class="params">()</span></span>&#123;&#125;),</div><div class="line">        Y2(<span class="function"><span class="keyword">void</span> <span class="title">do</span><span class="params">()</span></span>&#123;&#125;);</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">do</span><span class="params">()</span></span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>31、用实例域代替序数</p>
<ul>
<li>尽量不要使用ordinal方法获取序号</li>
<li>显示指定一个字段表示值</li>
</ul>
<p>32、EnumSet代替位域</p>
<ul>
<li>EnumSet.of(X1,X2),表示某几个枚举值的Set</li>
</ul>
<p>33、用EnumMap代替序数索引</p>
<ul>
<li>当枚举作为Key时，使用EnumMap作为其集合载体，替代枚举数组</li>
</ul>
<p>34、用接口模拟可伸缩的枚举</p>
<ul>
<li>利用枚举实现某接口可以动态的扩展枚举，调用使用接口调用即可</li>
<li>调用端的参数两种声明方式<code>&lt;T extends Enum&lt;T&gt; &amp; AInterface&gt;</code>和<code>Collection&lt;? extends AInterface&gt;</code></li>
</ul>
<p>35、注解优先于命名模式</p>
<ul>
<li>使用注解而不是使用具体名称去判断执行逻辑</li>
</ul>
<p>36、坚持使用Override注解</p>
<ul>
<li>使得编译器提前得到错误</li>
</ul>
<p>37、用标记接口定义类型</p>
<ul>
<li>定义某一个类型使用接口</li>
</ul>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>38、检查参数的有效性</p>
<ul>
<li>断言或条件判断</li>
<li>对于所有参数如果可以合理完成逻辑，限制越少越好</li>
</ul>
<p>39、必要时进行保护性拷贝</p>
<ul>
<li>对外提供的服务，要做保护性的设计</li>
<li>保护性拷贝在检查有效性之前进行</li>
<li>参数可以被不信任的子类化，勿使用clone拷贝</li>
<li>自身组件返回考虑做保护性拷贝</li>
</ul>
<p>40、谨慎设计方法签名</p>
<ul>
<li>名称谨慎</li>
<li>不过于追求便利方法</li>
<li>参数列表&lt;=4，过多则拆分方法或创建辅助类作为参数，或者采用builder模式</li>
<li>参数优先使用接口</li>
<li>boolean优先使用二值枚举setType(Person.MALE)</li>
</ul>
<p>41、慎用重载</p>
<ul>
<li>调用重载方法在编译时决定，而覆盖方法在运行时决定</li>
<li>不要导出两个具有相同参数数目的重载方法</li>
<li>构造器重载可考虑导出静态工厂</li>
<li>多个重载方法，一般将具体化的重载方法转发给通用的重载方法以保证结果的一致性</li>
<li>传递同样的参数时，所有的重载方法必须一致</li>
</ul>
<p>42、慎用可变参数</p>
<ul>
<li>每次调用均会导致一次数据分配和初始化</li>
<li>可以创建一系列接收参数数量的方法重载组，最后一个再使用可变参数<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">foo</span><span class="params">()</span></span></div><div class="line"><span class="keyword">void</span> <span class="title">foo</span><span class="params">(<span class="keyword">int</span> a1)</span></div><div class="line"><span class="keyword">void</span> <span class="title">foo</span><span class="params">(<span class="keyword">int</span> a1,<span class="keyword">int</span> a2)</span></div><div class="line"><span class="keyword">void</span> <span class="title">foo</span><span class="params">(<span class="keyword">int</span> a1,<span class="keyword">int</span> a2,<span class="keyword">int</span> ...rest)</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>43、返回零长度的数组或者集合，而不是null</p>
<ul>
<li>返回类型是数组或者集合的方法返回零长度对象</li>
</ul>
<p>44、为所有导出的API元素编写文档注释</p>
<ul>
<li><code>&lt;pre&gt; {@code int i=1;}&lt;pre/&gt;</code> 用于导出代码</li>
<li><code>{@literal Map&lt;String,String&gt;}</code> 用于原样输出内容并且转移html字符</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Effective-Java-2th-Part-II&quot;&gt;&lt;a href=&quot;#Effective-Java-2th-Part-II&quot; class=&quot;headerlink&quot; title=&quot;Effective Java 2th Part II&quot;&gt;&lt;/a&gt;Effectiv
    
    </summary>
    
      <category term="Java" scheme="https://pingansheng.github.io/categories/Java/"/>
    
    
      <category term="Effective Java" scheme="https://pingansheng.github.io/tags/Effective-Java/"/>
    
  </entry>
  
  <entry>
    <title>Effective Java 2th Part I</title>
    <link href="https://pingansheng.github.io/2017/02/07/Effective-Java-2th-Part-I/"/>
    <id>https://pingansheng.github.io/2017/02/07/Effective-Java-2th-Part-I/</id>
    <published>2017-02-07T07:32:04.000Z</published>
    <updated>2024-02-24T02:35:08.702Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Effective-Java-2th-Part-I"><a href="#Effective-Java-2th-Part-I" class="headerlink" title="Effective Java 2th Part I"></a>Effective Java 2th Part I</h1><h2 id="创建与销毁对象"><a href="#创建与销毁对象" class="headerlink" title="创建与销毁对象"></a>创建与销毁对象</h2><p>1、静态工厂代替构造器<br>优点：</p>
<ul>
<li>命名：方法名称表示对象含义</li>
<li>复用：不需要每次都创建新对象</li>
<li>返回子类对象：可以返回该类的子类对象</li>
<li>创建参数化类型对象简洁：new HashMap<string,list<string>&gt;().<br>缺点：</string,list<string></li>
<li>没有默认或保护的构造方法无法子类化</li>
<li>只是一个静态方法而不像构造函数有明确的语法含义</li>
</ul>
<p>2、多个构造参数考虑使用构造器</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span></span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> p1;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> p2;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> p3;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> p4;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> p5;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Builder</span></span>&#123;</div><div class="line">        <span class="keyword">private</span> <span class="keyword">int</span> p1=<span class="number">0</span>;</div><div class="line">        <span class="keyword">private</span> <span class="keyword">int</span> p2=<span class="number">0</span>;</div><div class="line">        <span class="keyword">private</span> <span class="keyword">int</span> p3=<span class="number">0</span>;</div><div class="line">        <span class="keyword">private</span> <span class="keyword">int</span> p4=<span class="number">0</span>;</div><div class="line">        <span class="keyword">private</span> <span class="keyword">int</span> p5=<span class="number">0</span>;</div><div class="line">        </div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Builder</span><span class="params">(<span class="keyword">int</span> p1,<span class="keyword">int</span> p2)</span></span>&#123;</div><div class="line">            <span class="keyword">this</span>.p1=p1;</div><div class="line">            <span class="keyword">this</span>.p2=p2;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">setP3</span><span class="params">(<span class="keyword">int</span> p3)</span></span>&#123;</div><div class="line">            <span class="keyword">this</span>.p3=p3;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">setP4</span><span class="params">(<span class="keyword">int</span> p4)</span></span>&#123;</div><div class="line">            <span class="keyword">this</span>.p4=p4;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">setP5</span><span class="params">(<span class="keyword">int</span> p5)</span></span>&#123;</div><div class="line">            <span class="keyword">this</span>.p5=p5;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">public</span> App <span class="title">build</span><span class="params">()</span></span>&#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> App(<span class="keyword">this</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">App</span><span class="params">(Builder builder)</span></span>&#123;</div><div class="line">        p1=builder.p1;</div><div class="line">        p2=builder.p2;</div><div class="line">        p3=builder.p3;</div><div class="line">        p4=builder.p4;</div><div class="line">        p5=builder.p5;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//client</span></div><div class="line">App app=<span class="keyword">new</span> App.Builder(<span class="number">1</span>,<span class="number">2</span>).setP3(<span class="number">3</span>).setP4(<span class="number">4</span>).setP5(<span class="number">5</span>).build();</div></pre></td></tr></table></figure>
<p>优点：</p>
<ul>
<li>灵活</li>
<li>具名</li>
<li>安全<br>缺点：</li>
<li>需要创建构造器，性能开销</li>
</ul>
<p>3、私有构造器强化单例属性</p>
<ul>
<li>见单例模式</li>
<li>唯一元素的枚举类也是一种单例的最好方法</li>
</ul>
<p>4、私有构造函数使得某些类不可实例化（工具类等）</p>
<p>5、不要创建多余的对象</p>
<ul>
<li>避免频繁使用装箱基本类型<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Long s=<span class="number">0L</span>;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">long</span> i=<span class="number">0</span>;i&lt;<span class="number">100000</span>;i++)&#123;</div><div class="line">    s+=i;<span class="comment">//warning!每次都创建一个Long对象</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>6、消除过期的对象引用</p>
<ul>
<li>如果类自己管理内存，注意内存泄漏，比如自己实现的堆栈</li>
<li>缓存要注意清理问题</li>
<li>监听器与回调</li>
</ul>
<p>7、避免使用终结方法</p>
<h2 id="对于所有对象都通用的方法"><a href="#对于所有对象都通用的方法" class="headerlink" title="对于所有对象都通用的方法"></a>对于所有对象都通用的方法</h2><p>8、覆盖equals方法注意：</p>
<ul>
<li>自反性、对称性、传递性、一致性、非空性（x.equals(null)==false）</li>
<li>使用instanceof检查参数是否为正确类型</li>
<li>注意方法的入参类型是Object，否则是重载</li>
<li>==比较不是float与double的基本类型，引用使用equals，float使用Float.compare(),double使用Double.compare()</li>
</ul>
<p>9、覆盖equals时候始终覆盖hashcode</p>
<ul>
<li>否则影响hash</li>
</ul>
<p>10、始终覆盖toString()</p>
<p>11、谨慎实现cloneable接口</p>
<ul>
<li>一般不要实现，否则需要提供良好的实现，深度拷贝与同步</li>
</ul>
<p>12、考虑实现comparable接口</p>
<ul>
<li>获得更多的内置集合功能，如排序等</li>
</ul>
<h2 id="类和接口"><a href="#类和接口" class="headerlink" title="类和接口"></a>类和接口</h2><p>13、使类和成员的可访问性最小化</p>
<ul>
<li>封装</li>
</ul>
<p>14、访问属性使用访问方法而不是直接访问</p>
<ul>
<li>私有的嵌套类可以直接访问，危害性较小</li>
</ul>
<p>15、尽量使用不可变性</p>
<ul>
<li>线程安全，内部信息共享，提供大量构件</li>
</ul>
<p>16、使用复合而不是继承</p>
<ul>
<li>复合和转发机制（装饰器模式）</li>
<li>只有在is-a关系时使用继承</li>
</ul>
<p>17、要么为继承而设计，要么禁止继承</p>
<ul>
<li>需要提供详细的文档说明</li>
<li>好的API文档描述一个操作做了什么，而不是如何做的</li>
<li>如果允许继承，构造器不可以调用可覆盖的方法</li>
</ul>
<p>18、接口优于抽象类</p>
<ul>
<li>接口利于实现混合类型（某个类具有某种特定的功能，如Comparable接口）</li>
<li>利于实现非层次的类结构，比如歌唱家与作家接口</li>
<li>一般导出接口的骨架实现抽象类或简单实现（用于直接使用或继承）</li>
<li>抽象类对比接口更容易演变</li>
<li>公开接口一旦发布，几乎无法修改，建议同时发布骨架抽象类</li>
</ul>
<p>19、接口只用于定义类型</p>
<ul>
<li>导出常量使用枚举，而不是包含一堆static final变量</li>
</ul>
<p>20、类层次优于标签类</p>
<ul>
<li>不要在一个类中完成相似而又不同的多套逻辑（三角形与原形面积计算，一个类中使用switch类的逻辑判断）</li>
<li>针对相似而不同的逻辑关系，考虑拆成子类父类的类层次关系</li>
</ul>
<p>21、用函数对象标识策略</p>
<ul>
<li>策略模式</li>
</ul>
<p>22、优先考虑静态成员类</p>
<ul>
<li>非静态的嵌套类每个实例都会持有一个外围类的引用</li>
<li>如果嵌套类不需要外围实例的引用，就使用静态，否则使用非静态</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Effective-Java-2th-Part-I&quot;&gt;&lt;a href=&quot;#Effective-Java-2th-Part-I&quot; class=&quot;headerlink&quot; title=&quot;Effective Java 2th Part I&quot;&gt;&lt;/a&gt;Effective J
    
    </summary>
    
      <category term="Java" scheme="https://pingansheng.github.io/categories/Java/"/>
    
    
      <category term="Effective Java" scheme="https://pingansheng.github.io/tags/Effective-Java/"/>
    
  </entry>
  
  <entry>
    <title>chapter11 中级绘图</title>
    <link href="https://pingansheng.github.io/2017/02/04/chapter11-%E4%B8%AD%E7%BA%A7%E7%BB%98%E5%9B%BE/"/>
    <id>https://pingansheng.github.io/2017/02/04/chapter11-中级绘图/</id>
    <published>2017-02-04T02:45:45.000Z</published>
    <updated>2024-02-24T02:35:08.035Z</updated>
    
    <content type="html"><![CDATA[<h1 id="中级绘图"><a href="#中级绘图" class="headerlink" title="中级绘图"></a>中级绘图</h1><h2 id="1、散点图"><a href="#1、散点图" class="headerlink" title="1、散点图"></a>1、散点图</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#散点图</span></div><div class="line"><span class="keyword">attach</span>(mtcars)</div><div class="line">plot(wt,mpg,main=<span class="string">"基本散点图：英里数与车重"</span>,xlab = <span class="string">"车重（lbs/1000）"</span>,ylab=<span class="string">"一加仑的公里数"</span>,pch=<span class="number">19</span>)</div><div class="line"><span class="comment">#添加一条拟合的直线</span></div><div class="line">abline(lm(mpg~wt),col=<span class="string">"red"</span>,lwd=<span class="number">2</span>,lty=<span class="number">1</span>)</div><div class="line"><span class="comment">#添加一条拟合的平滑曲线</span></div><div class="line">lines(lowess(wt,mpg),col=<span class="string">"blue"</span>,lwd=<span class="number">2</span>,lty=<span class="number">2</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/02/04/chapter11-中级绘图/img1.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(car)</div><div class="line">scatterplot(mpg~wt|cyl,data=mtcars,lwd=<span class="number">2</span>,main=<span class="string">"不同气缸英里数与车重"</span>,xlab=<span class="string">"车重（lbs/1000）"</span>,ylab=<span class="string">"每加仑距离"</span>,legend.plot=<span class="literal">TRUE</span>,id.method=<span class="string">"identify"</span>,labels=row.names(mtcars),boxplots=<span class="string">"xy"</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/02/04/chapter11-中级绘图/img2.png" alt=""></p>
<h3 id="1-1、散点矩阵图"><a href="#1-1、散点矩阵图" class="headerlink" title="1.1、散点矩阵图"></a>1.1、散点矩阵图</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#散点图矩阵</span></div><div class="line">plot(~mpg+disp+drat+wt,data=mtcars)</div><div class="line"><span class="comment">#upper.panel = NULL只展现下三角，图形是对称的</span></div><div class="line">pairs(~mpg+disp+drat+wt,data=mtcars,upper.panel = <span class="literal">NULL</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/02/04/chapter11-中级绘图/img3.png" alt=""><br><img src="/2017/02/04/chapter11-中级绘图/img4.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#car包中的函数</span></div><div class="line"><span class="keyword">library</span>(car)</div><div class="line"><span class="comment">#主对角线添加了核密度曲线和轴须图</span></div><div class="line">scatterplotMatrix(~mpg+disp+drat+wt,data=mtcars,spread=<span class="literal">FALSE</span>,lty.smooth=<span class="number">2</span>,main=<span class="string">"散点矩阵图"</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/02/04/chapter11-中级绘图/img5.png" alt=""><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#根据某变量进行分组展现by.groups = TRUE根据各个子集生成拟合图</span></div><div class="line">scatterplotMatrix(~mpg+disp+drat+wt|cyl,data=mtcars,by.groups = <span class="literal">TRUE</span>,diagonal=<span class="string">"histogram"</span>,main=<span class="string">"散点矩阵图"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="/2017/02/04/chapter11-中级绘图/img6.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(gclus)</div><div class="line">mydata&lt;-mtcars[c(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>)]</div><div class="line"><span class="comment">#获取相关系数的绝对值矩阵</span></div><div class="line">mydata.corr&lt;-abs(cor(mydata))</div><div class="line"><span class="comment">#根据相关系数获取颜色矩阵</span></div><div class="line">mycolors&lt;-dmat.color(mydata.corr)</div><div class="line"><span class="comment">#根据相关系数重排变量</span></div><div class="line">myorder&lt;-order.single(mydata.corr)</div><div class="line"></div><div class="line">cpairs(mydata,myorder,panel.colors = mycolors,gap=<span class="number">.5</span>,main=<span class="string">"根据相关性排序与着色图"</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/02/04/chapter11-中级绘图/img7.png" alt=""></p>
<h3 id="1-2、高密度散点图"><a href="#1-2、高密度散点图" class="headerlink" title="1.2、高密度散点图"></a>1.2、高密度散点图</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">set.seed(<span class="number">1234</span>)</div><div class="line">n&lt;-<span class="number">10000</span></div><div class="line">c1&lt;-matrix(rnorm(n,mean = <span class="number">0</span>,sd=<span class="number">0.5</span>),ncol=<span class="number">2</span>)</div><div class="line">c2&lt;-matrix(rnorm(n,mean = <span class="number">3</span>,sd=<span class="number">2</span>),ncol=<span class="number">2</span>)</div><div class="line"></div><div class="line">mydata&lt;-rbind(c1,c2)</div><div class="line">mydata&lt;-as.data.frame(mydata)</div><div class="line">names(mydata)&lt;-c(<span class="string">"x"</span>,<span class="string">"y"</span>)</div><div class="line">with(mydata,plot(x,y,pch=<span class="number">19</span>,main=<span class="string">"Scatter Plot with 10000 points"</span>))</div></pre></td></tr></table></figure>
<p><img src="/2017/02/04/chapter11-中级绘图/img8.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">with(mydata,smoothScatter(x,y,main=<span class="string">"Scatter Plot with 10000 points"</span>))</div></pre></td></tr></table></figure>
<p><img src="/2017/02/04/chapter11-中级绘图/img9.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(hexbin)</div><div class="line">with(mydata,&#123;</div><div class="line">  bin&lt;-hexbin(x,y,xbins=<span class="number">50</span>)</div><div class="line">  plot(bin,main=<span class="string">"六边形散点图"</span>)</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<p><img src="/2017/02/04/chapter11-中级绘图/img10.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(IDPmisc)</div><div class="line">with(mydata,iplot(x,y,main=<span class="string">"颜色散点图"</span>))</div></pre></td></tr></table></figure>
<p><img src="/2017/02/04/chapter11-中级绘图/img11.png" alt=""></p>
<h3 id="1-3、三维散点图"><a href="#1-3、三维散点图" class="headerlink" title="1.3、三维散点图"></a>1.3、三维散点图</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(scatterplot3d)</div><div class="line"><span class="keyword">attach</span>(mtcars)</div><div class="line">scatterplot3d(wt,disp,mpg,main=<span class="string">"三维散点图"</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/02/04/chapter11-中级绘图/img12.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#增加垂线</span></div><div class="line">scatterplot3d(wt,disp,mpg,pch=<span class="number">16</span>,highlight.3d=<span class="literal">TRUE</span>,type=<span class="string">"h"</span>,main=<span class="string">"三维散点图"</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/02/04/chapter11-中级绘图/img13.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#增加回归面</span></div><div class="line">s3d&lt;-scatterplot3d(wt,disp,mpg,pch=<span class="number">16</span>,highlight.3d=<span class="literal">TRUE</span>,type=<span class="string">"h"</span>,main=<span class="string">"三维散点图与回归面"</span>)</div><div class="line">fit&lt;-lm(mpg~wt+disp)</div><div class="line">s3d$plane3d(fit)</div></pre></td></tr></table></figure>
<p><img src="/2017/02/04/chapter11-中级绘图/img14.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#交互式可旋转三维图形</span></div><div class="line"><span class="keyword">library</span>(rgl)</div><div class="line"><span class="keyword">attach</span>(mtcars)</div><div class="line">plot3d(wt,disp,mpg,col=<span class="string">"red"</span>,size=<span class="number">5</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/02/04/chapter11-中级绘图/img15.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#另一种交互图，更好</span></div><div class="line"><span class="keyword">library</span>(Rcmdr)</div><div class="line">scatter3d(wt,disp,mpg)</div></pre></td></tr></table></figure>
<p><img src="/2017/02/04/chapter11-中级绘图/img16.png" alt=""></p>
<h3 id="1-4、气泡图"><a href="#1-4、气泡图" class="headerlink" title="1.4、气泡图"></a>1.4、气泡图</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">##气泡图</span></div><div class="line">r&lt;-sqrt(disp/pi)</div><div class="line">symbols(wt,mpg,circle=r,inches = <span class="number">0.30</span>,fg=<span class="string">"white"</span>,bg=<span class="string">"lightblue"</span>,main=<span class="string">"气泡图，比例为排量"</span>,</div><div class="line">        ylab=<span class="string">"每加仑公里数"</span>,xlab=<span class="string">"自重（lbs/1000）"</span>)</div><div class="line">text(wt,mpg,rownames(mtcars),cex=<span class="number">0.6</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/02/04/chapter11-中级绘图/img17.png" alt=""></p>
<h2 id="2、折线图"><a href="#2、折线图" class="headerlink" title="2、折线图"></a>2、折线图</h2><ul>
<li>大多数内容第三章已经说明</li>
</ul>
<p><img src="/2017/02/04/chapter11-中级绘图/img18.png" alt=""><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#转换为数值型</span></div><div class="line">Orange$Tree&lt;-as.numeric(Orange$Tree)</div><div class="line">ntrees&lt;-max(Orange$Tree)</div><div class="line"></div><div class="line">xrange&lt;-range(Orange$age)</div><div class="line">yrange&lt;-range(Orange$circumference)</div><div class="line"></div><div class="line">plot(xrange,yrange,type=<span class="string">"n"</span>,</div><div class="line">     xlab=<span class="string">"树龄/天"</span>,ylab=<span class="string">"直径/mm"</span>)</div><div class="line"></div><div class="line">colors&lt;-rainbow(ntrees)</div><div class="line">linetype&lt;-c(<span class="number">1</span>:ntrees)</div><div class="line">plotchar&lt;-seq(<span class="number">18</span>,<span class="number">18</span>+ntrees,<span class="number">1</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1</span>:ntrees)&#123;</div><div class="line">  tree&lt;-subset(Orange,Tree==i)</div><div class="line">  lines(tree$age,tree$circumference,</div><div class="line">        type=<span class="string">"b"</span>,lwd=<span class="number">2</span>,</div><div class="line">        lty=linetype[i],</div><div class="line">        col=colors[i],</div><div class="line">        pch=plotchar[i])</div><div class="line">&#125;</div><div class="line"></div><div class="line">title(<span class="string">"树图"</span>,<span class="string">"折线示例"</span>)</div><div class="line"></div><div class="line">legend(xrange[<span class="number">1</span>],yrange[<span class="number">2</span>],</div><div class="line">       <span class="number">1</span>:ntrees,cex=<span class="number">0.8</span>,col=colors,pch=plotchar,lty=linetype,title=<span class="string">"Tree"</span>)</div></pre></td></tr></table></figure></p>
<p><img src="/2017/02/04/chapter11-中级绘图/img19.png" alt=""></p>
<h2 id="3、相关图"><a href="#3、相关图" class="headerlink" title="3、相关图"></a>3、相关图</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">##相关图</span></div><div class="line"><span class="keyword">library</span>(corrgram)</div><div class="line"><span class="comment">#order = TRUE矩阵行列均使用主成分分析进行了重新排序</span></div><div class="line"><span class="comment">#lower.panel与upper.panel设置下与上对角线元素类型</span></div><div class="line"><span class="comment">#panel.pie 用饼图的填充比例来表示相关性大小</span></div><div class="line"><span class="comment">#panel.shade 用阴影的深度来表示相关性</span></div><div class="line"><span class="comment">#panel.ellipse 绘制置信椭圆和平滑拟合曲线</span></div><div class="line"><span class="comment">#panel.pts 绘制散点图</span></div><div class="line"></div><div class="line"><span class="comment">#text.panel与diag.panel控制主对角线元素类型</span></div><div class="line"><span class="comment">#panel.minmax 输出变量的最大最小值</span></div><div class="line"><span class="comment">#panel.txt 输出的变量名字</span></div><div class="line">corrgram(mtcars,order=<span class="literal">TRUE</span>,lower.panel = panel.shade,upper.panel = panel.pie,text.panel = panel.txt,</div><div class="line">         main=<span class="string">"相关系数图"</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/02/04/chapter11-中级绘图/img20.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">corrgram(mtcars,order=<span class="literal">TRUE</span>,</div><div class="line">         lower.panel = panel.ellipse,</div><div class="line">         upper.panel = panel.pts,</div><div class="line">         text.panel = panel.txt,</div><div class="line">         diag.panel = panel.minmax,</div><div class="line">         main=<span class="string">"相关系数图"</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/02/04/chapter11-中级绘图/img21.png" alt=""></p>
<h2 id="4、马赛克图"><a href="#4、马赛克图" class="headerlink" title="4、马赛克图"></a>4、马赛克图</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#马赛克图</span></div><div class="line"><span class="keyword">library</span>(vcd)</div><div class="line">ftable(Titanic)</div><div class="line"><span class="comment">#马赛克图隐含着大量的数据信息。例如： </span></div><div class="line"><span class="comment">#(1)从船员到头等舱，存活率陡然提高；</span></div><div class="line"><span class="comment">#(2)大部分孩子都处在三等舱和二等舱中；</span></div><div class="line"><span class="comment">#(3)在头等舱中的大部分女性都存活了下来，而三等舱中仅有一半女性存活；</span></div><div class="line"><span class="comment">#(4)船员中女性很少，导致该组的Survived标签重叠（图底部的No和Yes）。</span></div><div class="line">mosaic(Titanic,shade = <span class="literal">TRUE</span>,legend=<span class="literal">TRUE</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/02/04/chapter11-中级绘图/img22.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;中级绘图&quot;&gt;&lt;a href=&quot;#中级绘图&quot; class=&quot;headerlink&quot; title=&quot;中级绘图&quot;&gt;&lt;/a&gt;中级绘图&lt;/h1&gt;&lt;h2 id=&quot;1、散点图&quot;&gt;&lt;a href=&quot;#1、散点图&quot; class=&quot;headerlink&quot; title=&quot;1、散点图&quot;&gt;
    
    </summary>
    
      <category term="R语言" scheme="https://pingansheng.github.io/categories/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R语言" scheme="https://pingansheng.github.io/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="中级绘图" scheme="https://pingansheng.github.io/tags/%E4%B8%AD%E7%BA%A7%E7%BB%98%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>chapter10 功效分析</title>
    <link href="https://pingansheng.github.io/2017/02/03/chapter10-%E5%8A%9F%E6%95%88%E5%88%86%E6%9E%90/"/>
    <id>https://pingansheng.github.io/2017/02/03/chapter10-功效分析/</id>
    <published>2017-02-03T06:33:08.000Z</published>
    <updated>2024-02-24T02:35:07.889Z</updated>
    
    <content type="html"><![CDATA[<h1 id="功效分析"><a href="#功效分析" class="headerlink" title="功效分析"></a>功效分析</h1><ul>
<li>在给定置信度的情况下，判断检测到给定效应值时所需的样本量。反过来，它也可以帮助你在给定置信度水平情况下，计算在某样本量内能检测到给定效应值的概率。</li>
</ul>
<h2 id="1、假设检验速览"><a href="#1、假设检验速览" class="headerlink" title="1、假设检验速览"></a>1、假设检验速览</h2><ul>
<li>样本大小: 实验设计中每种条件/组中观测的数目</li>
<li>显著性水平: I型错误的概率来定义。也可以把它看做是发现效应不发生的概率</li>
<li>功效: 通过1减去II型错误的概率来定义。可以把它看做是真实效应发生的概率。</li>
<li>效应值: 指的是在备择或研究假设下效应的量。效应值的表达式依赖于假设检验中使用的统计方法</li>
</ul>
<p><strong>功效分析就是给定三个值得情况下，求得另外一个值</strong></p>
<h2 id="2、用-pwr-包做功效分析"><a href="#2、用-pwr-包做功效分析" class="headerlink" title="2、用 pwr 包做功效分析"></a>2、用 pwr 包做功效分析</h2><h3 id="2-1、t检验"><a href="#2-1、t检验" class="headerlink" title="2.1、t检验"></a>2.1、t检验</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">pwr.t.test(n=,d=,sig.level=,power=,alternative=)</div><div class="line"><span class="comment">#n: 样本大小</span></div><div class="line"><span class="comment">#d: 效应值,d=(u1-u2)/o, u1与u2为两组均值，o为标准差</span></div><div class="line"><span class="comment">#sig.level: 显著水平</span></div><div class="line"><span class="comment">#power: 功效水平</span></div><div class="line"><span class="comment">#type: 检验类型，双样本t检验（two.sample）、单样本t检验（one.sample）或相依样本t检验（paired）。默认为双样本t检验。</span></div><div class="line"><span class="comment">#alternative: 指统计检验是双侧检验（two.sided）还是单侧检验（less或greater）。默认为双侧检验</span></div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">##t检验</span></div><div class="line">&gt; <span class="keyword">library</span>(pwr)</div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#实例1、手机与驾驶反应时间实验，根据过去经验知道反应时间的标准差为1.25s,当前认为相差1s表示巨大差异，此时可</span></div><div class="line">&gt; <span class="comment">#设定d=1/1.25=0.8或更大，如果差异存在，你希望90%把握检测到，由于随机变异性存在，希望95%把握不会误报差异显著</span></div><div class="line">&gt; pwr.t.test(d=<span class="number">0.8</span>,sig.level = <span class="number">0.05</span>,power = <span class="number">0.9</span>,type = <span class="string">"two.sample"</span>,alternative = <span class="string">"two.side"</span>)</div><div class="line"></div><div class="line">     Two-sample t test power calculation </div><div class="line"></div><div class="line">              n = <span class="number">33.82554</span></div><div class="line">              d = <span class="number">0.8</span></div><div class="line">      sig.level = <span class="number">0.05</span></div><div class="line">          power = <span class="number">0.9</span></div><div class="line">    alternative = two.sided</div><div class="line"></div><div class="line">NOTE: n is number <span class="keyword">in</span> *each* group</div><div class="line"></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#结果显示需要每组34个受试者，一共2组68人</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#实例2、如果在比较实例1的2种情况时候，想检测到总体均值0.5个标准差的差异，将误报的几率限制在%1，只有40个受试者，</span></div><div class="line">&gt; <span class="comment">#那么能检测到这种差异的概率是多大？</span></div><div class="line">&gt; pwr.t.test(n=<span class="number">20</span>,d=<span class="number">0.5</span>,sig.level = <span class="number">0.01</span>,type = <span class="string">"two.sample"</span>,alternative = <span class="string">"two.side"</span>)</div><div class="line"></div><div class="line">     Two-sample t test power calculation </div><div class="line"></div><div class="line">              n = <span class="number">20</span></div><div class="line">              d = <span class="number">0.5</span></div><div class="line">      sig.level = <span class="number">0.01</span></div><div class="line">          power = <span class="number">0.1439551</span></div><div class="line">    alternative = two.sided</div><div class="line"></div><div class="line">NOTE: n is number <span class="keyword">in</span> *each* group</div><div class="line"></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#结果表明只有14%的把握能检测到这种差异，即差值为0.5*1.25=0.625s,86%的可能性会错过，此时考虑是否应该进行该测试</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#如果两组的样本大小不同，使用：</span></div><div class="line">&gt; pwr.t2n.test(n1=<span class="number">20</span>,n2=<span class="number">30</span>,d=<span class="number">0.5</span>,sig.level = <span class="number">0.01</span>,alternative = <span class="string">"two.side"</span>)</div><div class="line"></div><div class="line">     t test power calculation </div><div class="line"></div><div class="line">             n1 = <span class="number">20</span></div><div class="line">             n2 = <span class="number">30</span></div><div class="line">              d = <span class="number">0.5</span></div><div class="line">      sig.level = <span class="number">0.01</span></div><div class="line">          power = <span class="number">0.183246</span></div><div class="line">    alternative = two.sided</div></pre></td></tr></table></figure>
<h3 id="2-2、方差分析"><a href="#2-2、方差分析" class="headerlink" title="2.2、方差分析"></a>2.2、方差分析</h3><p>效应值f计算公式：<br><img src="/2017/02/03/chapter10-功效分析/img1.png" alt=""><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">##方差分析</span></div><div class="line">&gt; <span class="comment">#pwr.anova.test(k=组数,n=各组样本大小,f=效应值,sig.level=显著水平,power=功效)</span></div><div class="line">&gt; pwr.anova.test(k=<span class="number">5</span>,f=<span class="number">0.25</span>,sig.level=<span class="number">0.05</span>,power=<span class="number">0.8</span>)</div><div class="line"></div><div class="line">     Balanced one-way analysis of variance power calculation </div><div class="line"></div><div class="line">              k = <span class="number">5</span></div><div class="line">              n = <span class="number">39.1534</span></div><div class="line">              f = <span class="number">0.25</span></div><div class="line">      sig.level = <span class="number">0.05</span></div><div class="line">          power = <span class="number">0.8</span></div><div class="line"></div><div class="line">NOTE: n is number <span class="keyword">in</span> each group</div><div class="line"></div><div class="line">&gt; <span class="comment">#此方法需要估计同方差时5个组的均值</span></div></pre></td></tr></table></figure></p>
<h3 id="2-3、相关性"><a href="#2-3、相关性" class="headerlink" title="2.3、相关性"></a>2.3、相关性</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">##相关性</span></div><div class="line">&gt; <span class="comment">#pwr.r.test(n=观测数,r=效应值（线性相关系数）,sig.level = 显著水平,power = 功效,alternative =c("two.sided", "less","greater"))</span></div><div class="line">&gt; <span class="comment">#抑郁与孤独的关系，设定相关系数为0.25,大于0.25表示有关系拒绝零假设，显著水平为0.05,90%的信心拒绝零假设，</span></div><div class="line">&gt; pwr.r.test(r=<span class="number">0.25</span>,sig.level = <span class="number">0.05</span>,power = <span class="number">0.9</span>,alternative =<span class="string">"greater"</span>)</div><div class="line"></div><div class="line">     approximate correlation power calculation (arctangh transformation) </div><div class="line"></div><div class="line">              n = <span class="number">133.2803</span></div><div class="line">              r = <span class="number">0.25</span></div><div class="line">      sig.level = <span class="number">0.05</span></div><div class="line">          power = <span class="number">0.9</span></div><div class="line">    alternative = greater</div><div class="line"></div><div class="line">&gt; <span class="comment">#需要134个受试者</span></div></pre></td></tr></table></figure>
<h3 id="2-4、线性模型"><a href="#2-4、线性模型" class="headerlink" title="2.4、线性模型"></a>2.4、线性模型</h3><p>效应值f2计算公式：<br><img src="/2017/02/03/chapter10-功效分析/img2.png" alt=""><br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">##线性模型</span></div><div class="line">&gt; <span class="comment">#pwr.f2.test(u=分子自由度,v=分母自由度,f2=效应值,sig.level = ,power = )</span></div><div class="line">&gt; <span class="comment">#当要评价一组预测变量对结果的影响程度时，适宜用第一个公式来计算f2；当要评价一组预</span></div><div class="line">&gt; <span class="comment">#测变量对结果的影响超过第二组变量（协变量）多少时，适宜用第二个公式。</span></div><div class="line"></div><div class="line">&gt; <span class="comment">#现假设你想研究老板的领导风格对员工满意度的影响，是否超过薪水和工作小费对员工满意度的影响。</span></div><div class="line">&gt; <span class="comment">#领导风格可用四个变量来评估，薪水和小费与三个变量有关。过去的经验表明，薪水</span></div><div class="line">&gt; <span class="comment">#和小费能够解释约30%的员工满意度的方差。而从现实出发，领导风格至少能解释35%的方差。</span></div><div class="line">&gt; <span class="comment">#假定显著性水平为0.05，那么在90%的置信度情况下，你需要多少受试者才能得到这样的方差贡</span></div><div class="line">&gt; <span class="comment">#献率呢？</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#此时u=3(总预测变量-集合B预测变量)，f2=(0.35-0.3)/(1-0.35)=0.0769</span></div><div class="line">&gt; pwr.f2.test(u=<span class="number">3</span>,f2=<span class="number">0.0769</span>,sig.level =<span class="number">0.05</span> ,power = <span class="number">0.9</span>)</div><div class="line"></div><div class="line">     Multiple regression power calculation </div><div class="line"></div><div class="line">              u = <span class="number">3</span></div><div class="line">              v = <span class="number">184.2426</span></div><div class="line">             f2 = <span class="number">0.0769</span></div><div class="line">      sig.level = <span class="number">0.05</span></div><div class="line">          power = <span class="number">0.9</span></div><div class="line"></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#多元回归中，分母的自由度等于N- k- 1， N是总观测数， k是预测变量数。本例中， N-7-1= 185，即需要样本大小N = 185 + 7 + 1 = 193</span></div></pre></td></tr></table></figure></p>
<h3 id="2-5、比例检验"><a href="#2-5、比例检验" class="headerlink" title="2.5、比例检验"></a>2.5、比例检验</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">##比例检验</span></div><div class="line">&gt; <span class="comment">#pwr.2p.test(h=效应值,n=各组相同的样本量,sig.level = ,power = )</span></div><div class="line">&gt; <span class="comment">#当n不同时候，使用</span></div><div class="line">&gt; <span class="comment">#pwr.2p.test(h=效应值,n1=,n2=,sig.level = ,power = )</span></div><div class="line">&gt; <span class="comment">#h使用ES.h(p1,p2)计算</span></div><div class="line">&gt; <span class="comment">#假定你对某流行药物能缓解60%使用者的症状感到怀疑。而一种更贵的新药如果能缓解65%</span></div><div class="line">&gt; <span class="comment">#使用者的症状，就会被投放到市场中。此时，在研究中你需要多少受试者才能够检测到两种药物</span></div><div class="line">&gt; <span class="comment">#存在这一特定的差异？</span></div><div class="line">&gt; pwr.2p.test(h=ES.h(<span class="number">0.65</span>,<span class="number">0.6</span>),sig.level = <span class="number">0.05</span>,power=<span class="number">0.9</span>,alternative = <span class="string">"greater"</span>)</div><div class="line"></div><div class="line">     Difference of proportion power calculation <span class="keyword">for</span> binomial distribution (arcsine transformation) </div><div class="line"></div><div class="line">              h = <span class="number">0.1033347</span></div><div class="line">              n = <span class="number">1604.007</span></div><div class="line">      sig.level = <span class="number">0.05</span></div><div class="line">          power = <span class="number">0.9</span></div><div class="line">    alternative = greater</div><div class="line"></div><div class="line">NOTE: same sample sizes</div><div class="line"></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#每组1605个人</span></div></pre></td></tr></table></figure>
<h3 id="2-6、卡方检验"><a href="#2-6、卡方检验" class="headerlink" title="2.6、卡方检验"></a>2.6、卡方检验</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">##卡方检验</span></div><div class="line"><span class="comment">#常常用来评价两个类别型变量的关系。典型的零假设是变量之间独立，备择假设是不独立。 </span></div><div class="line">pwr.chisq.test(w=效应值,N=总样本大小,df=自由度,sig.level = ,power = )</div><div class="line"><span class="comment">#ES.w2(P)可以用来计算双因素列联表备择假设的效应值，P为一个假设的双因素概率表</span></div><div class="line"><span class="comment">#假设你想研究人种与工作晋升的关系。你预期样本中70%是白种人， 10%是美国黑人， 20%西班牙裔人。而且，你认为相比30%的美国黑人和50%的西班牙裔人， 60%的</span></div><div class="line"><span class="comment">#白种人更容易晋升。晋升概率如表所示。</span></div><div class="line"><span class="comment">#|人种|晋升比例|未晋升|</span></div><div class="line"><span class="comment">#|白  |0.42    |  0.28|</span></div><div class="line"><span class="comment">#|黑  |0.03    |  0.07|</span></div><div class="line"><span class="comment">#|西裔|0.10    |  0.10|</span></div><div class="line"></div><div class="line">prob&lt;-matrix(c(<span class="number">0.42</span>,<span class="number">0.28</span>,<span class="number">0.03</span>,<span class="number">0.07</span>,<span class="number">0.10</span>,<span class="number">0.10</span>),byrow = <span class="literal">TRUE</span>,nrow = <span class="number">3</span>)</div><div class="line">ES.w2(prob)</div><div class="line">pwr.chisq.test(w=ES.w2(prob),df=<span class="number">2</span>,sig.level = <span class="number">0.05</span>,power = <span class="number">0.9</span>)</div><div class="line"></div><div class="line"><span class="comment">#需要369个测试者</span></div></pre></td></tr></table></figure>
<h2 id="3、绘制功效图形"><a href="#3、绘制功效图形" class="headerlink" title="3、绘制功效图形"></a>3、绘制功效图形</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="comment">##绘制功效分析图形</span></div><div class="line"><span class="keyword">library</span>(pwr)</div><div class="line"><span class="comment">#生成一系列相关系数和功效值</span></div><div class="line">r&lt;-seq(<span class="number">0.1</span>,<span class="number">0.5</span>,<span class="number">0.01</span>)</div><div class="line">nr&lt;-length(r)</div><div class="line">p&lt;-seq(<span class="number">0.4</span>,<span class="number">0.9</span>,<span class="number">0.1</span>)</div><div class="line">np&lt;-length(p)</div><div class="line"></div><div class="line"><span class="comment">#构建一个空数组存储结果</span></div><div class="line">samsize&lt;-array(numeric(nr*np),dim=c(nr,np))</div><div class="line"><span class="comment">#每种相关系数和功效的值对产生需要的样本数</span></div><div class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1</span>:np)&#123;</div><div class="line">  <span class="keyword">for</span>(j <span class="keyword">in</span> <span class="number">1</span>:nr)&#123;</div><div class="line">    result &lt;- pwr.r.test(n=<span class="literal">NULL</span>,r=r[j],sig.level = <span class="number">0.05</span>,power=p[i],alternative = <span class="string">"two.side"</span>)</div><div class="line">    samsize[j,i]&lt;-ceiling(result$n)</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">#返回最小值与最大值</span></div><div class="line">xrange&lt;-range(r)</div><div class="line"><span class="comment">#返回最小值与最大值，向上取整</span></div><div class="line">yrange&lt;-round(range(samsize))</div><div class="line"></div><div class="line"><span class="comment">#产生一组彩虹色</span></div><div class="line">colors&lt;-rainbow(length(p))</div><div class="line"><span class="comment">#绘制坐标系</span></div><div class="line">plot(xrange,yrange,type=<span class="string">"n"</span>,xlab=<span class="string">"相关系数"</span>,ylab=<span class="string">"样本大小"</span>)</div><div class="line"><span class="comment">#每一种功效绘制曲线</span></div><div class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> <span class="number">1</span>:np)&#123;</div><div class="line">   lines(r,samsize[,i],type=<span class="string">"l"</span>,lwd=<span class="number">2</span>,col=colors[i])</div><div class="line">&#125;</div><div class="line"></div><div class="line">abline(v=<span class="number">0</span>,h=seq(<span class="number">0</span>,yrange[<span class="number">2</span>],<span class="number">50</span>),lty=<span class="number">2</span>,col=<span class="string">"grey89"</span>)</div><div class="line"></div><div class="line">abline(h=<span class="number">0</span>,v=seq(xrange[<span class="number">1</span>],xrange[<span class="number">2</span>],<span class="number">0.02</span>),lty=<span class="number">2</span>,col=<span class="string">"grey89"</span>)</div><div class="line"></div><div class="line">title(<span class="string">"相关性分析的样本大小估计，显著水平0.05，双尾"</span>)</div><div class="line">legend(<span class="string">"topright"</span>,title=<span class="string">"功效"</span>,as.character(p),fill = colors)</div></pre></td></tr></table></figure>
<p><img src="/2017/02/03/chapter10-功效分析/img3.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;功效分析&quot;&gt;&lt;a href=&quot;#功效分析&quot; class=&quot;headerlink&quot; title=&quot;功效分析&quot;&gt;&lt;/a&gt;功效分析&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;在给定置信度的情况下，判断检测到给定效应值时所需的样本量。反过来，它也可以帮助你在给定置信度水平情况下，计算在某
    
    </summary>
    
      <category term="R语言" scheme="https://pingansheng.github.io/categories/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R语言" scheme="https://pingansheng.github.io/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="功效分析" scheme="https://pingansheng.github.io/tags/%E5%8A%9F%E6%95%88%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>InnoDB引擎对于SQL语句的加锁策略</title>
    <link href="https://pingansheng.github.io/2017/01/23/InnoDB%E5%BC%95%E6%93%8E%E5%AF%B9%E4%BA%8ESQL%E8%AF%AD%E5%8F%A5%E7%9A%84%E5%8A%A0%E9%94%81%E7%AD%96%E7%95%A5/"/>
    <id>https://pingansheng.github.io/2017/01/23/InnoDB引擎对于SQL语句的加锁策略/</id>
    <published>2017-01-23T07:26:20.000Z</published>
    <updated>2024-02-24T02:35:07.860Z</updated>
    
    <content type="html"><![CDATA[<h1 id="InnoDB引擎对于SQL语句的加锁策略"><a href="#InnoDB引擎对于SQL语句的加锁策略" class="headerlink" title="InnoDB引擎对于SQL语句的加锁策略"></a>InnoDB引擎对于SQL语句的加锁策略</h1><ul>
<li><p>加锁状态的读、更新或删除操作一般会将其扫描到的每一个索引的记录进行加锁，它并不关心where条件是否会包含这些行，InnoDB不记得具体的where条件，仅仅知道扫描了哪些索引区间，这种锁就是通常的next-key锁，其同时封锁了在此记录之前的区间插入（gap锁）。gap锁可以被禁用，这将导致next-key锁不再使用，事务的隔离级别也会影响加锁。</p>
</li>
<li><p>如果一个二级索引用在一个查询上，并且索引记录加了排它锁，InnoDB同时也睡将相应的聚簇索引记录加锁</p>
</li>
<li><p>如果没有合适的索引用于你的语句，MySQL必须扫描全表，则每一行都会被加锁，这样锁住了其他所有用户的插入，创建合适的索引非常重要。</p>
</li>
<li><p>对于<code>SELECT ... FOR UPDATE</code>或者<code>SELECT ... LOCK IN SHARE MODE</code>来说，其将锁加在扫描到的行上，并且在这些扫描到的行中那些不匹配结果的行（不符合where条件）会去释放锁，但是在一些情况下，这些行不会立即释放锁，因为最后的结果行和之前的原始行之间的联系在查询过程中丢失了，比如，在<code>UNION</code>中，扫描到的行插入了临时表进而再判断是否符合要求，这种情况下，原始的行在查询完成后锁才会释放。</p>
</li>
<li><p>InnoDB的加锁方式</p>
<ul>
<li><code>SELECT ... FROM</code>: 快照读，不加锁，除非事务的隔离级别设置为<code>SERIALIZABLE</code>,这种情况下查询在其查询到的记录索引上加next-key锁，如果查询通过唯一索引查询唯一的一行，则对该索引加记录锁。</li>
<li><code>SELECT ... FROM ... LOCK IN SHARE MODE</code>: 对所有查询到的记录加共享的next-key锁，如果查询通过唯一索引查询唯一的一行，则对该索引加记录锁。</li>
<li><code>SELECT ... FROM ... FOR UPDATE</code>: 对查询到的每一条记录设置排他的next-key锁，如果查询通过唯一索引查询唯一的一行，则对该索引加记录锁。对于查询到的记录，其还会在其他会话进行确定事务隔离级别的<code>SELECT ... FROM ... LOCK IN SHARE MODE</code></li>
<li><code>UPDATE ... WHERE ...</code>: 记录添加排他的next-key锁，如果查询通过唯一索引查询唯一的一行，则对该索引加记录锁。</li>
<li>当`UPDATE修改聚簇索引记录时，其会对影响到的二级索引加共享锁，当其对二级索引的插入进行重复性检查时或者二级索引进行插入时。</li>
<li><code>DELETE FROM ... WHERE ...</code>: 所有扫描到的记录加排他next-key锁，如果查询通过唯一索引查询唯一的一行，则对该索引加记录锁。</li>
<li><code>INSERT</code>对插入的行加排他锁，是记录锁而不是next-key锁，不锁区间</li>
<li>在插入行之前，会设置插入意向区间锁，此锁表示这种插入的动作在多个会话同时对同一索引区间进行插入是只要不是插入同样的位置并不需要相互等待，例如在4,7之间插入5,6，两个会话在对插入的记录加排它锁之前都会在4,7之间加插入意向区间锁，这是并不会相互等待因为行无冲突。</li>
<li><p>如果在<code>INSERT</code>过程中，重复索引错误发生（<code>duplicate-key error</code>），则对这个重复的索引记录添加共享锁，此时可能发生死锁当多个会话试图插入同一行而另一个会话已经拥有一个排它锁时，这在删除该行时会发生。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t1 (i <span class="built_in">INT</span>, PRIMARY <span class="keyword">KEY</span> (i)) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span>;</div><div class="line"></div><div class="line"><span class="comment">--session1</span></div><div class="line"><span class="keyword">START</span> <span class="keyword">TRANSACTION</span>;</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> t1 <span class="keyword">VALUES</span>(<span class="number">1</span>);</div><div class="line"><span class="comment">--session2</span></div><div class="line"><span class="keyword">START</span> <span class="keyword">TRANSACTION</span>;</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> t1 <span class="keyword">VALUES</span>(<span class="number">1</span>);</div><div class="line"><span class="comment">--session3</span></div><div class="line"><span class="keyword">START</span> <span class="keyword">TRANSACTION</span>;</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> t1 <span class="keyword">VALUES</span>(<span class="number">1</span>);</div><div class="line"></div><div class="line"><span class="comment">--session1</span></div><div class="line"><span class="keyword">ROLLBACK</span>;</div><div class="line"></div><div class="line"><span class="comment">--死锁发生，1有排它锁，2,3重复错误，尝试获取共享锁，1回滚，排它锁释放，2,3都获得了共享锁，但是2,3均获取不到排它锁，发生死锁（及时发生了重复错误，insert的执行依然要最后尝试去获得排它锁）</span></div><div class="line"><span class="comment">--session换成DELETE FROM t1 WHERE i = 1;commit;效果一样</span></div></pre></td></tr></table></figure>
</li>
<li><p><code>INSERT ... ON DUPLICATE KEY UPDATE</code>: 与insert的区别是在发生duplicate-key错误时，加的是排他的next-key锁</p>
</li>
<li><code>REPLACE</code>: 类似没有唯一索引冲突的INSERT，另外当更新成功时候，行上加排他next-key锁。</li>
<li><code>INSERT INTO T SELECT ... FROM S WHERE ...</code>: 对插入到T中的每一行加排他记录锁，如果事务的隔离级别是RC,或者innodb_locks_unsafe_for_binlog启用并且隔离级别不是序列化，Innodb将S上的查询当作一个快照读，此时没有锁，否则，S上查询到的每一行加共享的next-key锁。</li>
<li><code>CREATE TABLE ... SELECT ...</code>: 类似上一个，只处理select部分的锁。</li>
<li>当select执行类似<code>REPLACE INTO t SELECT ... FROM s WHERE ...</code>或<code>UPDATE t ... WHERE col IN (SELECT ... FROM s ...)</code>:InnoDB对s上的记录加共享的next-key锁。</li>
<li>当表上有自增列时，InnoDB对自增列涉及的索引最后一个加排它锁，访问自增计数器时，InnoDB用一种特殊的AUTO-INC表锁模式，此锁仅保持到当前的SQL查询的结束部分，而不是整个事务的结束部分，AUTO-INC被持有时，其他会话无法插入。</li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;InnoDB引擎对于SQL语句的加锁策略&quot;&gt;&lt;a href=&quot;#InnoDB引擎对于SQL语句的加锁策略&quot; class=&quot;headerlink&quot; title=&quot;InnoDB引擎对于SQL语句的加锁策略&quot;&gt;&lt;/a&gt;InnoDB引擎对于SQL语句的加锁策略&lt;/h1&gt;&lt;
    
    </summary>
    
      <category term="DB" scheme="https://pingansheng.github.io/categories/DB/"/>
    
    
      <category term="DB" scheme="https://pingansheng.github.io/tags/DB/"/>
    
      <category term="InnoDB加锁" scheme="https://pingansheng.github.io/tags/InnoDB%E5%8A%A0%E9%94%81/"/>
    
  </entry>
  
  <entry>
    <title>Linux安装SVN</title>
    <link href="https://pingansheng.github.io/2017/01/17/Linux%E5%AE%89%E8%A3%85SVN/"/>
    <id>https://pingansheng.github.io/2017/01/17/Linux安装SVN/</id>
    <published>2017-01-17T10:48:17.000Z</published>
    <updated>2024-02-24T02:35:07.833Z</updated>
    
    <content type="html"><![CDATA[<p>1、安装APR-1.2.7和APR-util-1.2.7</p>
<p>2、编译安装APACHE。 依赖如下</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./configure -prefix=/usr/local/apache2 -enable-module=so  --with-apr=/usr/local/apr --with-apr-util=/usr/local/apr-util/ --with-pcre=/usr/local/pcre</div></pre></td></tr></table></figure>
<p>3、安装svn</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./configure --with-apxs=/usr/local/apache2 /bin/apxs --with-apr=/usr/local/apr --with-apr-util=/usr/local/apr</div></pre></td></tr></table></figure>
<p>4、启动</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">svnserve -d -r /opt/svn/repos --listen-port <span class="number">3691</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1、安装APR-1.2.7和APR-util-1.2.7&lt;/p&gt;
&lt;p&gt;2、编译安装APACHE。 依赖如下&lt;/p&gt;
&lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div c
    
    </summary>
    
      <category term="代码碎片" scheme="https://pingansheng.github.io/categories/%E4%BB%A3%E7%A0%81%E7%A2%8E%E7%89%87/"/>
    
    
      <category term="SVN" scheme="https://pingansheng.github.io/tags/SVN/"/>
    
  </entry>
  
  <entry>
    <title>bootstrap表格控制内容超长</title>
    <link href="https://pingansheng.github.io/2017/01/13/bootstrap%E8%A1%A8%E6%A0%BC%E6%8E%A7%E5%88%B6%E5%86%85%E5%AE%B9%E8%B6%85%E9%95%BF/"/>
    <id>https://pingansheng.github.io/2017/01/13/bootstrap表格控制内容超长/</id>
    <published>2017-01-13T04:55:51.000Z</published>
    <updated>2024-02-24T02:35:07.695Z</updated>
    
    <content type="html"><![CDATA[<p>CSS，bootstrap表格控制当td内容过长时用省略号表示，以及在不使用bootstrap时过长也用省略号表示<br>首先需要在table中设置<code>table-layout:fixed</code>;<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>然后在表头th中设置每列的宽度<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"table-layout:fixed"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">"10%"</span>&gt;</span>Title01<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">"20%"</span>&gt;</span>Title02<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line"><span class="comment">&lt;!--  其他th --&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>然后在需要当长度大于一定数值时用省略号表示的td上面添加样式<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;table style="table-layout:fixed"&gt;</div><div class="line">&lt;th width="10%"&gt;Title01&lt;/th&gt;</div><div class="line">&lt;th width="20%"&gt;Title02&lt;/th&gt;</div><div class="line">&lt;!--  其他th --&gt;</div><div class="line">&lt;c:foreach items = ""  var ="" varStatus = ""&gt;</div><div class="line">&lt;td&gt;&lt;title01&lt;/td&gt;</div><div class="line">&lt;td style="overflow:hidden;white-space:nowrap;text-overflow:ellipsis;"&gt;&lt;title02&lt;/td&gt;</div><div class="line">&lt;!--  other td   --&gt;</div><div class="line">&lt;/c:foreach&gt;</div><div class="line">&lt;/table&gt;</div></pre></td></tr></table></figure></p>
<p>bootstrap在设置表格大小时需要设置到th中，否则可能不会生效，以上在bootstrap中可用</p>
<p>当不使用bootstrap的时候可以使用如下样式，网上搜索到的，比较好用</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"&gt;</span>   </div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span>   </div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span>   </div><div class="line">   <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined">   </span></div><div class="line">.mytable &#123;   </div><div class="line">   table-layout: fixed;   </div><div class="line">   width: 98% border:0px;   </div><div class="line">   margin: 0px;   </div><div class="line">&#125;   </div><div class="line">  </div><div class="line">.mytable tr td &#123;   </div><div class="line">    text-overflow: ellipsis; /* for IE */  </div><div class="line">    -moz-text-overflow: ellipsis; /* for Firefox,mozilla */  </div><div class="line">    overflow: hidden;   </div><div class="line">    white-space: nowrap;   </div><div class="line">    border: 1px solid;   </div><div class="line">    text-align: left   </div><div class="line">&#125;   </div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span>   </div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span>   </div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>   </div><div class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">"500px"</span> <span class="attr">class</span>=<span class="string">"mytable"</span>&gt;</span>   </div><div class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span>   </div><div class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">"20%"</span>&gt;</span>再别康桥<span class="tag">&lt;/<span class="name">td</span>&gt;</span>   </div><div class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">"80%"</span>&gt;</span></div><div class="line">                轻轻我走了，正如我轻轻地来，我挥一挥衣袖，不带走一片云彩</div><div class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span>  </div><div class="line">             </div><div class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span>   </div><div class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span>   </div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span>   </div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CSS，bootstrap表格控制当td内容过长时用省略号表示，以及在不使用bootstrap时过长也用省略号表示&lt;br&gt;首先需要在table中设置&lt;code&gt;table-layout:fixed&lt;/code&gt;;&lt;br&gt;&lt;figure class=&quot;highlight ht
    
    </summary>
    
      <category term="代码碎片" scheme="https://pingansheng.github.io/categories/%E4%BB%A3%E7%A0%81%E7%A2%8E%E7%89%87/"/>
    
    
      <category term="表格内容超长" scheme="https://pingansheng.github.io/tags/%E8%A1%A8%E6%A0%BC%E5%86%85%E5%AE%B9%E8%B6%85%E9%95%BF/"/>
    
  </entry>
  
  <entry>
    <title>One Line Code Collection</title>
    <link href="https://pingansheng.github.io/2017/01/13/One-Line-Code-Collection/"/>
    <id>https://pingansheng.github.io/2017/01/13/One-Line-Code-Collection/</id>
    <published>2017-01-13T04:29:10.000Z</published>
    <updated>2024-02-24T02:35:07.669Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一行代码汇总"><a href="#一行代码汇总" class="headerlink" title="一行代码汇总"></a>一行代码汇总</h1><h2 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h2><h3 id="Maven-手动安装"><a href="#Maven-手动安装" class="headerlink" title="Maven 手动安装"></a>Maven 手动安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mvn install:install-file -Dfile=/Users/pingansheng/Desktop/maven-assembly-plugin-2.6.jar -DgroupId=org.apache.maven.plugins -DartifactId=maven-assembly-plugin -Dversion=2.6 -Dpackaging=jar</div></pre></td></tr></table></figure>
<h2 id="SHELL"><a href="#SHELL" class="headerlink" title="SHELL"></a>SHELL</h2><h3 id="获取Java-WebService客户端代码"><a href="#获取Java-WebService客户端代码" class="headerlink" title="获取Java WebService客户端代码"></a>获取Java WebService客户端代码</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wsdl2java -d D:\\src -client http://api.xxx.cn/xxxAPI/service/auditResBatchQueryService?wsdl</div></pre></td></tr></table></figure>
<h3 id="linux查看文件夹目录大小"><a href="#linux查看文件夹目录大小" class="headerlink" title="linux查看文件夹目录大小"></a>linux查看文件夹目录大小</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">du -h --max-depth=1</div></pre></td></tr></table></figure>
<h3 id="重建图标缓存"><a href="#重建图标缓存" class="headerlink" title="重建图标缓存"></a>重建图标缓存</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">REM bat代码开始</div><div class="line">REM 更新：增加清除系统托盘旧图标</div><div class="line">REM 关闭Windows外壳程序explorer</div><div class="line">taskkill /f /im explorer.exe</div><div class="line">REM 清理系统图标缓存数据库</div><div class="line">attrib -h -s -r <span class="string">"%userprofile%\AppData\Local\IconCache.db"</span></div><div class="line">del /f <span class="string">"%userprofile%\AppData\Local\IconCache.db"</span></div><div class="line">attrib /s /d -h -s -r <span class="string">"%userprofile%\AppData\Local\Microsoft\Windows\Explorer\*"</span></div><div class="line">del /f <span class="string">"%userprofile%\AppData\Local\Microsoft\Windows\Explorer\thumbcache_32.db"</span></div><div class="line">del /f <span class="string">"%userprofile%\AppData\Local\Microsoft\Windows\Explorer\thumbcache_96.db"</span></div><div class="line">del /f <span class="string">"%userprofile%\AppData\Local\Microsoft\Windows\Explorer\thumbcache_102.db"</span></div><div class="line">del /f <span class="string">"%userprofile%\AppData\Local\Microsoft\Windows\Explorer\thumbcache_256.db"</span></div><div class="line">del /f <span class="string">"%userprofile%\AppData\Local\Microsoft\Windows\Explorer\thumbcache_1024.db"</span></div><div class="line">del /f <span class="string">"%userprofile%\AppData\Local\Microsoft\Windows\Explorer\thumbcache_idx.db"</span></div><div class="line">del /f <span class="string">"%userprofile%\AppData\Local\Microsoft\Windows\Explorer\thumbcache_sr.db"</span></div><div class="line">REM 清理 系统托盘记忆的图标</div><div class="line">echo y|reg delete <span class="string">"HKEY_CLASSES_ROOT\Local Settings\Software\Microsoft\Windows\CurrentVersion\TrayNotify"</span> /v IconStreams</div><div class="line">echo y|reg delete <span class="string">"HKEY_CLASSES_ROOT\Local Settings\Software\Microsoft\Windows\CurrentVersion\TrayNotify"</span> /v PastIconsStream</div><div class="line">REM 重启Windows外壳程序explorer.exe</div><div class="line">start explorer</div></pre></td></tr></table></figure>
<h3 id="右键Notepad-打开"><a href="#右键Notepad-打开" class="headerlink" title="右键Notepad++打开"></a>右键Notepad++打开</h3><p>安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">Windows Registry Editor Version 5.00</div><div class="line"></div><div class="line">[HKEY_CLASSES_ROOT\*\shell\NotePad++]</div><div class="line">@=&quot;用&amp;Notepad++打开&quot;</div><div class="line">&quot;Icon&quot;=&quot;C:\\Program Files (x86)\\Notepad++\\Notepad++.exe&quot;</div><div class="line"></div><div class="line">[HKEY_CLASSES_ROOT\*\shell\NotePad++\Command]</div><div class="line">@=&quot;C:\\Program Files (x86)\\Notepad++\\Notepad++.exe \&quot;%1\&quot;&quot;</div></pre></td></tr></table></figure></p>
<p>卸载</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Windows Registry Editor Version 5.00</div><div class="line">[-HKEY_CLASSES_ROOT\*\shell\NotePad++]</div></pre></td></tr></table></figure>
<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="DIV居中"><a href="#DIV居中" class="headerlink" title="DIV居中"></a>DIV居中</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align: center"</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--里面的width必须设置才可以生效--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width:900px;margin:0 auto;text-align: left"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="正则"><a href="#正则" class="headerlink" title="正则"></a>正则</h2><h3 id="数字"><a href="#数字" class="headerlink" title="数字"></a>数字</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#正实数,最多两位小数</span></div><div class="line">^[<span class="number">0</span>-<span class="number">9</span>]+(.[<span class="number">0</span>-<span class="number">9</span>]&#123;<span class="number">2</span>&#125;)?$</div><div class="line"><span class="comment">#字母数字下划线</span></div><div class="line">^\w+$</div></pre></td></tr></table></figure>
<h3 id="字符"><a href="#字符" class="headerlink" title="字符"></a>字符</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#只匹配字母、中文、数字、下划线，顺序不限</span></div><div class="line">^([ \u4e00-\u9fa5 a-zA-Z0-<span class="number">9</span>_]+)$</div></pre></td></tr></table></figure>
<h2 id="Server"><a href="#Server" class="headerlink" title="Server"></a>Server</h2><h3 id="Java获取磁盘空间"><a href="#Java获取磁盘空间" class="headerlink" title="Java获取磁盘空间"></a>Java获取磁盘空间</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getDiskInfo</span><span class="params">()</span> </span>&#123;</div><div class="line">    File diskPartition = <span class="keyword">new</span> File(<span class="string">"J:"</span>) ;</div><div class="line"></div><div class="line">    <span class="keyword">long</span> totalCapacity = diskPartition.getTotalSpace();</div><div class="line"></div><div class="line">    <span class="keyword">long</span> freePartitionSpace = diskPartition.getFreeSpace();</div><div class="line">    <span class="keyword">long</span> usablePatitionSpace = diskPartition.getUsableSpace();</div><div class="line"></div><div class="line">    System. out.println(<span class="string">"**** Sizes in Mega Bytes ****\n "</span>);</div><div class="line"></div><div class="line">    System. out.println(<span class="string">"Total C partition size : "</span> + totalCapacity / (<span class="number">1024</span> * <span class="number">1024</span>) + <span class="string">" MB"</span>);</div><div class="line">    System. out.println(<span class="string">"Usable Space : "</span> + usablePatitionSpace / (<span class="number">1024</span> * <span class="number">1024</span>) + <span class="string">" MB"</span>);</div><div class="line">    System. out.println(<span class="string">"Free Space : "</span> + freePartitionSpace / (<span class="number">1024</span> * <span class="number">1024</span>) + <span class="string">" MB"</span>);</div><div class="line"></div><div class="line">    System. out.println(<span class="string">" \n**** Sizes in Giga Bytes ****\n "</span>);</div><div class="line"></div><div class="line">    System. out.println(</div><div class="line">    <span class="string">"Total C partition size : "</span> + totalCapacity / (<span class="number">1024</span> * <span class="number">1024</span> * <span class="number">1024</span>) + <span class="string">" GB"</span> );</div><div class="line">    System. out.println(<span class="string">"Usable Space : "</span> + usablePatitionSpace / (<span class="number">1024</span> * <span class="number">1024</span> * <span class="number">1024</span>) + <span class="string">" GB"</span> );</div><div class="line">    System. out.println(<span class="string">"Free Space : "</span> + freePartitionSpace / (<span class="number">1024</span> * <span class="number">1024</span> * <span class="number">1024</span>) + <span class="string">" GB"</span> );</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="可用性指标"><a href="#可用性指标" class="headerlink" title="可用性指标"></a>可用性指标</h3><table>
<thead>
<tr>
<th>指标</th>
<th style="text-align:right">概率可靠性</th>
<th style="text-align:right">每年允许不可用时间</th>
<th>典型场景</th>
</tr>
</thead>
<tbody>
<tr>
<td>一个九</td>
<td style="text-align:right">90%</td>
<td style="text-align:right">1.2 个月</td>
<td>不可用</td>
</tr>
<tr>
<td>二个九</td>
<td style="text-align:right">99%</td>
<td style="text-align:right">3.6 天</td>
<td>普通单点</td>
</tr>
<tr>
<td>三个九</td>
<td style="text-align:right">99.9%</td>
<td style="text-align:right">8.6 小时</td>
<td>普通企业</td>
</tr>
<tr>
<td>四个九</td>
<td style="text-align:right">99.99%</td>
<td style="text-align:right">51.6 分钟</td>
<td>高可用</td>
</tr>
<tr>
<td>五个九</td>
<td style="text-align:right">99.999%</td>
<td style="text-align:right">5 分钟</td>
<td>电信级</td>
</tr>
<tr>
<td>六个九</td>
<td style="text-align:right">99.9999%</td>
<td style="text-align:right">31 秒</td>
<td>极高要求</td>
</tr>
<tr>
<td>七个九</td>
<td style="text-align:right">99.99999%</td>
<td style="text-align:right">3 秒</td>
<td>N/A</td>
</tr>
<tr>
<td>八个九</td>
<td style="text-align:right">99.999999%</td>
<td style="text-align:right">0.3 秒</td>
<td>N/A</td>
</tr>
<tr>
<td>九个九</td>
<td style="text-align:right">99.9999999%</td>
<td style="text-align:right">30 毫秒</td>
<td>N/A</td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一行代码汇总&quot;&gt;&lt;a href=&quot;#一行代码汇总&quot; class=&quot;headerlink&quot; title=&quot;一行代码汇总&quot;&gt;&lt;/a&gt;一行代码汇总&lt;/h1&gt;&lt;h2 id=&quot;Maven&quot;&gt;&lt;a href=&quot;#Maven&quot; class=&quot;headerlink&quot; title=
    
    </summary>
    
      <category term="代码碎片" scheme="https://pingansheng.github.io/categories/%E4%BB%A3%E7%A0%81%E7%A2%8E%E7%89%87/"/>
    
    
      <category term="一行代码" scheme="https://pingansheng.github.io/tags/%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>获取管理员权限REG命令</title>
    <link href="https://pingansheng.github.io/2017/01/13/%E8%8E%B7%E5%8F%96%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90REG%E5%91%BD%E4%BB%A4/"/>
    <id>https://pingansheng.github.io/2017/01/13/获取管理员权限REG命令/</id>
    <published>2017-01-13T02:55:19.000Z</published>
    <updated>2024-02-24T02:35:07.762Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">Windows Registry Editor Version <span class="number">5.00</span></div><div class="line">[HKEY_CLASSES_ROOT\*\shell\runas]</div><div class="line">@=<span class="string">"获取管理员权限"</span></div><div class="line"><span class="string">"NoWorkingDirectory"</span>=<span class="string">""</span></div><div class="line">[HKEY_CLASSES_ROOT\*\shell\runas\command]</div><div class="line">@=<span class="string">"cmd.exe /c takeown /f \"</span>%<span class="number">1</span>\<span class="string">" &amp; icacls \"</span>%<span class="number">1</span>\<span class="string">" /grant administrators:F"</span></div><div class="line"><span class="string">"IsolatedCommand"</span>=<span class="string">"cmd.exe /c takeown /f \"</span>%<span class="number">1</span>\<span class="string">" &amp; icacls \"</span>%<span class="number">1</span>\<span class="string">" /grant administrators:F"</span></div><div class="line">[HKEY_CLASSES_ROOT\Directory\shell\runas]</div><div class="line">@=<span class="string">"获取管理员权限"</span></div><div class="line"><span class="string">"NoWorkingDirectory"</span>=<span class="string">""</span></div><div class="line">[HKEY_CLASSES_ROOT\Directory\shell\runas\command]</div><div class="line">@=<span class="string">"cmd.exe /c takeown /f \"</span>%<span class="number">1</span>\<span class="string">" /r /d y &amp; icacls \"</span>%<span class="number">1</span>\<span class="string">" /grant administrators:F /t"</span></div><div class="line"><span class="string">"IsolatedCommand"</span>=<span class="string">"cmd.exe /c takeown /f \"</span>%<span class="number">1</span>\<span class="string">" /r /d y &amp; icacls \"</span>%<span class="number">1</span>\<span class="string">" /grant administrators:F /t"</span></div></pre></td></tr></table></figure>
<p><img src="/2017/01/13/获取管理员权限REG命令/zhproxy.exe" alt="代理"></p>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;
    
    </summary>
    
      <category term="代码碎片" scheme="https://pingansheng.github.io/categories/%E4%BB%A3%E7%A0%81%E7%A2%8E%E7%89%87/"/>
    
    
      <category term="获取管理员权限" scheme="https://pingansheng.github.io/tags/%E8%8E%B7%E5%8F%96%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90/"/>
    
  </entry>
  
  <entry>
    <title>恢复被病毒隐藏的文件</title>
    <link href="https://pingansheng.github.io/2017/01/13/%E6%81%A2%E5%A4%8D%E8%A2%AB%E7%97%85%E6%AF%92%E9%9A%90%E8%97%8F%E7%9A%84%E6%96%87%E4%BB%B6/"/>
    <id>https://pingansheng.github.io/2017/01/13/恢复被病毒隐藏的文件/</id>
    <published>2017-01-13T02:53:01.000Z</published>
    <updated>2024-02-24T02:35:07.728Z</updated>
    
    <content type="html"><![CDATA[<p>恢复的盘符为L:\<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">attrib -s -h L:\*.* -a /s /d</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;恢复的盘符为L:\&lt;br&gt;&lt;figure class=&quot;highlight r&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;di
    
    </summary>
    
      <category term="代码碎片" scheme="https://pingansheng.github.io/categories/%E4%BB%A3%E7%A0%81%E7%A2%8E%E7%89%87/"/>
    
    
      <category term="恢复文件" scheme="https://pingansheng.github.io/tags/%E6%81%A2%E5%A4%8D%E6%96%87%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>CSS实现TAG</title>
    <link href="https://pingansheng.github.io/2017/01/13/CSS%E5%AE%9E%E7%8E%B0TAG/"/>
    <id>https://pingansheng.github.io/2017/01/13/CSS实现TAG/</id>
    <published>2017-01-13T02:42:35.000Z</published>
    <updated>2024-02-24T02:35:07.638Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>标签<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"pragma"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"cache-control"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"expires"</span> <span class="attr">content</span>=<span class="string">"0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line"></div><div class="line">    </div><div class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></div><div class="line">    /*标签css*/</div><div class="line"> </div><div class="line">    /*标签ul和li的实现*/</div><div class="line">    .tags &#123;</div><div class="line">        list-style-type:none;</div><div class="line">        float:left;</div><div class="line">        margin-left:10px;</div><div class="line">        margin-bottom:3px;</div><div class="line">    &#125;</div><div class="line">    /*连接a的实现，右侧的圆角实现，hover效果实现*/</div><div class="line">    .tags a&#123;</div><div class="line">        display:block;</div><div class="line">        text-decoration:none;</div><div class="line">        font-size:10px;</div><div class="line">        color:white;</div><div class="line">        background-color:#0089e0;</div><div class="line">        height:19px;</div><div class="line">        line-height:19px;</div><div class="line">        padding:0 10px 0 10px;</div><div class="line">        position:relative;</div><div class="line">        border-radius:0 5px 5px 0;</div><div class="line">    &#125;</div><div class="line">    .tags a:hover&#123;</div><div class="line">        background-color:#666;</div><div class="line">    &#125;</div><div class="line">     </div><div class="line">    /*左侧三角形的实现*/</div><div class="line">    .tags a:before&#123;</div><div class="line">        content:" ";</div><div class="line">        width:0px;</div><div class="line">        height:0px;</div><div class="line">        position:absolute;</div><div class="line">        top:0;</div><div class="line">        left:-19px;</div><div class="line">        border:10px solid transparent;</div><div class="line">        border-right-color:#0089e0;</div><div class="line">    &#125;</div><div class="line">    .tags  a:hover:before&#123;</div><div class="line">        border-color:transparent #666 transparent transparent;</div><div class="line">    &#125;</div><div class="line">     </div><div class="line">    /*小圆点的实现*/</div><div class="line">    .tags a:after&#123;</div><div class="line">        content:" ";</div><div class="line">        width:4px;</div><div class="line">        height:4px;</div><div class="line">        background-color:#fff;</div><div class="line">        border-radius:4px;</div><div class="line">        box-shadow:0px 0px 0px 1px rgba(0,0,0,.3);</div><div class="line">        position:absolute;</div><div class="line">        top:8px;</div><div class="line">        left:3px;</div><div class="line">    &#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"tags"</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> &gt;</span>tag<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"tags"</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> &gt;</span>tag<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"tags"</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> &gt;</span>tag<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"tags"</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> &gt;</span>tag<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"tags"</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> &gt;</span>tag<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"tags"</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> &gt;</span>tag<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div
    
    </summary>
    
      <category term="代码碎片" scheme="https://pingansheng.github.io/categories/%E4%BB%A3%E7%A0%81%E7%A2%8E%E7%89%87/"/>
    
    
      <category term="CSS" scheme="https://pingansheng.github.io/tags/CSS/"/>
    
      <category term="TAG" scheme="https://pingansheng.github.io/tags/TAG/"/>
    
  </entry>
  
  <entry>
    <title>MySQL性能优化（二）</title>
    <link href="https://pingansheng.github.io/2017/01/12/MySQL%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>https://pingansheng.github.io/2017/01/12/MySQL性能优化（二）/</id>
    <published>2017-01-12T07:48:28.000Z</published>
    <updated>2024-02-24T02:35:07.609Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MySQL分区表"><a href="#MySQL分区表" class="headerlink" title="MySQL分区表"></a>MySQL分区表</h1><h2 id="传统的分库分表"><a href="#传统的分库分表" class="headerlink" title="传统的分库分表"></a>传统的分库分表</h2><p>传统的分库分表都是通过应用层逻辑实现的，对于数据库层面来说，都是普通的表和库。</p>
<h3 id="分库"><a href="#分库" class="headerlink" title="分库"></a>分库</h3><h4 id="分库的原因"><a href="#分库的原因" class="headerlink" title="分库的原因"></a>分库的原因</h4><p>首先，在单台数据库服务器性能足够的情况下，分库对于数据库性能是没有影响的。在数据库存储上，<code>database</code>只起到一个<code>namespace</code>的作用。<code>database</code>中的表文件存储在一个以<code>database名</code>命名的文件夹中。比如下面的<code>employees</code>数据库：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">mysql&gt; show tables in employees;</div><div class="line">+---------------------+</div><div class="line">| Tables_in_employees |</div><div class="line">+---------------------+</div><div class="line">| departments         |</div><div class="line">| dept_emp            |</div><div class="line">| dept_manager        |</div><div class="line">| employees           |</div><div class="line">| salaries            |</div><div class="line">| titles              |</div><div class="line">+---------------------+</div></pre></td></tr></table></figure>
<p>在操作系统中看是这样的：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># haitian at haitian-coder.local in /usr/local/var/mysql/employees on git:master ● [21:19:47]</div><div class="line">→ ls  </div><div class="line">db.opt           dept_emp.frm     dept_manager.ibd salaries.frm     titles.ibd</div><div class="line">departments.frm  dept_emp.ibd     employees.frm    salaries.ibd</div><div class="line">departments.ibd  dept_manager.frm employees.ibd    titles.frm</div></pre></td></tr></table></figure>
<p><code>database</code>不是文件，只起到<code>namespace</code>的作用，所以<code>MySQL</code>对<code>database</code>大小当然也是没有限制的，而且对里面的表数量也没有限制。</p>
<blockquote>
<p>C.10.2 Limits on Number of Databases and Tables</p>
<p>MySQL has no limit on the number of databases. The underlying file<br>system may have a limit on the number of directories.</p>
<p>MySQL has no limit on the number of tables. The underlying file system<br>may have a limit on the number of files that represent tables.<br>Individual storage engines may impose engine-specific constraints.<br>InnoDB permits up to 4 billion tables.</p>
</blockquote>
<p>所以，为什么要分库呢？</p>
<p>答案是<strong>为了解决单台服务器的性能问题，当单台数据库服务器无法支撑当前的数据量时，就需要根据业务逻辑紧密程度把表分成几撮，分别放在不同的数据库服务器中以降低单台服务器的负载。</strong></p>
<p>分库一般考虑的是垂直切分，除非在垂直切分后，数据量仍然多到单台服务器无法负载，才继续水平切分。</p>
<p>比如一个论坛系统的数据库因当前服务器性能无法满足需要进行分库。先垂直切分，按业务逻辑把用户相关数据表比如用户信息、积分、用户间私信等放入user数据库；论坛相关数据表比如板块，帖子，回复等放入forum数据库，两个数据库放在不同服务器上。</p>
<p>拆分后表往往不可能完全无关联，比如帖子中的发帖人、回复人这些信息都在user数据库中。未拆分前可能一次联表查询就能获取当前帖子的回复、发帖人、回复人等所有信息，拆分后因为跨数据库无法联表查询，只能多次查询获得最终数据。</p>
<p>所以总结起来，<strong>分库的目的是降低单台服务器负载，切分原则是根据业务紧密程度拆分，缺点是跨数据库无法联表查询</strong>。</p>
<h3 id="分表"><a href="#分表" class="headerlink" title="分表"></a>分表</h3><h4 id="分表的原因"><a href="#分表的原因" class="headerlink" title="分表的原因"></a>分表的原因</h4><blockquote>
<p>当数据量超大的时候，B-Tree索引就无法起作用了。除非是索引覆盖查询，否则数据库服务器需要根据索引扫描的结果回表，查询所有符合条件的记录，如果数据量巨大，这将产生大量随机I/O，随之，数据库的响应时间将大到不可接受的程度。另外，索引维护（磁盘空间、I/O操作）的代价也非常高。</p>
</blockquote>
<h4 id="垂直分表"><a href="#垂直分表" class="headerlink" title="垂直分表"></a>垂直分表</h4><p><strong>原因：</strong></p>
<p>1.根据<a href="http://haitian299.github.io/2016/05/20/mysql-index-and-optimizing/" target="_blank" rel="noopener">MySQL索引实现原理及相关优化策略</a>的内容我们知道<code>Innodb</code>主索引叶子节点存储着当前行的所有信息，所以减少字段可使内存加载更多行数据，有利于查询。</p>
<p>2.受限于操作系统中的文件大小限制。</p>
<p><strong>切分原则：</strong><br>把不常用或业务逻辑不紧密或存储内容比较多的字段分到新的表中可使表存储更多数据。。</p>
<h4 id="水平分表"><a href="#水平分表" class="headerlink" title="水平分表"></a>水平分表</h4><p><strong>原因：</strong></p>
<p>1.随着数据量的增大，table行数巨大，查询的效率越来越低。</p>
<p>2.同样受限于操作系统中的文件大小限制，数据量不能无限增加，当到达一定容量时，需要水平切分以降低单表（文件）的大小。</p>
<p><strong>切分原则：</strong> 增量区间或散列或其他业务逻辑。</p>
<p>使用哪种切分方法要根据实际业务逻辑判断。</p>
<p>比如对表的访问多是近期产生的新数据，历史数据访问较少，可以考虑根据时间增量把数据按照一定时间段（比如每年）切分。</p>
<p>如果对表的访问较均匀，没有明显的热点区域，则可以考虑用范围（比如每500w一个表）或普通Hash或一致性Hash来切分。</p>
<p><strong>全局主键问题：</strong></p>
<p>原本依赖数据库生成主键（比如自增）的表在拆分后需要自己实现主键的生成，因为一般拆分规则是建立在主键上的，所以在插入新数据时需要确定主键后才能找到存储的表。</p>
<p>实际应用中也已经有了比较成熟的方案。比如对于自增列做主键的表，<code>flickr</code>的全局主键生成方案很好的解决了性能和单点问题，具体实现原理可以参考<a href="http://blog.csdn.net/bluishglc/article/details/7710738" target="_blank" rel="noopener">这个帖子</a>。除此之外，还有类似于uuid的全局主键生成方案，比如<a href="http://www.infoq.com/cn/articles/imdada-high-performance-server-optimization" target="_blank" rel="noopener">达达参考的<code>Instagram</code>的ID生成器</a>。</p>
<p><strong>一致性Hash：</strong></p>
<p>使用一致性Hash切分比普通的Hash切分可扩展性更强，可以实现拆分表的添加和删除。一致性Hash的具体原理可以参考<a href="http://blog.csdn.net/cywosp/article/details/23397179" target="_blank" rel="noopener">这个帖子</a>，如果拆分后的表存储在不同服务器节点上，可以跟帖子一样对节点名或ip取Hash；如果拆分后的表存在一个服务器中则可对拆分后的表名取Hash。</p>
<h2 id="MySQL的分区表"><a href="#MySQL的分区表" class="headerlink" title="MySQL的分区表"></a>MySQL的分区表</h2><p>上面介绍的传统的分库分表都是在应用层实现，拆分后都要对原有系统进行很大的调整以适应新拆分后的库或表，比如实现一个<code>SQL</code>中间件、原本的联表查询改成两次查询、实现一个全局主键生成器等等。</p>
<p>而下面介绍的<code>MySQL</code>分区表是在数据库层面，<code>MySQL</code>自己实现的水平分表功能，在很大程度上简化了分表的难度。</p>
<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><blockquote>
<p>对用户来说，分区表是一个独立的逻辑表，但是底层由多个物理子表实现。</p>
</blockquote>
<p>也就是说，对于原表分区后，对于应用层来说可以不做变化，我们无需改变原有的<code>SQL</code>语句，相当于<code>MySQL</code>帮我们实现了传统分表后的<code>SQL</code>中间件，当然，<code>MySQL</code>的分区表的实现要复杂很多。</p>
<p>另外，在创建分区时可以指定分区的索引文件和数据文件的存储位置，所以可以把数据表的数据分布在不同的物理设备上，从而高效地利用多个硬件设备。</p>
<p>一些限制：</p>
<p>1.在5.6.7之前的版本，一个表最多有<code>1024</code>个分区；从5.6.7开始，一个表最多可以有<code>8192</code>个分区。</p>
<p>2.分区表中无法使用外键约束。</p>
<p>3.主表的所有唯一索引列（包括主键）都必须包含分区字段。<code>MySQL</code>官方文档中写的是： </p>
<blockquote>
<p>All columns used in the partitioning expression for a partitioned<br>table must be part of every unique key that the table may have.</p>
</blockquote>
<p>这句话不是很好理解，需要通过例子才能明白，<code>MySQL</code>官方文档也为此限制特意做了<a href="http://dev.mysql.com/doc/refman/5.7/en/partitioning-limitations-partitioning-keys-unique-keys.html" target="_blank" rel="noopener">举例和解释</a>。</p>
<h3 id="分区表的类型"><a href="#分区表的类型" class="headerlink" title="分区表的类型"></a>分区表的类型</h3><h4 id="RANGE分区"><a href="#RANGE分区" class="headerlink" title="RANGE分区"></a>RANGE分区</h4><p>根据范围分区，范围应该连续但是不重叠，使用<code>PARTITION BY RANGE</code>, <code>VALUES LESS THAN</code>关键字。不使用<code>COLUMNS</code>关键字时<code>RANGE</code>括号内必须为整数字段名或返回确定整数的函数。</p>
<p>根据数值范围：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE employees (</div><div class="line">    id INT NOT NULL,</div><div class="line">    fname VARCHAR(30),</div><div class="line">    lname VARCHAR(30),</div><div class="line">    hired DATE NOT NULL DEFAULT &apos;1970-01-01&apos;,</div><div class="line">    separated DATE NOT NULL DEFAULT &apos;9999-12-31&apos;,</div><div class="line">    job_code INT NOT NULL,</div><div class="line">    store_id INT NOT NULL</div><div class="line">)</div><div class="line">PARTITION BY RANGE (store_id) (</div><div class="line">    PARTITION p0 VALUES LESS THAN (6),</div><div class="line">    PARTITION p1 VALUES LESS THAN (11),</div><div class="line">    PARTITION p2 VALUES LESS THAN (16),</div><div class="line">    PARTITION p3 VALUES LESS THAN MAXVALUE</div><div class="line">);</div></pre></td></tr></table></figure>
<p>根据<code>TIMESTAMP</code>范围：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE quarterly_report_status (</div><div class="line">    report_id INT NOT NULL,</div><div class="line">    report_status VARCHAR(20) NOT NULL,</div><div class="line">    report_updated TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP</div><div class="line">)</div><div class="line">PARTITION BY RANGE ( UNIX_TIMESTAMP(report_updated) ) (</div><div class="line">    PARTITION p0 VALUES LESS THAN ( UNIX_TIMESTAMP(&apos;2008-01-01 00:00:00&apos;) ),</div><div class="line">    PARTITION p1 VALUES LESS THAN ( UNIX_TIMESTAMP(&apos;2008-04-01 00:00:00&apos;) ),</div><div class="line">    PARTITION p2 VALUES LESS THAN ( UNIX_TIMESTAMP(&apos;2008-07-01 00:00:00&apos;) ),</div><div class="line">    PARTITION p3 VALUES LESS THAN ( UNIX_TIMESTAMP(&apos;2008-10-01 00:00:00&apos;) ),</div><div class="line">    PARTITION p4 VALUES LESS THAN ( UNIX_TIMESTAMP(&apos;2009-01-01 00:00:00&apos;) ),</div><div class="line">    PARTITION p5 VALUES LESS THAN ( UNIX_TIMESTAMP(&apos;2009-04-01 00:00:00&apos;) ),</div><div class="line">    PARTITION p6 VALUES LESS THAN ( UNIX_TIMESTAMP(&apos;2009-07-01 00:00:00&apos;) ),</div><div class="line">    PARTITION p7 VALUES LESS THAN ( UNIX_TIMESTAMP(&apos;2009-10-01 00:00:00&apos;) ),</div><div class="line">    PARTITION p8 VALUES LESS THAN ( UNIX_TIMESTAMP(&apos;2010-01-01 00:00:00&apos;) ),</div><div class="line">    PARTITION p9 VALUES LESS THAN (MAXVALUE)</div><div class="line">);</div></pre></td></tr></table></figure>
<p>添加<code>COLUMNS</code>关键字可定义非integer范围及多列范围，不过需要注意<code>COLUMNS</code>括号内只能是列名，不支持函数；多列范围时，多列范围必须呈递增趋势：</p>
<p>根据<code>DATE</code>、<code>DATETIME</code>范围：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE members (</div><div class="line">    firstname VARCHAR(25) NOT NULL,</div><div class="line">    lastname VARCHAR(25) NOT NULL,</div><div class="line">    username VARCHAR(16) NOT NULL,</div><div class="line">    email VARCHAR(35),</div><div class="line">    joined DATE NOT NULL</div><div class="line">)</div><div class="line">PARTITION BY RANGE COLUMNS(joined) (</div><div class="line">    PARTITION p0 VALUES LESS THAN (&apos;1960-01-01&apos;),</div><div class="line">    PARTITION p1 VALUES LESS THAN (&apos;1970-01-01&apos;),</div><div class="line">    PARTITION p2 VALUES LESS THAN (&apos;1980-01-01&apos;),</div><div class="line">    PARTITION p3 VALUES LESS THAN (&apos;1990-01-01&apos;),</div><div class="line">    PARTITION p4 VALUES LESS THAN MAXVALUE</div><div class="line">);</div></pre></td></tr></table></figure>
<p>根据多列范围：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE rc3 (</div><div class="line">    a INT,</div><div class="line">    b INT</div><div class="line">)</div><div class="line">PARTITION BY RANGE COLUMNS(a,b) (</div><div class="line">    PARTITION p0 VALUES LESS THAN (0,10),</div><div class="line">    PARTITION p1 VALUES LESS THAN (10,20),</div><div class="line">    PARTITION p2 VALUES LESS THAN (10,30),</div><div class="line">    PARTITION p3 VALUES LESS THAN (10,35),</div><div class="line">    PARTITION p4 VALUES LESS THAN (20,40),</div><div class="line">    PARTITION p5 VALUES LESS THAN (MAXVALUE,MAXVALUE)</div><div class="line"> );</div></pre></td></tr></table></figure>
<h4 id="List分区"><a href="#List分区" class="headerlink" title="List分区"></a>List分区</h4><p>根据具体数值分区，每个分区数值不重叠，使用<code>PARTITION BY LIST</code>、<code>VALUES IN</code>关键字。跟<code>Range</code>分区类似，不使用<code>COLUMNS</code>关键字时<code>List</code>括号内必须为整数字段名或返回确定整数的函数。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE employees (</div><div class="line">    id INT NOT NULL,</div><div class="line">    fname VARCHAR(30),</div><div class="line">    lname VARCHAR(30),</div><div class="line">    hired DATE NOT NULL DEFAULT &apos;1970-01-01&apos;,</div><div class="line">    separated DATE NOT NULL DEFAULT &apos;9999-12-31&apos;,</div><div class="line">    job_code INT,</div><div class="line">    store_id INT</div><div class="line">)</div><div class="line">PARTITION BY LIST(store_id) (</div><div class="line">    PARTITION pNorth VALUES IN (3,5,6,9,17),</div><div class="line">    PARTITION pEast VALUES IN (1,2,10,11,19,20),</div><div class="line">    PARTITION pWest VALUES IN (4,12,13,14,18),</div><div class="line">    PARTITION pCentral VALUES IN (7,8,15,16)</div><div class="line">);</div></pre></td></tr></table></figure>
<p>数值必须被所有分区覆盖，否则插入一个不属于任何一个分区的数值会报错。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">mysql&gt; CREATE TABLE h2 (</div><div class="line">    -&gt;   c1 INT,</div><div class="line">    -&gt;   c2 INT</div><div class="line">    -&gt; )</div><div class="line">    -&gt; PARTITION BY LIST(c1) (</div><div class="line">    -&gt;   PARTITION p0 VALUES IN (1, 4, 7),</div><div class="line">    -&gt;   PARTITION p1 VALUES IN (2, 5, 8)</div><div class="line">    -&gt; );</div><div class="line">Query OK, 0 rows affected (0.11 sec)</div><div class="line"></div><div class="line">mysql&gt; INSERT INTO h2 VALUES (3, 5);</div><div class="line">ERROR 1525 (HY000): Table has no partition for value 3</div></pre></td></tr></table></figure>
<p>当插入多条数据出错时，如果表的引擎支持事务（<code>Innodb</code>），则不会插入任何数据；如果不支持事务，则出错前的数据会插入，后面的不会执行。</p>
<p>可以使用<code>IGNORE</code>关键字忽略出错的数据，这样其他符合条件的数据会全部插入不受影响。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">mysql&gt; TRUNCATE h2;</div><div class="line">Query OK, 1 row affected (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; SELECT * FROM h2;</div><div class="line">Empty set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; INSERT IGNORE INTO h2 VALUES (2, 5), (6, 10), (7, 5), (3, 1), (1, 9);</div><div class="line">Query OK, 3 rows affected (0.00 sec)</div><div class="line">Records: 5  Duplicates: 2  Warnings: 0</div><div class="line"></div><div class="line">mysql&gt; SELECT * FROM h2;</div><div class="line">+------+------+</div><div class="line">| c1   | c2   |</div><div class="line">+------+------+</div><div class="line">|    7 |    5 |</div><div class="line">|    1 |    9 |</div><div class="line">|    2 |    5 |</div><div class="line">+------+------+</div><div class="line">3 rows in set (0.00 sec)</div></pre></td></tr></table></figure>
<p>与<code>Range</code>分区相同，添加<code>COLUMNS</code>关键字可支持非整数和多列。</p>
<h4 id="Hash分区"><a href="#Hash分区" class="headerlink" title="Hash分区"></a>Hash分区</h4><p><code>Hash</code>分区主要用来确保数据在预先确定数目的分区中平均分布，<code>Hash</code>括号内只能是整数列或返回确定整数的函数，实际上就是使用返回的整数对分区数取模。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE employees (</div><div class="line">    id INT NOT NULL,</div><div class="line">    fname VARCHAR(30),</div><div class="line">    lname VARCHAR(30),</div><div class="line">    hired DATE NOT NULL DEFAULT &apos;1970-01-01&apos;,</div><div class="line">    separated DATE NOT NULL DEFAULT &apos;9999-12-31&apos;,</div><div class="line">    job_code INT,</div><div class="line">    store_id INT</div><div class="line">)</div><div class="line">PARTITION BY HASH(store_id)</div><div class="line">PARTITIONS 4;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE employees (</div><div class="line">    id INT NOT NULL,</div><div class="line">    fname VARCHAR(30),</div><div class="line">    lname VARCHAR(30),</div><div class="line">    hired DATE NOT NULL DEFAULT &apos;1970-01-01&apos;,</div><div class="line">    separated DATE NOT NULL DEFAULT &apos;9999-12-31&apos;,</div><div class="line">    job_code INT,</div><div class="line">    store_id INT</div><div class="line">)</div><div class="line">PARTITION BY HASH( YEAR(hired) )</div><div class="line">PARTITIONS 4;</div></pre></td></tr></table></figure>
<p><code>Hash</code>分区也存在与传统<code>Hash</code>分表一样的问题，可扩展性差。<code>MySQL</code>也提供了一个类似于一致<code>Hash</code>的分区方法－线性<code>Hash</code>分区，只需要在定义分区时添加<code>LINEAR</code>关键字，如果对实现原理感兴趣，可以查看<a href="http://dev.mysql.com/doc/refman/5.7/en/partitioning-linear-hash.html" target="_blank" rel="noopener">官方文档</a>。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE employees (</div><div class="line">    id INT NOT NULL,</div><div class="line">    fname VARCHAR(30),</div><div class="line">    lname VARCHAR(30),</div><div class="line">    hired DATE NOT NULL DEFAULT &apos;1970-01-01&apos;,</div><div class="line">    separated DATE NOT NULL DEFAULT &apos;9999-12-31&apos;,</div><div class="line">    job_code INT,</div><div class="line">    store_id INT</div><div class="line">)</div><div class="line">PARTITION BY LINEAR HASH( YEAR(hired) )</div><div class="line">PARTITIONS 4;</div></pre></td></tr></table></figure>
<h4 id="Key分区"><a href="#Key分区" class="headerlink" title="Key分区"></a>Key分区</h4><blockquote>
<p>按照KEY进行分区类似于按照HASH分区，除了HASH分区使用的用户定义的表达式，而KEY分区的 哈希函数是由MySQL<br>服务器提供。MySQL 簇（Cluster）使用函数MD5()来实现KEY分区；对于使用其他存储引擎的表，服务器使用其自己内部的<br>哈希函数，这些函数是基于与PASSWORD()一样的运算法则。</p>
</blockquote>
<p><code>Key</code>分区与<code>Hash</code>分区很相似，只是<code>Hash</code>函数不同，定义时把<code>Hash</code>关键字替换成<code>Key</code>即可，同样<code>Key</code>分区也有对应与线性<code>Hash</code>的线性<code>Key</code>分区方法。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE tk (</div><div class="line">    col1 INT NOT NULL,</div><div class="line">    col2 CHAR(5),</div><div class="line">    col3 DATE</div><div class="line">)</div><div class="line">PARTITION BY LINEAR KEY (col1)</div><div class="line">PARTITIONS 3;</div></pre></td></tr></table></figure>
<p>另外，当表存在主键或唯一索引时可省略<code>Key</code>括号内的列名，<code>Mysql</code>将按照主键－唯一索引的顺序选择，当找不到唯一索引时报错。</p>
<h4 id="子分区"><a href="#子分区" class="headerlink" title="子分区"></a>子分区</h4><p>子分区是分区表中每个分区的再次分割。创建子分区方法：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE ts (id INT, purchased DATE)</div><div class="line">    PARTITION BY RANGE( YEAR(purchased) )</div><div class="line">    SUBPARTITION BY HASH( TO_DAYS(purchased) )</div><div class="line">    SUBPARTITIONS 2 (</div><div class="line">        PARTITION p0 VALUES LESS THAN (1990),</div><div class="line">        PARTITION p1 VALUES LESS THAN (2000),</div><div class="line">        PARTITION p2 VALUES LESS THAN MAXVALUE</div><div class="line">    );</div></pre></td></tr></table></figure>
<p>和</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE ts (id INT, purchased DATE)</div><div class="line">    PARTITION BY RANGE( YEAR(purchased) )</div><div class="line">    SUBPARTITION BY HASH( TO_DAYS(purchased) ) (</div><div class="line">        PARTITION p0 VALUES LESS THAN (1990) (</div><div class="line">            SUBPARTITION s0</div><div class="line">                DATA DIRECTORY = &apos;/disk0/data&apos;</div><div class="line">                INDEX DIRECTORY = &apos;/disk0/idx&apos;,</div><div class="line">            SUBPARTITION s1</div><div class="line">                DATA DIRECTORY = &apos;/disk1/data&apos;</div><div class="line">                INDEX DIRECTORY = &apos;/disk1/idx&apos;</div><div class="line">        ),</div><div class="line">        PARTITION p1 VALUES LESS THAN (2000) (</div><div class="line">            SUBPARTITION s2</div><div class="line">                DATA DIRECTORY = &apos;/disk2/data&apos;</div><div class="line">                INDEX DIRECTORY = &apos;/disk2/idx&apos;,</div><div class="line">            SUBPARTITION s3</div><div class="line">                DATA DIRECTORY = &apos;/disk3/data&apos;</div><div class="line">                INDEX DIRECTORY = &apos;/disk3/idx&apos;</div><div class="line">        ),</div><div class="line">        PARTITION p2 VALUES LESS THAN MAXVALUE (</div><div class="line">            SUBPARTITION s4</div><div class="line">                DATA DIRECTORY = &apos;/disk4/data&apos;</div><div class="line">                INDEX DIRECTORY = &apos;/disk4/idx&apos;,</div><div class="line">            SUBPARTITION s5</div><div class="line">                DATA DIRECTORY = &apos;/disk5/data&apos;</div><div class="line">                INDEX DIRECTORY = &apos;/disk5/idx&apos;</div><div class="line">        )</div><div class="line">    );</div></pre></td></tr></table></figure>
<p>需要注意的是：每个分区的子分区数必须相同。如果在一个分区表上的任何分区上使用<code>SUBPARTITION</code>来明确定义任何子分区，那么就必须定义所有的子分区，且必须指定一个全表唯一的名字。</p>
<h3 id="分区表的使用及查询优化"><a href="#分区表的使用及查询优化" class="headerlink" title="分区表的使用及查询优化"></a>分区表的使用及查询优化</h3><h4 id="根据实际情况选择分区方法"><a href="#根据实际情况选择分区方法" class="headerlink" title="根据实际情况选择分区方法"></a>根据实际情况选择分区方法</h4><p>对现有表分区的原则与传统分表一样。</p>
<p>传统的按照增量区间分表对应于分区的<code>Range</code>分区，比如对表的访问多是近期产生的新数据，历史数据访问较少，则可以按一定时间段（比如年或月）或一定数量（比如100万）对表分区，具体根据哪种取决于表索引结构。分区后最后一个分区即为近期产生的数据，当一段时间过后数据量再次变大，可对最后一个分区重新分区（<code>REORGANIZE PARTITION</code>）把一段时间（一年或一月）或一定数量（比如100万）的数据分离出去。</p>
<p>传统的散列方法分表对应于分区的Hash／Key分区，具体方法上面已经介绍过。</p>
<h4 id="查询优化"><a href="#查询优化" class="headerlink" title="查询优化"></a>查询优化</h4><p>分区的目的是为了提高查询效率，如果查询范围是所有分区那么就说明分区没有起到作用，我们用<code>explain partitions</code>命令来查看<code>SQL</code>对于分区的使用情况。</p>
<p>一般来说，就是在<code>where</code>条件中加入分区列。</p>
<p>比如表<code>salaries</code>结构为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">mysql&gt; show create table salaries\G;</div><div class="line">*************************** 1. row ***************************</div><div class="line">       Table: salaries</div><div class="line">Create Table: CREATE TABLE `salaries` (</div><div class="line">  `emp_no` int(11) NOT NULL,</div><div class="line">  `salary` int(11) NOT NULL,</div><div class="line">  `from_date` date NOT NULL,</div><div class="line">  `to_date` date NOT NULL,</div><div class="line">  PRIMARY KEY (`emp_no`,`from_date`)</div><div class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8</div><div class="line">/*!50100 PARTITION BY RANGE (year(from_date))</div><div class="line">(PARTITION p1 VALUES LESS THAN (1985) ENGINE = InnoDB,</div><div class="line"> PARTITION p2 VALUES LESS THAN (1986) ENGINE = InnoDB,</div><div class="line"> PARTITION p3 VALUES LESS THAN (1987) ENGINE = InnoDB,</div><div class="line"> PARTITION p4 VALUES LESS THAN (1988) ENGINE = InnoDB,</div><div class="line"> PARTITION p5 VALUES LESS THAN (1989) ENGINE = InnoDB,</div><div class="line"> PARTITION p6 VALUES LESS THAN (1990) ENGINE = InnoDB,</div><div class="line"> PARTITION p7 VALUES LESS THAN (1991) ENGINE = InnoDB,</div><div class="line"> PARTITION p8 VALUES LESS THAN (1992) ENGINE = InnoDB,</div><div class="line"> PARTITION p9 VALUES LESS THAN (1993) ENGINE = InnoDB,</div><div class="line"> PARTITION p10 VALUES LESS THAN (1994) ENGINE = InnoDB,</div><div class="line"> PARTITION p11 VALUES LESS THAN (1995) ENGINE = InnoDB,</div><div class="line"> PARTITION p12 VALUES LESS THAN (1996) ENGINE = InnoDB,</div><div class="line"> PARTITION p13 VALUES LESS THAN (1997) ENGINE = InnoDB,</div><div class="line"> PARTITION p14 VALUES LESS THAN (1998) ENGINE = InnoDB,</div><div class="line"> PARTITION p15 VALUES LESS THAN (1999) ENGINE = InnoDB,</div><div class="line"> PARTITION p16 VALUES LESS THAN (2000) ENGINE = InnoDB,</div><div class="line"> PARTITION p17 VALUES LESS THAN (2001) ENGINE = InnoDB,</div><div class="line"> PARTITION p18 VALUES LESS THAN MAXVALUE ENGINE = InnoDB) */</div></pre></td></tr></table></figure>
<p>则下面的查询没有利用分区，因为<code>partitions</code>中包含了所有的分区：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">mysql&gt; explain partitions select * from salaries where salary &gt; 100000\G;</div><div class="line">*************************** 1. row ***************************</div><div class="line">           id: 1</div><div class="line">  select_type: SIMPLE</div><div class="line">        table: salaries</div><div class="line">   partitions: p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18</div><div class="line">         type: ALL</div><div class="line">possible_keys: NULL</div><div class="line">          key: NULL</div><div class="line">      key_len: NULL</div><div class="line">          ref: NULL</div><div class="line">         rows: 2835486</div><div class="line">        Extra: Using where</div></pre></td></tr></table></figure>
<p>只有在<code>where</code>条件中加入分区列才能起到作用，过滤掉不需要的分区：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">mysql&gt; explain partitions select * from salaries where salary &gt; 100000 and from_date &gt; &apos;1998-01-01&apos;\G;</div><div class="line">*************************** 1. row ***************************</div><div class="line">           id: 1</div><div class="line">  select_type: SIMPLE</div><div class="line">        table: salaries</div><div class="line">   partitions: p15,p16,p17,p18</div><div class="line">         type: ALL</div><div class="line">possible_keys: NULL</div><div class="line">          key: NULL</div><div class="line">      key_len: NULL</div><div class="line">          ref: NULL</div><div class="line">         rows: 1152556</div><div class="line">        Extra: Using where</div></pre></td></tr></table></figure>
<p>与普通搜索一样，在运算符左侧使用函数将使分区过滤失效，即使与分区函数想同也一样：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">mysql&gt; explain partitions select * from salaries where salary &gt; 100000 and year(from_date) &gt; 1998\G;</div><div class="line">*************************** 1. row ***************************</div><div class="line">           id: 1</div><div class="line">  select_type: SIMPLE</div><div class="line">        table: salaries</div><div class="line">   partitions: p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18</div><div class="line">         type: ALL</div><div class="line">possible_keys: NULL</div><div class="line">          key: NULL</div><div class="line">      key_len: NULL</div><div class="line">          ref: NULL</div><div class="line">         rows: 2835486</div><div class="line">        Extra: Using where</div></pre></td></tr></table></figure>
<h2 id="分区和分表的比较"><a href="#分区和分表的比较" class="headerlink" title="分区和分表的比较"></a>分区和分表的比较</h2><ul>
<li>传统分表后，<code>count</code>、<code>sum</code>等统计操作只能对所有切分表进行操作后之后在应用层再次计算得出最后统计数据。而分区表则不受影响，可直接统计。</li>
</ul>
<blockquote>
<p>Queries involving aggregate functions such as SUM() and COUNT() can easily be parallelized. A simple example of such a query might be SELECT salesperson_id, COUNT(orders) as order_total FROM sales GROUP BY salesperson_id;. By “parallelized,” we mean that the query can be run simultaneously on each partition, and the final result obtained merely by summing the results obtained for all partitions.</p>
</blockquote>
<ul>
<li><p>分区对原系统改动最小，分区只涉及数据库层面，应用层不需要做出改动。</p>
</li>
<li><p>分区有个限制是主表的所有唯一字段（包括主键）必须包含分区字段，而分表没有这个限制。</p>
</li>
<li><p>分表包括垂直切分和水平切分，而分区只能起到水平切分的作用。</p>
</li>
</ul>
<p>  注：转自<a href="http://haitian299.github.io/2016/05/26/mysql-partitioning/" target="_blank" rel="noopener">haitian blog</a>, 基础上进行补充   </p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;MySQL分区表&quot;&gt;&lt;a href=&quot;#MySQL分区表&quot; class=&quot;headerlink&quot; title=&quot;MySQL分区表&quot;&gt;&lt;/a&gt;MySQL分区表&lt;/h1&gt;&lt;h2 id=&quot;传统的分库分表&quot;&gt;&lt;a href=&quot;#传统的分库分表&quot; class=&quot;header
    
    </summary>
    
      <category term="DB" scheme="https://pingansheng.github.io/categories/DB/"/>
    
    
      <category term="DB" scheme="https://pingansheng.github.io/tags/DB/"/>
    
      <category term="MySQL性能优化" scheme="https://pingansheng.github.io/tags/MySQL%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>JS关闭窗口提示</title>
    <link href="https://pingansheng.github.io/2017/01/11/JS%E5%85%B3%E9%97%AD%E7%AA%97%E5%8F%A3%E6%8F%90%E7%A4%BA/"/>
    <id>https://pingansheng.github.io/2017/01/11/JS关闭窗口提示/</id>
    <published>2017-01-11T02:28:42.000Z</published>
    <updated>2024-02-24T02:35:07.580Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="comment">// 关闭窗口时弹出确认提示</span></div><div class="line">    $(<span class="built_in">window</span>).bind(<span class="string">'beforeunload'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="comment">// 只有在标识变量is_confirm不为false时，才弹出确认提示</span></div><div class="line">        <span class="keyword">if</span>(<span class="built_in">window</span>.is_confirm !== <span class="literal">false</span>)</div><div class="line">            <span class="keyword">return</span> <span class="string">'您可能有数据没有保存'</span>;</div><div class="line">    &#125;)</div><div class="line">    <span class="comment">// mouseleave mouseover事件也可以注册在body、外层容器等元素上</span></div><div class="line">    .bind(<span class="string">'mouseover mouseleave'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</div><div class="line">        is_confirm = event.type == <span class="string">'mouseleave'</span>;</div><div class="line">    &#125;);</div><div class="line">&#125;)();</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;
    
    </summary>
    
      <category term="代码碎片" scheme="https://pingansheng.github.io/categories/%E4%BB%A3%E7%A0%81%E7%A2%8E%E7%89%87/"/>
    
    
      <category term="关闭窗口提示" scheme="https://pingansheng.github.io/tags/%E5%85%B3%E9%97%AD%E7%AA%97%E5%8F%A3%E6%8F%90%E7%A4%BA/"/>
    
      <category term="JS" scheme="https://pingansheng.github.io/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>MySQL性能优化（一）</title>
    <link href="https://pingansheng.github.io/2017/01/10/MySQL%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://pingansheng.github.io/2017/01/10/MySQL性能优化（一）/</id>
    <published>2017-01-10T08:06:19.000Z</published>
    <updated>2024-02-24T02:35:07.499Z</updated>
    
    <content type="html"><![CDATA[<h1 id="认识与开始"><a href="#认识与开始" class="headerlink" title="认识与开始"></a>认识与开始</h1><h2 id="认识慢查询"><a href="#认识慢查询" class="headerlink" title="认识慢查询"></a>认识慢查询</h2><p><img src="/2017/01/10/MySQL性能优化（一）/mysqlQueryFlow.png" alt="MySQL的查询执行流程" title="MySQL的查询执行流程"></p>
<p>对于一个业务查询来说， 性能问题的直观反映是响应时间，对于一个任务来说分析的主要方法就是拆分任务为子任务，找到慢的子任务。<br>对于一个慢查询来说，在不关注服务器当前的CPU、网络等因素的前提下，响应时间高主要分析以下几个方面:</p>
<ol>
<li>是不是请求了过多的数据</li>
<li>查询是否扫描了额外不相关的数据</li>
</ol>
<h3 id="开始检测慢查询"><a href="#开始检测慢查询" class="headerlink" title="开始检测慢查询"></a>开始检测慢查询</h3><p>MySQL较新的版本已经内置提取慢查询的功能：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#long_query_time用于定义慢查询的响应时间阀值，单位秒，</span></div><div class="line">mysql&gt; show variables like <span class="string">'long%'</span>;</div><div class="line"></div><div class="line">+-----------------+-----------+</div><div class="line">| Variable_name   | Value     |</div><div class="line">+-----------------+-----------+</div><div class="line">| long_query_time | <span class="number">10.000000</span> |</div><div class="line">+-----------------+-----------+</div><div class="line"><span class="number">1</span> row <span class="keyword">in</span> set (<span class="number">0.00</span> sec)</div><div class="line"></div><div class="line"><span class="comment">#查看是否打开查询日志记录与日志文件</span></div><div class="line">mysql&gt; SHOW VARIABLES LIKE <span class="string">'slow%'</span>;</div><div class="line">+---------------------+-------------------------------+</div><div class="line">| Variable_name       | Value                         |</div><div class="line">+---------------------+-------------------------------+</div><div class="line">| slow_launch_time    | <span class="number">2</span>                             |</div><div class="line">| slow_query_log      | OFF                            |</div><div class="line">| slow_query_log_file | /var/lib/mysql/node1-slow.log |</div><div class="line">+---------------------+-------------------------------+</div><div class="line"><span class="number">3</span> rows <span class="keyword">in</span> set (<span class="number">0.01</span> sec)</div><div class="line"></div><div class="line"><span class="comment">#打开记录开关</span></div><div class="line">SET GLOBAL slow_query_log=<span class="string">'ON'</span></div><div class="line"></div><div class="line"><span class="comment">#测试</span></div><div class="line">SELECT SLEEP(<span class="number">10</span>)</div><div class="line"></div><div class="line"><span class="comment">#查看日志文件</span></div><div class="line">cat /var/lib/mysql/node1-slow.log</div><div class="line"></div><div class="line">usr/sbin/mysqld, Version: <span class="number">5.6</span><span class="number">.21</span> (MySQL Community Server (GPL)). started with:</div><div class="line">Tcp port: <span class="number">3306</span>  Unix socket: /var/lib/mysql/mysql.sock</div><div class="line">Time                 Id Command    Argument</div><div class="line"><span class="comment"># Time: 170110 15:12:48</span></div><div class="line"><span class="comment"># User@Host: root[root] @  [127.0.0.1]  Id: 98122</span></div><div class="line"><span class="comment"># Query_time: 10.317485  Lock_time: 0.000000 Rows_sent: 1  Rows_examined: 0</span></div><div class="line">use db_1;</div><div class="line">SET timestamp=<span class="number">1484032368</span>;</div><div class="line">select sleep(<span class="number">10</span>);</div><div class="line"></div><div class="line"><span class="comment">#记录开启成功</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#mysqldumpslow 命令方便的查看慢查询</span></div><div class="line">mysqldumpslow -s c -t <span class="number">10</span> /tmp/slow-log</div><div class="line"><span class="comment">#-s, 是表示按照何种方式排序，c、t、l、r分别是按照记录次数、时间、查询时间、返回的记录数来排序，ac、at、al、ar，表示相应的倒序；</span></div><div class="line"><span class="comment">#-t 返回记录数</span></div><div class="line"><span class="comment">#-g "exp" 按照参数字符串对查询进行过滤</span></div></pre></td></tr></table></figure>
<h3 id="开始分析慢查询"><a href="#开始分析慢查询" class="headerlink" title="开始分析慢查询"></a>开始分析慢查询</h3><p>官方提供Explain命令用以分析MySQL对于SELECT的执行计划。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">Explain</span> <span class="keyword">select</span> * <span class="keyword">from</span> xxx</div></pre></td></tr></table></figure>
<p>返回结果包含内容：</p>
<ul>
<li><p>id: 查询编号</p>
</li>
<li><p>select_type: 查询的具体类型，详见<a href="http://dev.mysql.com/doc/refman/5.7/en/explain-output.html#explain_select_type" target="_blank" rel="noopener">点击</a></p>
</li>
<li><p>table: 该查询所引用的表</p>
</li>
<li><p>partitions: 该查询匹配到的分区</p>
</li>
<li><p>type: 表示这个表是如何组织到查询中或表是如何进行关联的</p>
<ul>
<li>system: 该表只有一行数据</li>
<li>const: 最多只有一行匹配的数据，在指定使用主键或唯一索引时候，该表的数据则作为常量使用</li>
<li><p>eq_ref: 对于每个来自于前面的表的行组合，从该表中读取一行。</p>
<p>  <code>select * from t_order a,t_order_ext b where a.order_id=b.order_id;</code></p>
</li>
<li><p>ref: 对于每个来自于前面的表的行组合，所有有匹配索引值的行将从这张表中读取。</p>
<p>  <code>select * from t_order a,t_order_ext b where a.order_id=b.order_id and a.order_id=100;</code></p>
</li>
<li>fulltext: 查询使用了一个全文索引</li>
<li><p>ref_or_null: 类似ref，但是MySQL特意为可以为空的字段进行了空值的查询（字段尽量不为空）</p>
<p>  <code>select * from t_order where user_id=100 or user_id is null;</code></p>
</li>
<li>index_merge: 表示使用了索引合并优化方法</li>
<li><p>unique_subquery: 该类型替换了类似以下IN子查询的 eq_ref: </p>
<p>  <code>value IN (SELECT primary_key FROM single_table WHERE some_expr)</code></p>
</li>
<li><p>index_subquery: 该联接类型类似于unique_subquery。可以替换IN子查询，但只适合下列形式的子查询中的非唯一索引：</p>
<p>  <code>value IN (SELECT key_column FROM single_table WHERE some_expr)</code></p>
</li>
<li>range: 只检索给定范围的行，用一个索引来选择行</li>
<li>index: 类似ALL,除了索引树被扫描了：<ul>
<li>i：索引覆盖了整个查询，这样的话只扫描索引树就可以返回结果而不需要扫描数据，此时Extra 显示Using index.</li>
<li>ii: 读取了索引的内容用以进行全表扫描，此时Extra没有Uses index</li>
</ul>
</li>
<li><p>ALL: 完整的扫描全表，最慢的联接类型，尽可能的避免</p>
<p>  <code>select * from xxx</code></p>
</li>
</ul>
</li>
<li><p>possible_keys: 可能使用到的索引，不一定真正使用到，但如果是NULL则代表无索引可用，需要优化</p>
</li>
<li><p>key: MySQL决定在查询中真正使用的索引，有可能不存在于possible_keys中，原因是此时发现possible_keys中的索引无助于更快的查询，但是所查询的列却完全包含在其他索引中</p>
</li>
<li><p>key_len: 决定使用索引的长度</p>
</li>
<li><p>ref: 那些列或者常量需要和使用到的索引进行比较</p>
</li>
<li><p>rows: MySQL认为的需要完成查询必须检查的行数</p>
</li>
<li><p>filtered: 表示在该查询条件下能够过滤掉数据行数的百分比（实际行数=rows*filtered/100） 5.7.3之前版本需要使用EXTENDED参数才显示，</p>
</li>
<li><p>Extra: 显示关于此查询额外的信息</p>
<ul>
<li>Child of ‘table’ pushed join@1: 只在集群模式下存在</li>
<li>const row not found: 查询的表为空</li>
<li>Deleting all rows: 对于DELETE语句使用，表示MySQL使用一种快速删除所有数据的方式</li>
<li>Distinct: MySQL发现第1个匹配行后,停止为当前的行组合搜索更多的行</li>
<li>FirstMatch(tbl_name): 一种semi-join简化策略用在了表上</li>
<li>Full scan on NULL key: 子查询优化退化策略，此时优化器无法使用索引查找方式</li>
<li>Impossible HAVING: HAVING语句总是FALSE，无法选择任何数据</li>
<li>Impossible WHERE: WHERE语句总是FALSE，无法选择任何数据</li>
<li>Impossible WHERE noticed after reading const tables: MySQL读取了所有的system或者const表，发现where条件永远FALSE </li>
<li>LooseScan(m..n): semi-join使用到松散扫描策略</li>
<li>No matching min/max row: select min/max类型的语句没有找到匹配的行</li>
<li>no matching row in const table: 联表查询中存在空表或没有满足针对唯一索引条件的行</li>
<li>No matching rows after partition pruning: DELETE或UPDATE,对分区进行剪枝后没有发现要删除或更新的行</li>
<li>No tables used: 查询没有FROM条件或者存在<code>FROM DUAL</code></li>
<li><p>Not exists: MySQL能够对查询进行LEFT JOIN优化,发现1个匹配LEFT JOIN标准的行后,不再为前面的的行组合在该表内检查更多的行。</p>
<p>  <code>SELECT * FROM t1 LEFT JOIN t2 ON t1.id=t2.id WHERE t2.id IS NULL;</code><br>  此例中，t2的id是主键不可空，所以针对t1当中的每一行记录，MySQL只查t2一次即返回</p>
</li>
<li>Plan isn’t ready yet: 使用 EXPLAIN FOR CONNECTION 时候，查询计划还没有结束时</li>
<li>Range checked for each record(index map: N): MySQL没有发现好的索引，但是发现查询的列在之前的表中已知时有一些索引可用，比没有索引可用要快，N标识可能用到的索引，16进制的掩码（0x19 =&gt;11001标识索引编号1、4、5可能会用到）</li>
<li>Scanned N databases: 略，关于INFORMATION_SCHEMA表</li>
<li>Select tables optimized away: 优化器确定只有一行需要返回，为了产生这一行数据需要读取确定行数的数据</li>
<li>Skip_open_table, Open_frm_only, Open_full_table: 略，关于INFORMATION_SCHEMA表</li>
<li>Start temporary, End temporary: 表示在semi-join优化中使用了去重策略(Duplicate Weedout)</li>
<li>unique row not found: 对于SELECT … FROM tbl_name，没有行满足关于unique index或者primary key条件的行</li>
<li>Using filesort: 此时mysql会根据联接类型浏览所有符合条件的记录，并保存排序关键字和行指针，然后排序关键字并按顺序检索行。</li>
<li>Using index: 只需要查找索引树就可以获取所有的行，而不需要做额外的查找</li>
<li>Using index condition: 需要读取索引进一步判断是否需要读取表所有的行</li>
<li>Using index for group-by: group by查询中使用索引即可查找到结果</li>
<li>sing join buffer (Block Nested Loop), Using join buffer (Batched Key Access): 联表查询需要读入前面表作为缓存一部分进行优化查询</li>
<li>Using MRR: Multi-Range Read优化策略</li>
<li>Using sort_union(…), Using union(…), Using intersect(…): 标识索引归并是如何进行的</li>
<li>Using temporary: 使用了中间表</li>
<li>Using where: 当有where子句时</li>
<li>Using where with pushed condition: 略</li>
<li>Zero limit: 存在LIMIT 0 限制无法选择任何数据</li>
</ul>
</li>
</ul>
<p>在执行<code>EXPLAIN EXTENDED</code>后紧接着执行<code>SHOW WARNINGS</code>可输出进过优化器优化处理的SQL提示语句，并不一定可以执行</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">EXPLAIN</span> <span class="keyword">EXTENDED</span></div><div class="line"><span class="keyword">SELECT</span></div><div class="line">        *</div><div class="line"><span class="keyword">FROM</span></div><div class="line">        activitypin_info</div><div class="line"><span class="keyword">JOIN</span> activityinfo</div><div class="line"><span class="keyword">ON</span></div><div class="line">        activity_id = activityinfo.id</div><div class="line"><span class="keyword">WHERE</span></div><div class="line">        activity_id  &lt; <span class="number">1000</span></div><div class="line">        <span class="keyword">AND</span> order_id &gt; <span class="number">1000</span>;</div><div class="line"></div><div class="line"><span class="keyword">SHOW</span> <span class="keyword">WARNINGS</span></div></pre></td></tr></table></figure>
<p>得到的优化SQL:</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">/* select#1 */</span></div><div class="line"><span class="keyword">select</span></div><div class="line">        <span class="string">`db1`</span>.<span class="string">`aa`</span>.<span class="string">`id`</span> <span class="keyword">AS</span> <span class="string">`id`</span></div><div class="line"><span class="keyword">from</span></div><div class="line">        <span class="string">`db1`</span>.<span class="string">`activitypin_info`</span> <span class="string">`aa`</span></div><div class="line"><span class="keyword">join</span> <span class="string">`db1`</span>.<span class="string">`activityinfo`</span></div><div class="line"><span class="keyword">where</span></div><div class="line">        (</div><div class="line">                (</div><div class="line">                        <span class="string">`db1`</span>.<span class="string">`aa`</span>.<span class="string">`activity_id`</span> = <span class="string">`db1`</span>.<span class="string">`activityinfo`</span>.<span class="string">`id`</span></div><div class="line">                )</div><div class="line">                <span class="keyword">and</span></div><div class="line">                (</div><div class="line">                        <span class="string">`db1`</span>.<span class="string">`activityinfo`</span>.<span class="string">`id`</span> &lt; <span class="number">1000</span></div><div class="line">                )</div><div class="line">                <span class="keyword">and</span></div><div class="line">                (</div><div class="line">                        <span class="string">`db1`</span>.<span class="string">`aa`</span>.<span class="string">`order_id`</span> &gt; <span class="number">1000</span></div><div class="line">                )</div><div class="line">        )</div></pre></td></tr></table></figure>
<p>在生成的结果中可能会有一些特殊的标记，见链接<a href="http://dev.mysql.com/doc/refman/5.7/en/explain-extended.html" target="_blank" rel="noopener">点击查看</a></p>
<h2 id="简单的方式评估查询性能"><a href="#简单的方式评估查询性能" class="headerlink" title="简单的方式评估查询性能"></a>简单的方式评估查询性能</h2><p>查询行数与寻道数的关系：</p>
<span>$$N_{seek}=\frac{\log(行数)}{\log(索引大小/2*3/(索引长度 + 数据指针大小))}$$</span><!-- Has MathJax -->
<ul>
<li>索引大小: 一般是1024 bytes</li>
<li>数据指针: 一般是4 bytes</li>
<li>索引长度: 500000行一般3bytes</li>
</ul>
<p>索引存储空间问题：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">空间=行数*(<span class="number">3</span>+<span class="number">4</span>)*<span class="number">3</span>/<span class="number">2</span>(MB)</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;认识与开始&quot;&gt;&lt;a href=&quot;#认识与开始&quot; class=&quot;headerlink&quot; title=&quot;认识与开始&quot;&gt;&lt;/a&gt;认识与开始&lt;/h1&gt;&lt;h2 id=&quot;认识慢查询&quot;&gt;&lt;a href=&quot;#认识慢查询&quot; class=&quot;headerlink&quot; title=&quot;认识慢
    
    </summary>
    
      <category term="DB" scheme="https://pingansheng.github.io/categories/DB/"/>
    
    
      <category term="DB" scheme="https://pingansheng.github.io/tags/DB/"/>
    
      <category term="MySQL性能优化" scheme="https://pingansheng.github.io/tags/MySQL%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>R语言-随机森林</title>
    <link href="https://pingansheng.github.io/2017/01/09/R%E8%AF%AD%E8%A8%80-%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/"/>
    <id>https://pingansheng.github.io/2017/01/09/R语言-随机森林/</id>
    <published>2017-01-09T03:16:56.000Z</published>
    <updated>2024-02-24T02:35:07.339Z</updated>
    
    <content type="html"><![CDATA[<h1 id="随机森林示例"><a href="#随机森林示例" class="headerlink" title="随机森林示例"></a>随机森林示例</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#取相关变量</span></div><div class="line">data&lt;-dataOri[,c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>)]</div><div class="line"><span class="comment">#取自变量</span></div><div class="line">modelData=data[,c(<span class="number">2</span>:<span class="number">12</span>)]</div><div class="line"><span class="comment">#取大小合适的数据集</span></div><div class="line">x&lt;-modelData[c(<span class="number">1</span>:nrow(modelData)),c(-<span class="number">6</span>,-<span class="number">8</span>)]</div><div class="line"><span class="comment">#去除缺失值</span></div><div class="line">x=na.omit(x)</div><div class="line"><span class="comment">#分为两部分（3:7分）</span></div><div class="line">traindata&lt;-x[sample(<span class="number">1</span>:nrow(x),nrow(x)*<span class="number">0.7</span>,replace=<span class="literal">FALSE</span>),]</div><div class="line">testdata&lt;-x[sample(<span class="number">1</span>:nrow(x),nrow(x)-nrow(traindata),replace=<span class="literal">FALSE</span>),]</div><div class="line"><span class="keyword">library</span>(randomForest)</div><div class="line"><span class="comment">#~表示连接因变量与自变量之间的关系，X~.表示预测模式是所有X与其他所有变量</span></div><div class="line">RF&lt;-randomForest(as.factor(is_back)~.,data=traindata,proximity=<span class="literal">TRUE</span>, importance=<span class="literal">TRUE</span>)</div><div class="line">plot(RF)</div></pre></td></tr></table></figure>
<p><img src="/2017/01/09/R语言-随机森林/RFPlot.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#获取变量的重要性排序</span></div><div class="line">imp &lt;- importance(RF)</div><div class="line">impvar &lt;- imp[order(imp[, <span class="number">3</span>], decreasing=<span class="literal">TRUE</span>),];</div><div class="line">impvar</div><div class="line"><span class="comment">#查看变量重要性排序图</span></div><div class="line">varImpPlot(RF)</div></pre></td></tr></table></figure>
<p><img src="/2017/01/09/R语言-随机森林/importantPlot.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#查看某个变量对数据的重要性分布图</span></div><div class="line">partialPlot(RF,traindata,province_id)</div></pre></td></tr></table></figure>
<p><img src="/2017/01/09/R语言-随机森林/varPlot.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#测试模型在traindata上的效果</span></div><div class="line">table(predict(RF), traindata$is_back)</div><div class="line"><span class="comment">#测试模型在testdata上的效果</span></div><div class="line">isbackPred &lt;- predict(RF, newdata=testdata)</div><div class="line">table(isbackPred, testdata$is_back)</div><div class="line"><span class="comment"># 绘制每一个观测值被判断正确的概率图</span></div><div class="line">plot(margin(RF, testdata$is_back))</div></pre></td></tr></table></figure>
<p><img src="/2017/01/09/R语言-随机森林/predictView.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;随机森林示例&quot;&gt;&lt;a href=&quot;#随机森林示例&quot; class=&quot;headerlink&quot; title=&quot;随机森林示例&quot;&gt;&lt;/a&gt;随机森林示例&lt;/h1&gt;&lt;figure class=&quot;highlight r&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;
    
    </summary>
    
      <category term="R语言" scheme="https://pingansheng.github.io/categories/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R语言" scheme="https://pingansheng.github.io/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="随机森林" scheme="https://pingansheng.github.io/tags/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97/"/>
    
  </entry>
  
  <entry>
    <title>chapter07 基本统计分析</title>
    <link href="https://pingansheng.github.io/2017/01/06/chapter07-%E5%9F%BA%E6%9C%AC%E7%BB%9F%E8%AE%A1%E5%88%86%E6%9E%90/"/>
    <id>https://pingansheng.github.io/2017/01/06/chapter07-基本统计分析/</id>
    <published>2017-01-06T06:25:25.000Z</published>
    <updated>2024-02-24T02:35:07.307Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本统计分析"><a href="#基本统计分析" class="headerlink" title="基本统计分析"></a>基本统计分析</h1><h2 id="1、描述性统计分析"><a href="#1、描述性统计分析" class="headerlink" title="1、描述性统计分析"></a>1、描述性统计分析</h2><h3 id="（1）方法集合"><a href="#（1）方法集合" class="headerlink" title="（1）方法集合"></a>（1）方法集合</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#summary</span></div><div class="line">&gt; new_var&lt;-mtcars[vars]</div><div class="line">&gt; summary(new_var)</div><div class="line">      mpg              hp              wt       </div><div class="line"> Min.   :<span class="number">10.40</span>   Min.   : <span class="number">52.0</span>   Min.   :<span class="number">1.513</span>  </div><div class="line"> 1st Qu.:<span class="number">15.43</span>   1st Qu.: <span class="number">96.5</span>   1st Qu.:<span class="number">2.581</span>  </div><div class="line"> Median :<span class="number">19.20</span>   Median :<span class="number">123.0</span>   Median :<span class="number">3.325</span>  </div><div class="line"> Mean   :<span class="number">20.09</span>   Mean   :<span class="number">146.7</span>   Mean   :<span class="number">3.217</span>  </div><div class="line"> 3rd Qu.:<span class="number">22.80</span>   3rd Qu.:<span class="number">180.0</span>   3rd Qu.:<span class="number">3.610</span>  </div><div class="line"> Max.   :<span class="number">33.90</span>   Max.   :<span class="number">335.0</span>   Max.   :<span class="number">5.424</span>  </div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#fivenum 返回图基五数 最小，下四分位数，中位数，上四分位数与最大值</span></div><div class="line">&gt; sapply(new_var, fivenum)</div><div class="line">       mpg  hp     wt</div><div class="line">[<span class="number">1</span>,] <span class="number">10.40</span>  <span class="number">52</span> <span class="number">1.5130</span></div><div class="line">[<span class="number">2</span>,] <span class="number">15.35</span>  <span class="number">96</span> <span class="number">2.5425</span></div><div class="line">[<span class="number">3</span>,] <span class="number">19.20</span> <span class="number">123</span> <span class="number">3.3250</span></div><div class="line">[<span class="number">4</span>,] <span class="number">22.80</span> <span class="number">180</span> <span class="number">3.6500</span></div><div class="line">[<span class="number">5</span>,] <span class="number">33.90</span> <span class="number">335</span> <span class="number">5.4240</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#自编函数计算偏度与峰度</span></div><div class="line">&gt; mystats&lt;-<span class="keyword">function</span>(x,na.omit=<span class="literal">FALSE</span>)&#123;</div><div class="line">+   <span class="keyword">if</span>(na.omit)</div><div class="line">+       x&lt;x[!is.na(x)]</div><div class="line">+   m&lt;-mean(x)</div><div class="line">+   n&lt;-length(x)</div><div class="line">+   s&lt;-sd(x)</div><div class="line">+   skew&lt;-sum(((x-m)/s)^<span class="number">3</span>)/n</div><div class="line">+   kurt&lt;-sum(((x-m)/s)^<span class="number">4</span>)/n-<span class="number">3</span></div><div class="line">+   <span class="keyword">return</span>(c(n=n, mean=m,stdev=s,skew=skew,kurtosis=kurt))</div><div class="line">+ &#125;</div><div class="line">&gt; </div><div class="line">&gt; sapply(new_var, mystats)</div><div class="line">               mpg          hp          wt</div><div class="line">n        <span class="number">32.000000</span>  <span class="number">32.0000000</span> <span class="number">32.00000000</span></div><div class="line">mean     <span class="number">20.090625</span> <span class="number">146.6875000</span>  <span class="number">3.21725000</span></div><div class="line">stdev     <span class="number">6.026948</span>  <span class="number">68.5628685</span>  <span class="number">0.97845744</span></div><div class="line">skew      <span class="number">0.610655</span>   <span class="number">0.7260237</span>  <span class="number">0.42314646</span></div><div class="line">kurtosis -<span class="number">0.372766</span>  -<span class="number">0.1355511</span> -<span class="number">0.02271075</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#第三方包 Hmisc pastecs psych包含很多描述性统计量函数</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="keyword">library</span>(Hmisc)</div><div class="line">&gt; <span class="comment">#describe()函数可返回变量和观测的数量、缺失值和唯一值的数目、平均值、分位数，以及五个最大的值和五个最小的值。</span></div><div class="line">&gt; describe(new_var)</div><div class="line">    vars  n   mean    sd median trimmed   mad   min    max  range skew kurtosis    se</div><div class="line">mpg    <span class="number">1</span> <span class="number">32</span>  <span class="number">20.09</span>  <span class="number">6.03</span>  <span class="number">19.20</span>   <span class="number">19.70</span>  <span class="number">5.41</span> <span class="number">10.40</span>  <span class="number">33.90</span>  <span class="number">23.50</span> <span class="number">0.61</span>    -<span class="number">0.37</span>  <span class="number">1.07</span></div><div class="line">hp     <span class="number">2</span> <span class="number">32</span> <span class="number">146.69</span> <span class="number">68.56</span> <span class="number">123.00</span>  <span class="number">141.19</span> <span class="number">77.10</span> <span class="number">52.00</span> <span class="number">335.00</span> <span class="number">283.00</span> <span class="number">0.73</span>    -<span class="number">0.14</span> <span class="number">12.12</span></div><div class="line">wt     <span class="number">3</span> <span class="number">32</span>   <span class="number">3.22</span>  <span class="number">0.98</span>   <span class="number">3.33</span>    <span class="number">3.15</span>  <span class="number">0.77</span>  <span class="number">1.51</span>   <span class="number">5.42</span>   <span class="number">3.91</span> <span class="number">0.42</span>    -<span class="number">0.02</span>  <span class="number">0.17</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#pastecs stat.desc()的函数，它可以计算种类繁多的描述性统计量</span></div><div class="line">&gt; <span class="keyword">library</span>(pastecs)</div><div class="line">&gt; stat.desc(new_var)</div><div class="line">                     mpg           hp          wt</div><div class="line">nbr.val       <span class="number">32.0000000</span>   <span class="number">32.0000000</span>  <span class="number">32.0000000</span></div><div class="line">nbr.null       <span class="number">0.0000000</span>    <span class="number">0.0000000</span>   <span class="number">0.0000000</span></div><div class="line">nbr.na         <span class="number">0.0000000</span>    <span class="number">0.0000000</span>   <span class="number">0.0000000</span></div><div class="line">min           <span class="number">10.4000000</span>   <span class="number">52.0000000</span>   <span class="number">1.5130000</span></div><div class="line">max           <span class="number">33.9000000</span>  <span class="number">335.0000000</span>   <span class="number">5.4240000</span></div><div class="line">range         <span class="number">23.5000000</span>  <span class="number">283.0000000</span>   <span class="number">3.9110000</span></div><div class="line">sum          <span class="number">642.9000000</span> <span class="number">4694.0000000</span> <span class="number">102.9520000</span></div><div class="line">median        <span class="number">19.2000000</span>  <span class="number">123.0000000</span>   <span class="number">3.3250000</span></div><div class="line">mean          <span class="number">20.0906250</span>  <span class="number">146.6875000</span>   <span class="number">3.2172500</span></div><div class="line">SE.mean        <span class="number">1.0654240</span>   <span class="number">12.1203173</span>   <span class="number">0.1729685</span></div><div class="line">CI.mean.0.95   <span class="number">2.1729465</span>   <span class="number">24.7195501</span>   <span class="number">0.3527715</span></div><div class="line">var           <span class="number">36.3241028</span> <span class="number">4700.8669355</span>   <span class="number">0.9573790</span></div><div class="line">std.dev        <span class="number">6.0269481</span>   <span class="number">68.5628685</span>   <span class="number">0.9784574</span></div><div class="line">coef.var       <span class="number">0.2999881</span>    <span class="number">0.4674077</span>   <span class="number">0.3041285</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#psych describe()的函数 计算非缺失值的数量、平均数、标准差、中位数、截尾均值、绝对中位差、最小值、最大值、值域、偏度、峰度和平均值的标准误。</span></div><div class="line">&gt; <span class="keyword">library</span>(psych)</div><div class="line">&gt; <span class="comment">#同名函数以最后载入的包为准，可以加包名Hmisc::describe(x)</span></div><div class="line">&gt; describe(new_var)</div><div class="line">    vars  n   mean    sd median trimmed   mad   min    max  range skew kurtosis    se</div><div class="line">mpg    <span class="number">1</span> <span class="number">32</span>  <span class="number">20.09</span>  <span class="number">6.03</span>  <span class="number">19.20</span>   <span class="number">19.70</span>  <span class="number">5.41</span> <span class="number">10.40</span>  <span class="number">33.90</span>  <span class="number">23.50</span> <span class="number">0.61</span>    -<span class="number">0.37</span>  <span class="number">1.07</span></div><div class="line">hp     <span class="number">2</span> <span class="number">32</span> <span class="number">146.69</span> <span class="number">68.56</span> <span class="number">123.00</span>  <span class="number">141.19</span> <span class="number">77.10</span> <span class="number">52.00</span> <span class="number">335.00</span> <span class="number">283.00</span> <span class="number">0.73</span>    -<span class="number">0.14</span> <span class="number">12.12</span></div><div class="line">wt     <span class="number">3</span> <span class="number">32</span>   <span class="number">3.22</span>  <span class="number">0.98</span>   <span class="number">3.33</span>    <span class="number">3.15</span>  <span class="number">0.77</span>  <span class="number">1.51</span>   <span class="number">5.42</span>   <span class="number">3.91</span> <span class="number">0.42</span>    -<span class="number">0.02</span>  <span class="number">0.17</span></div></pre></td></tr></table></figure>
<p>（2）分组计算描述性统计变量</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#分组计算描述性统计变量</span></div><div class="line">&gt; <span class="comment">#aggregate can only use single function to the data</span></div><div class="line">&gt; aggregate(mtcars[vars],by=list(am=mtcars$am),mean)</div><div class="line">  am      mpg       hp       wt</div><div class="line"><span class="number">1</span>  <span class="number">0</span> <span class="number">17.14737</span> <span class="number">160.2632</span> <span class="number">3.768895</span></div><div class="line"><span class="number">2</span>  <span class="number">1</span> <span class="number">24.39231</span> <span class="number">126.8462</span> <span class="number">2.411000</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#use by(data, INDICESm FUN) to use servial methods</span></div><div class="line">&gt; </div><div class="line">&gt; dstats&lt;-<span class="keyword">function</span>(x)(</div><div class="line">+   c(mean=mean(x), sd=sd(x))</div><div class="line">+ )</div><div class="line">&gt; </div><div class="line">&gt; by(mtcars[vars], mtcars$am, mean)</div><div class="line">mtcars$am: <span class="number">0</span></div><div class="line">[<span class="number">1</span>] <span class="literal">NA</span></div><div class="line">---------------------------------------------------------------------------------------------------------- </div><div class="line">mtcars$am: <span class="number">1</span></div><div class="line">[<span class="number">1</span>] <span class="literal">NA</span></div><div class="line">Warning messages:</div><div class="line"><span class="number">1</span>: In mean.default(data[x, , drop = <span class="literal">FALSE</span>], <span class="keyword">...</span>) :</div><div class="line">  参数不是数值也不是逻辑值：回覆<span class="literal">NA</span></div><div class="line"><span class="number">2</span>: In mean.default(data[x, , drop = <span class="literal">FALSE</span>], <span class="keyword">...</span>) :</div><div class="line">  参数不是数值也不是逻辑值：回覆<span class="literal">NA</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#使用reshape灵活的导出描述性统计量</span></div><div class="line">&gt; dstats&lt;-<span class="keyword">function</span>(x)(</div><div class="line">+   c(n=length(x),mean=mean(x), sd=sd(x))</div><div class="line">+ )</div><div class="line">&gt; <span class="keyword">library</span>(reshape)</div><div class="line">&gt; <span class="comment">#首先融合数据框</span></div><div class="line">&gt; dfm &lt;- melt(mtcars, measure.vars=c(<span class="string">"mpg"</span>,<span class="string">"hp"</span>,<span class="string">"wt"</span>), id.vars = c(<span class="string">"am"</span>,<span class="string">"cyl"</span>))</div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#重铸 (variable表示融合后的数据中的度量变量，默认名称为variable)</span></div><div class="line">&gt; cast(dfm, am + cyl + variable ~., dstats)</div><div class="line">   am cyl variable  n       mean         sd</div><div class="line"><span class="number">1</span>   <span class="number">0</span>   <span class="number">4</span>      mpg  <span class="number">3</span>  <span class="number">22.900000</span>  <span class="number">1.4525839</span></div><div class="line"><span class="number">2</span>   <span class="number">0</span>   <span class="number">4</span>       hp  <span class="number">3</span>  <span class="number">84.666667</span> <span class="number">19.6553640</span></div><div class="line"><span class="number">3</span>   <span class="number">0</span>   <span class="number">4</span>       wt  <span class="number">3</span>   <span class="number">2.935000</span>  <span class="number">0.4075230</span></div><div class="line"><span class="number">4</span>   <span class="number">0</span>   <span class="number">6</span>      mpg  <span class="number">4</span>  <span class="number">19.125000</span>  <span class="number">1.6317169</span></div><div class="line"><span class="number">5</span>   <span class="number">0</span>   <span class="number">6</span>       hp  <span class="number">4</span> <span class="number">115.250000</span>  <span class="number">9.1787799</span></div><div class="line"><span class="number">6</span>   <span class="number">0</span>   <span class="number">6</span>       wt  <span class="number">4</span>   <span class="number">3.388750</span>  <span class="number">0.1162164</span></div><div class="line"><span class="number">7</span>   <span class="number">0</span>   <span class="number">8</span>      mpg <span class="number">12</span>  <span class="number">15.050000</span>  <span class="number">2.7743959</span></div><div class="line"><span class="number">8</span>   <span class="number">0</span>   <span class="number">8</span>       hp <span class="number">12</span> <span class="number">194.166667</span> <span class="number">33.3598379</span></div><div class="line"><span class="number">9</span>   <span class="number">0</span>   <span class="number">8</span>       wt <span class="number">12</span>   <span class="number">4.104083</span>  <span class="number">0.7683069</span></div><div class="line"><span class="number">10</span>  <span class="number">1</span>   <span class="number">4</span>      mpg  <span class="number">8</span>  <span class="number">28.075000</span>  <span class="number">4.4838599</span></div><div class="line"><span class="number">11</span>  <span class="number">1</span>   <span class="number">4</span>       hp  <span class="number">8</span>  <span class="number">81.875000</span> <span class="number">22.6554156</span></div><div class="line"><span class="number">12</span>  <span class="number">1</span>   <span class="number">4</span>       wt  <span class="number">8</span>   <span class="number">2.042250</span>  <span class="number">0.4093485</span></div><div class="line"><span class="number">13</span>  <span class="number">1</span>   <span class="number">6</span>      mpg  <span class="number">3</span>  <span class="number">20.566667</span>  <span class="number">0.7505553</span></div><div class="line"><span class="number">14</span>  <span class="number">1</span>   <span class="number">6</span>       hp  <span class="number">3</span> <span class="number">131.666667</span> <span class="number">37.5277675</span></div><div class="line"><span class="number">15</span>  <span class="number">1</span>   <span class="number">6</span>       wt  <span class="number">3</span>   <span class="number">2.755000</span>  <span class="number">0.1281601</span></div><div class="line"><span class="number">16</span>  <span class="number">1</span>   <span class="number">8</span>      mpg  <span class="number">2</span>  <span class="number">15.400000</span>  <span class="number">0.5656854</span></div><div class="line"><span class="number">17</span>  <span class="number">1</span>   <span class="number">8</span>       hp  <span class="number">2</span> <span class="number">299.500000</span> <span class="number">50.2045815</span></div><div class="line"><span class="number">18</span>  <span class="number">1</span>   <span class="number">8</span>       wt  <span class="number">2</span>   <span class="number">3.370000</span>  <span class="number">0.2828427</span></div></pre></td></tr></table></figure>
<h2 id="2、频数表和列联表"><a href="#2、频数表和列联表" class="headerlink" title="2、频数表和列联表"></a>2、频数表和列联表</h2><h3 id="（1）生成频数表"><a href="#（1）生成频数表" class="headerlink" title="（1）生成频数表"></a>（1）生成频数表</h3><table>
<thead>
<tr>
<th>函数</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>table(var1, var2, …, varN)</td>
<td>使用 N 个类别型变量（因子）创建一个 N 维列联表</td>
</tr>
<tr>
<td>xtabs(formula, data)</td>
<td>根据一个公式和一个矩阵或数据框创建一个 N 维列联表</td>
</tr>
<tr>
<td>prop.table(table, margins)</td>
<td>依margins定义的边际列表将表中条目表示为分数形式</td>
</tr>
<tr>
<td>margin.table(table, margins)</td>
<td>依margins定义的边际列表计算表中条目的和</td>
</tr>
<tr>
<td>addmargins(table, margins)</td>
<td>将概述边margins（默认是求和结果）放入表中</td>
</tr>
<tr>
<td>ftable(table)</td>
<td>创建一个紧凑的“平铺”式列联表</td>
</tr>
</tbody>
</table>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#频数表</span></div><div class="line">&gt; <span class="keyword">library</span>(vcd)</div><div class="line">&gt; art=Arthritis</div><div class="line">&gt; </div><div class="line">&gt; head(art)</div><div class="line">  ID Treatment  Sex Age Improved</div><div class="line"><span class="number">1</span> <span class="number">57</span>   Treated Male  <span class="number">27</span>     Some</div><div class="line"><span class="number">2</span> <span class="number">46</span>   Treated Male  <span class="number">29</span>     None</div><div class="line"><span class="number">3</span> <span class="number">77</span>   Treated Male  <span class="number">30</span>     None</div><div class="line"><span class="number">4</span> <span class="number">17</span>   Treated Male  <span class="number">32</span>   Marked</div><div class="line"><span class="number">5</span> <span class="number">36</span>   Treated Male  <span class="number">46</span>   Marked</div><div class="line"><span class="number">6</span> <span class="number">23</span>   Treated Male  <span class="number">58</span>   Marked</div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#一维列联表</span></div><div class="line">&gt; mytable &lt;- with(art, table(Improved))</div><div class="line">&gt; mytable</div><div class="line">Improved</div><div class="line">  None   Some Marked </div><div class="line">    <span class="number">42</span>     <span class="number">14</span>     <span class="number">28</span> </div><div class="line">&gt; <span class="comment">#prop.table() 将频数转化为比例值</span></div><div class="line">&gt; prop.table(mytable)*<span class="number">100</span></div><div class="line">Improved</div><div class="line">    None     Some   Marked </div><div class="line"><span class="number">50.00000</span> <span class="number">16.66667</span> <span class="number">33.33333</span> </div><div class="line">&gt; </div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#二维列联表 </span></div><div class="line">&gt; <span class="comment">#table默认忽略缺失值，使用缺失值则加useNA="ifany"</span></div><div class="line">&gt; <span class="comment"># xtabs如果公式左边有变量则为频数变量</span></div><div class="line">&gt; mytable &lt;- xtabs(~ Treatment+Improved, data=art)</div><div class="line">&gt; mytable</div><div class="line">         Improved</div><div class="line">Treatment None Some Marked</div><div class="line">  Placebo   <span class="number">29</span>    <span class="number">7</span>      <span class="number">7</span></div><div class="line">  Treated   <span class="number">13</span>    <span class="number">7</span>     <span class="number">21</span></div><div class="line">&gt; <span class="comment">#边际频数</span></div><div class="line">&gt; margin.table(mytable,<span class="number">2</span>)</div><div class="line">Improved</div><div class="line">  None   Some Marked </div><div class="line">    <span class="number">42</span>     <span class="number">14</span>     <span class="number">28</span> </div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#比例 下标表示按照第几个变量进行比例计算，</span></div><div class="line">&gt; <span class="comment">#不选择则默认为所有变量进行计算</span></div><div class="line">&gt; prop.table(mytable,<span class="number">1</span>)</div><div class="line">         Improved</div><div class="line">Treatment      None      Some    Marked</div><div class="line">  Placebo <span class="number">0.6744186</span> <span class="number">0.1627907</span> <span class="number">0.1627907</span></div><div class="line">  Treated <span class="number">0.3170732</span> <span class="number">0.1707317</span> <span class="number">0.5121951</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#函数addmargins()为结果增加边际和</span></div><div class="line">&gt; addmargins(mytable)</div><div class="line">         Improved</div><div class="line">Treatment None Some Marked Sum</div><div class="line">  Placebo   <span class="number">29</span>    <span class="number">7</span>      <span class="number">7</span>  <span class="number">43</span></div><div class="line">  Treated   <span class="number">13</span>    <span class="number">7</span>     <span class="number">21</span>  <span class="number">41</span></div><div class="line">  Sum       <span class="number">42</span>   <span class="number">14</span>     <span class="number">28</span>  <span class="number">84</span></div><div class="line">&gt; </div><div class="line">&gt; addmargins(prop.table(mytable))</div><div class="line">         Improved</div><div class="line">Treatment       None       Some     Marked        Sum</div><div class="line">  Placebo <span class="number">0.34523810</span> <span class="number">0.08333333</span> <span class="number">0.08333333</span> <span class="number">0.51190476</span></div><div class="line">  Treated <span class="number">0.15476190</span> <span class="number">0.08333333</span> <span class="number">0.25000000</span> <span class="number">0.48809524</span></div><div class="line">  Sum     <span class="number">0.50000000</span> <span class="number">0.16666667</span> <span class="number">0.33333333</span> <span class="number">1.00000000</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#默认产生行与列的和，加参数控制只显示行或列</span></div><div class="line">&gt; addmargins(prop.table(mytable),<span class="number">2</span>)</div><div class="line">         Improved</div><div class="line">Treatment       None       Some     Marked        Sum</div><div class="line">  Placebo <span class="number">0.34523810</span> <span class="number">0.08333333</span> <span class="number">0.08333333</span> <span class="number">0.51190476</span></div><div class="line">  Treated <span class="number">0.15476190</span> <span class="number">0.08333333</span> <span class="number">0.25000000</span> <span class="number">0.48809524</span></div><div class="line">&gt; addmargins(prop.table(mytable),<span class="number">1</span>)</div><div class="line">         Improved</div><div class="line">Treatment       None       Some     Marked</div><div class="line">  Placebo <span class="number">0.34523810</span> <span class="number">0.08333333</span> <span class="number">0.08333333</span></div><div class="line">  Treated <span class="number">0.15476190</span> <span class="number">0.08333333</span> <span class="number">0.25000000</span></div><div class="line">  Sum     <span class="number">0.50000000</span> <span class="number">0.16666667</span> <span class="number">0.33333333</span></div><div class="line"></div><div class="line">&gt; <span class="comment">#使用CrossTabIe创建二维表</span></div><div class="line">&gt; <span class="keyword">library</span>(gmodels)</div><div class="line">&gt; ss=CrossTable(art$Treatment,art$Improved)</div><div class="line"></div><div class="line"> </div><div class="line">   Cell Contents</div><div class="line">|-------------------------|</div><div class="line">|                       N |</div><div class="line">| Chi-square contribution |</div><div class="line">|           N / Row Total |</div><div class="line">|           N / Col Total |</div><div class="line">|         N / Table Total |</div><div class="line">|-------------------------|</div><div class="line"></div><div class="line"> </div><div class="line">Total Observations <span class="keyword">in</span> Table:  <span class="number">84</span> </div><div class="line"></div><div class="line"> </div><div class="line">              | art$Improved </div><div class="line">art$Treatment |      None |      Some |    Marked | Row Total | </div><div class="line">--------------|-----------|-----------|-----------|-----------|</div><div class="line">      Placebo |        <span class="number">29</span> |         <span class="number">7</span> |         <span class="number">7</span> |        <span class="number">43</span> | </div><div class="line">              |     <span class="number">2.616</span> |     <span class="number">0.004</span> |     <span class="number">3.752</span> |           | </div><div class="line">              |     <span class="number">0.674</span> |     <span class="number">0.163</span> |     <span class="number">0.163</span> |     <span class="number">0.512</span> | </div><div class="line">              |     <span class="number">0.690</span> |     <span class="number">0.500</span> |     <span class="number">0.250</span> |           | </div><div class="line">              |     <span class="number">0.345</span> |     <span class="number">0.083</span> |     <span class="number">0.083</span> |           | </div><div class="line">--------------|-----------|-----------|-----------|-----------|</div><div class="line">      Treated |        <span class="number">13</span> |         <span class="number">7</span> |        <span class="number">21</span> |        <span class="number">41</span> | </div><div class="line">              |     <span class="number">2.744</span> |     <span class="number">0.004</span> |     <span class="number">3.935</span> |           | </div><div class="line">              |     <span class="number">0.317</span> |     <span class="number">0.171</span> |     <span class="number">0.512</span> |     <span class="number">0.488</span> | </div><div class="line">              |     <span class="number">0.310</span> |     <span class="number">0.500</span> |     <span class="number">0.750</span> |           | </div><div class="line">              |     <span class="number">0.155</span> |     <span class="number">0.083</span> |     <span class="number">0.250</span> |           | </div><div class="line">--------------|-----------|-----------|-----------|-----------|</div><div class="line"> Column Total |        <span class="number">42</span> |        <span class="number">14</span> |        <span class="number">28</span> |        <span class="number">84</span> | </div><div class="line">              |     <span class="number">0.500</span> |     <span class="number">0.167</span> |     <span class="number">0.333</span> |           | </div><div class="line">--------------|-----------|-----------|-----------|-----------|</div><div class="line"></div><div class="line"> </div><div class="line">&gt; </div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#多维列联表</span></div><div class="line">&gt; mytable&lt;-xtabs(~Treatment+Sex+Improved,data=art)</div><div class="line">&gt; mytable</div><div class="line">, , Improved = None</div><div class="line"></div><div class="line">         Sex</div><div class="line">Treatment Female Male</div><div class="line">  Placebo     <span class="number">19</span>   <span class="number">10</span></div><div class="line">  Treated      <span class="number">6</span>    <span class="number">7</span></div><div class="line"></div><div class="line">, , Improved = Some</div><div class="line"></div><div class="line">         Sex</div><div class="line">Treatment Female Male</div><div class="line">  Placebo      <span class="number">7</span>    <span class="number">0</span></div><div class="line">  Treated      <span class="number">5</span>    <span class="number">2</span></div><div class="line"></div><div class="line">, , Improved = Marked</div><div class="line"></div><div class="line">         Sex</div><div class="line">Treatment Female Male</div><div class="line">  Placebo      <span class="number">6</span>    <span class="number">1</span></div><div class="line">  Treated     <span class="number">16</span>    <span class="number">5</span></div><div class="line"></div><div class="line">&gt; ftable(mytable)</div><div class="line">                 Improved None Some Marked</div><div class="line">Treatment Sex                             </div><div class="line">Placebo   Female            <span class="number">19</span>    <span class="number">7</span>      <span class="number">6</span></div><div class="line">          Male              <span class="number">10</span>    <span class="number">0</span>      <span class="number">1</span></div><div class="line">Treated   Female             <span class="number">6</span>    <span class="number">5</span>     <span class="number">16</span></div><div class="line">          Male               <span class="number">7</span>    <span class="number">2</span>      <span class="number">5</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#边际频数</span></div><div class="line">&gt; margin.table(mytable,<span class="number">1</span>)</div><div class="line">Treatment</div><div class="line">Placebo Treated </div><div class="line">     <span class="number">43</span>      <span class="number">41</span> </div><div class="line">&gt; margin.table(mytable,<span class="number">2</span>)</div><div class="line">Sex</div><div class="line">Female   Male </div><div class="line">    <span class="number">59</span>     <span class="number">25</span> </div><div class="line">&gt; margin.table(mytable,<span class="number">3</span>)</div><div class="line">Improved</div><div class="line">  None   Some Marked </div><div class="line">    <span class="number">42</span>     <span class="number">14</span>     <span class="number">28</span> </div><div class="line">&gt; margin.table(mytable,c(<span class="number">1</span>,<span class="number">3</span>))</div><div class="line">         Improved</div><div class="line">Treatment None Some Marked</div><div class="line">  Placebo   <span class="number">29</span>    <span class="number">7</span>      <span class="number">7</span></div><div class="line">  Treated   <span class="number">13</span>    <span class="number">7</span>     <span class="number">21</span></div><div class="line">&gt; ftable(prop.table(mytable,c(<span class="number">1</span>,<span class="number">2</span>)))</div><div class="line">                 Improved       None       Some     Marked</div><div class="line">Treatment Sex                                             </div><div class="line">Placebo   Female          <span class="number">0.59375000</span> <span class="number">0.21875000</span> <span class="number">0.18750000</span></div><div class="line">          Male            <span class="number">0.90909091</span> <span class="number">0.00000000</span> <span class="number">0.09090909</span></div><div class="line">Treated   Female          <span class="number">0.22222222</span> <span class="number">0.18518519</span> <span class="number">0.59259259</span></div><div class="line">          Male            <span class="number">0.50000000</span> <span class="number">0.14285714</span> <span class="number">0.35714286</span></div><div class="line">&gt; </div><div class="line">&gt; ftable(addmargins(prop.table(mytable,c(<span class="number">1</span>,<span class="number">2</span>)),<span class="number">3</span>))</div><div class="line">                 Improved       None       Some     Marked        Sum</div><div class="line">Treatment Sex                                                        </div><div class="line">Placebo   Female          <span class="number">0.59375000</span> <span class="number">0.21875000</span> <span class="number">0.18750000</span> <span class="number">1.00000000</span></div><div class="line">          Male            <span class="number">0.90909091</span> <span class="number">0.00000000</span> <span class="number">0.09090909</span> <span class="number">1.00000000</span></div><div class="line">Treated   Female          <span class="number">0.22222222</span> <span class="number">0.18518519</span> <span class="number">0.59259259</span> <span class="number">1.00000000</span></div><div class="line">          Male            <span class="number">0.50000000</span> <span class="number">0.14285714</span> <span class="number">0.35714286</span> <span class="number">1.00000000</span></div></pre></td></tr></table></figure>
<h3 id="（2）独立性检验"><a href="#（2）独立性检验" class="headerlink" title="（2）独立性检验"></a>（2）独立性检验</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#独立性检验</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#卡方独立性检验</span></div><div class="line">&gt; <span class="comment">#p值表示独立性的概率，一般以0.01为分界</span></div><div class="line">&gt; <span class="keyword">library</span>(vcd)</div><div class="line">&gt; mytable&lt;-xtabs(~Treatment+Improved,data=Arthritis)</div><div class="line">&gt; chisq.test(mytable)</div><div class="line"></div><div class="line">	Pearson-s Chi-squared test</div><div class="line"></div><div class="line">data:  mytable</div><div class="line">X-squared = <span class="number">13.055</span>, df = <span class="number">2</span>, p-value = <span class="number">0.001463</span></div><div class="line"></div><div class="line">&gt; </div><div class="line">&gt; mytable&lt;-xtabs(~Improved+Sex,data=Arthritis)</div><div class="line">&gt; chisq.test(mytable)</div><div class="line"></div><div class="line">	Pearson-s Chi-squared test</div><div class="line"></div><div class="line">data:  mytable</div><div class="line">X-squared = <span class="number">4.8407</span>, df = <span class="number">2</span>, p-value = <span class="number">0.08889</span></div><div class="line"></div><div class="line">Warning message:</div><div class="line">In chisq.test(mytable) : Chi-squared近似算法有可能不准</div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#fisher精确检验</span></div><div class="line">&gt; mytable&lt;-xtabs(~Treatment+Improved,data=Arthritis)</div><div class="line">&gt; fisher.test(mytable)</div><div class="line"></div><div class="line">	Fisher-s Exact Test <span class="keyword">for</span> Count Data</div><div class="line"></div><div class="line">data:  mytable</div><div class="line">p-value = <span class="number">0.001393</span></div><div class="line">alternative hypothesis: two.sided</div><div class="line"></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#Cochran-Mantel—Haenszel检验</span></div><div class="line">&gt; <span class="comment">#原假设是，两个名义变量在第三个变量的每一层中都是条件独立的</span></div><div class="line">&gt; mytable&lt;-xtabs(~Treatment+Improved+Sex,data=Arthritis)</div><div class="line">&gt; mantelhaen.test(mytable)</div><div class="line"></div><div class="line">	Cochran-Mantel-Haenszel test</div><div class="line"></div><div class="line">data:  mytable</div><div class="line">Cochran-Mantel-Haenszel M^<span class="number">2</span> = <span class="number">14.632</span>, df = <span class="number">2</span>, p-value = <span class="number">0.0006647</span></div></pre></td></tr></table></figure>
<h3 id="（3）相关性的度量"><a href="#（3）相关性的度量" class="headerlink" title="（3）相关性的度量"></a>（3）相关性的度量</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#相关性的检验</span></div><div class="line">&gt; <span class="comment">#二维列联表的phi系数、列联系数和Cramer’s V系数</span></div><div class="line">&gt; <span class="keyword">library</span>(vcd)</div><div class="line">&gt; mytable&lt;-xtabs(~Treatment+Improved, data = Arthritis)</div><div class="line">&gt; assocstats(mytable)</div><div class="line">                    X^<span class="number">2</span> df  P(&gt; X^<span class="number">2</span>)</div><div class="line">Likelihood Ratio <span class="number">13.530</span>  <span class="number">2</span> <span class="number">0.0011536</span></div><div class="line">Pearson          <span class="number">13.055</span>  <span class="number">2</span> <span class="number">0.0014626</span></div><div class="line"></div><div class="line">Phi-Coefficient   : <span class="literal">NA</span> </div><div class="line">Contingency Coeff.: <span class="number">0.367</span> </div><div class="line">Cramer-s V        : <span class="number">0.394</span> </div><div class="line">&gt; </div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#列联表转化为扁平表</span></div><div class="line">&gt; table2flat &lt;- <span class="keyword">function</span>(mytable) &#123;</div><div class="line">+   <span class="comment">#转换成扁平表包含频数</span></div><div class="line">+   df &lt;- as.data.frame(mytable)</div><div class="line">+   <span class="comment">#取得扁平表的行数与列数</span></div><div class="line">+   rows &lt;- dim(df)[<span class="number">1</span>]</div><div class="line">+   cols &lt;- dim(df)[<span class="number">2</span>]</div><div class="line">+   x &lt;- <span class="literal">NULL</span></div><div class="line">+   </div><div class="line">+   <span class="comment">#重新构造每一行，根据频数</span></div><div class="line">+   <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:rows) &#123;</div><div class="line">+     <span class="keyword">for</span> (j <span class="keyword">in</span> <span class="number">1</span>:df$Freq[i]) &#123;</div><div class="line">+       row &lt;- df[i, c(<span class="number">1</span>:(cols - <span class="number">1</span>))]</div><div class="line">+       x &lt;- rbind(x,row)</div><div class="line">+     &#125;</div><div class="line">+   &#125;</div><div class="line">+   </div><div class="line">+   <span class="comment">#重新对行名进行赋值</span></div><div class="line">+   row.names(x) &lt;- c(<span class="number">1</span>:dim(x)[<span class="number">1</span>])</div><div class="line">+   <span class="keyword">return</span>(x)</div><div class="line">+ &#125;</div><div class="line">&gt; table2flat(mytable)</div><div class="line">   Treatment Improved</div><div class="line"><span class="number">1</span>    Placebo     None</div><div class="line"><span class="number">2</span>    Placebo     None</div><div class="line"><span class="number">3</span>    Placebo     None</div><div class="line"><span class="number">4</span>    Placebo     None</div><div class="line"><span class="number">5</span>    Placebo     None</div><div class="line"><span class="number">6</span>    Placebo     None</div><div class="line"><span class="number">7</span>    Placebo     None</div><div class="line">…</div></pre></td></tr></table></figure>
<p>转换列联表为扁平表的函数</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#转换列联表为扁平表的函数：</span></div><div class="line"><span class="comment">#列联表转化为扁平表</span></div><div class="line">table2flat &lt;- <span class="keyword">function</span>(mytable) &#123;</div><div class="line">  <span class="comment">#转换成扁平表包含频数</span></div><div class="line">  df &lt;- as.data.frame(mytable)</div><div class="line">  <span class="comment">#取得扁平表的行数与列数</span></div><div class="line">  rows &lt;- dim(df)[<span class="number">1</span>]</div><div class="line">  cols &lt;- dim(df)[<span class="number">2</span>]</div><div class="line">  x &lt;- <span class="literal">NULL</span></div><div class="line">  </div><div class="line">  <span class="comment">#重新构造每一行，根据频数</span></div><div class="line">  <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:rows) &#123;</div><div class="line">    <span class="keyword">for</span> (j <span class="keyword">in</span> <span class="number">1</span>:df$Freq[i]) &#123;</div><div class="line">      row &lt;- df[i, c(<span class="number">1</span>:(cols - <span class="number">1</span>))]</div><div class="line">      x &lt;- rbind(x,row)</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  </div><div class="line">  <span class="comment">#重新对行名进行赋值</span></div><div class="line">  row.names(x) &lt;- c(<span class="number">1</span>:dim(x)[<span class="number">1</span>])</div><div class="line">  <span class="keyword">return</span>(x)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="3、相关"><a href="#3、相关" class="headerlink" title="3、相关"></a>3、相关</h2><h3 id="（1）相关的类型"><a href="#（1）相关的类型" class="headerlink" title="（1）相关的类型"></a>（1）相关的类型</h3><p>相关性系数包含包括Pearson相关系数、 Spearman相关系数、 Kendall相关系数、偏相关系数、多分格（polychoric）相关系数和多系列（polyserial）相关系数。下面让我们依次理解这些相关系数。</p>
<p>Pearson、 Spearman和Kendall相关</p>
<ul>
<li>Pearson积差相关系数衡量了两个定量变量之间的线性相关程度。</li>
<li>Spearman等级相关系数则衡量分级定序变量之间的相关程度。 </li>
<li>Kendall’s Tau相关系数也是一种非参数的等级相关度量。</li>
</ul>
<p>cor函数可以计算三种相关性系数：<code>cor(x, use= ,method= )</code>，<code>cov</code>可以计算协方差</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>x</td>
<td>矩阵或数据框</td>
</tr>
<tr>
<td>use</td>
<td>指定缺失数据的处理方式。可选的方式为all.obs（假设不存在缺失数据——遇到缺失数据时将报错）、 everything  （默认参数，遇到缺失数据时，相关系数的计算结果将被设为missing）、 complete.obs（行删除）以及 pairwise.complete.obs（成对删除， pairwise deletion）</td>
</tr>
<tr>
<td>method</td>
<td>指定相关系数的类型。可选类型为pearson（默认）、 spearman或kendall</td>
</tr>
</tbody>
</table>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#相关性系数</span></div><div class="line">&gt; </div><div class="line">&gt; state &lt;- state.x77[,<span class="number">1</span>:<span class="number">6</span>]</div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#协方差</span></div><div class="line">&gt; cov(state)</div><div class="line">              Population      Income   Illiteracy     Life Exp      Murder      HS Grad</div><div class="line">Population <span class="number">19931683.7588</span> <span class="number">571229.7796</span>  <span class="number">292.8679592</span> -<span class="number">407.8424612</span> <span class="number">5663.523714</span> -<span class="number">3551.509551</span></div><div class="line">Income       <span class="number">571229.7796</span> <span class="number">377573.3061</span> -<span class="number">163.7020408</span>  <span class="number">280.6631837</span> -<span class="number">521.894286</span>  <span class="number">3076.768980</span></div><div class="line">Illiteracy      <span class="number">292.8680</span>   -<span class="number">163.7020</span>    <span class="number">0.3715306</span>   -<span class="number">0.4815122</span>    <span class="number">1.581776</span>    -<span class="number">3.235469</span></div><div class="line">Life Exp       -<span class="number">407.8425</span>    <span class="number">280.6632</span>   -<span class="number">0.4815122</span>    <span class="number">1.8020204</span>   -<span class="number">3.869480</span>     <span class="number">6.312685</span></div><div class="line">Murder         <span class="number">5663.5237</span>   -<span class="number">521.8943</span>    <span class="number">1.5817755</span>   -<span class="number">3.8694804</span>   <span class="number">13.627465</span>   -<span class="number">14.549616</span></div><div class="line">HS Grad       -<span class="number">3551.5096</span>   <span class="number">3076.7690</span>   -<span class="number">3.2354694</span>    <span class="number">6.3126849</span>  -<span class="number">14.549616</span>    <span class="number">65.237894</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#相关系数</span></div><div class="line">&gt; cor(state)</div><div class="line">            Population     Income Illiteracy    Life Exp     Murder     HS Grad</div><div class="line">Population  <span class="number">1.00000000</span>  <span class="number">0.2082276</span>  <span class="number">0.1076224</span> -<span class="number">0.06805195</span>  <span class="number">0.3436428</span> -<span class="number">0.09848975</span></div><div class="line">Income      <span class="number">0.20822756</span>  <span class="number">1.0000000</span> -<span class="number">0.4370752</span>  <span class="number">0.34025534</span> -<span class="number">0.2300776</span>  <span class="number">0.61993232</span></div><div class="line">Illiteracy  <span class="number">0.10762237</span> -<span class="number">0.4370752</span>  <span class="number">1.0000000</span> -<span class="number">0.58847793</span>  <span class="number">0.7029752</span> -<span class="number">0.65718861</span></div><div class="line">Life Exp   -<span class="number">0.06805195</span>  <span class="number">0.3402553</span> -<span class="number">0.5884779</span>  <span class="number">1.00000000</span> -<span class="number">0.7808458</span>  <span class="number">0.58221620</span></div><div class="line">Murder      <span class="number">0.34364275</span> -<span class="number">0.2300776</span>  <span class="number">0.7029752</span> -<span class="number">0.78084575</span>  <span class="number">1.0000000</span> -<span class="number">0.48797102</span></div><div class="line">HS Grad    -<span class="number">0.09848975</span>  <span class="number">0.6199323</span> -<span class="number">0.6571886</span>  <span class="number">0.58221620</span> -<span class="number">0.4879710</span>  <span class="number">1.00000000</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#相关系数</span></div><div class="line">&gt; cor(state, method=<span class="string">"spearman"</span>)</div><div class="line">           Population     Income Illiteracy   Life Exp     Murder    HS Grad</div><div class="line">Population  <span class="number">1.0000000</span>  <span class="number">0.1246098</span>  <span class="number">0.3130496</span> -<span class="number">0.1040171</span>  <span class="number">0.3457401</span> -<span class="number">0.3833649</span></div><div class="line">Income      <span class="number">0.1246098</span>  <span class="number">1.0000000</span> -<span class="number">0.3145948</span>  <span class="number">0.3241050</span> -<span class="number">0.2174623</span>  <span class="number">0.5104809</span></div><div class="line">Illiteracy  <span class="number">0.3130496</span> -<span class="number">0.3145948</span>  <span class="number">1.0000000</span> -<span class="number">0.5553735</span>  <span class="number">0.6723592</span> -<span class="number">0.6545396</span></div><div class="line">Life Exp   -<span class="number">0.1040171</span>  <span class="number">0.3241050</span> -<span class="number">0.5553735</span>  <span class="number">1.0000000</span> -<span class="number">0.7802406</span>  <span class="number">0.5239410</span></div><div class="line">Murder      <span class="number">0.3457401</span> -<span class="number">0.2174623</span>  <span class="number">0.6723592</span> -<span class="number">0.7802406</span>  <span class="number">1.0000000</span> -<span class="number">0.4367330</span></div><div class="line">HS Grad    -<span class="number">0.3833649</span>  <span class="number">0.5104809</span> -<span class="number">0.6545396</span>  <span class="number">0.5239410</span> -<span class="number">0.4367330</span>  <span class="number">1.0000000</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#默认情况显示方阵也可以非方阵进行显示</span></div><div class="line">&gt; x&lt;-state[,c(<span class="string">"Population"</span>,<span class="string">"Income"</span>,<span class="string">"Illiteracy"</span>,<span class="string">"HS Grad"</span>)]</div><div class="line">&gt; y&lt;-state[,c(<span class="string">"Life Exp"</span>,<span class="string">"Murder"</span>)]</div><div class="line">&gt; </div><div class="line">&gt; cor(x,y)</div><div class="line">              Life Exp     Murder</div><div class="line">Population -<span class="number">0.06805195</span>  <span class="number">0.3436428</span></div><div class="line">Income      <span class="number">0.34025534</span> -<span class="number">0.2300776</span></div><div class="line">Illiteracy -<span class="number">0.58847793</span>  <span class="number">0.7029752</span></div><div class="line">HS Grad     <span class="number">0.58221620</span> -<span class="number">0.4879710</span></div></pre></td></tr></table></figure>
<p>偏相关<br><code>pcor(u, S)</code></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#偏相关</span></div><div class="line">&gt; <span class="comment">#pcor(u, S) u为数值向量，前两个为要计算相关的下标，其余为控制变量</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="keyword">library</span>(ggm)</div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#在控制收入 文盲率 高中毕业率时，人口和谋杀率的偏相关系数</span></div><div class="line">&gt; pcor(c(<span class="number">1</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">6</span>), cov(state))</div><div class="line">[<span class="number">1</span>] <span class="number">0.3462724</span></div></pre></td></tr></table></figure>
<h3 id="（2）相关的显著性检验"><a href="#（2）相关的显著性检验" class="headerlink" title="（2）相关的显著性检验"></a>（2）相关的显著性检验</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#相关性的显著性检验</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#cor.test(x,y, alternative = ,method = )</span></div><div class="line">&gt; <span class="comment">#x,y为检验的变量，alternative标识指定双侧检验或者单侧检验，two.side(默认), less(一般为相关系数&lt;0) or greater(~&gt;0)</span></div><div class="line">&gt; <span class="comment">#method用于指定计算的相关类型，pearson, kendall,  spearman</span></div><div class="line">&gt; </div><div class="line">&gt; cor.test(state[,<span class="number">3</span>],state[,<span class="number">5</span>])</div><div class="line"></div><div class="line">	Pearson-s product-moment correlation</div><div class="line"></div><div class="line">data:  state[, <span class="number">3</span>] and state[, <span class="number">5</span>]</div><div class="line">t = <span class="number">6.8479</span>, df = <span class="number">48</span>, p-value = <span class="number">1.258e-08</span></div><div class="line">alternative hypothesis: true correlation is not equal to <span class="number">0</span></div><div class="line"><span class="number">95</span> percent confidence interval:</div><div class="line"> <span class="number">0.5279280</span> <span class="number">0.8207295</span></div><div class="line">sample estimates:</div><div class="line">      cor </div><div class="line"><span class="number">0.7029752</span> </div><div class="line"></div><div class="line">&gt; </div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#cor.test只能计算一组变量，psych包corr.test计算多组变量并且计算不同的相关系数及其显著性参数</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="keyword">library</span>(psych)</div><div class="line">&gt; </div><div class="line">&gt; corr.test(state, use=<span class="string">"complete"</span>)</div><div class="line">Call:corr.test(x = state, use = <span class="string">"complete"</span>)</div><div class="line">Correlation matrix </div><div class="line">           Population Income Illiteracy Life Exp Murder HS Grad</div><div class="line">Population       <span class="number">1.00</span>   <span class="number">0.21</span>       <span class="number">0.11</span>    -<span class="number">0.07</span>   <span class="number">0.34</span>   -<span class="number">0.10</span></div><div class="line">Income           <span class="number">0.21</span>   <span class="number">1.00</span>      -<span class="number">0.44</span>     <span class="number">0.34</span>  -<span class="number">0.23</span>    <span class="number">0.62</span></div><div class="line">Illiteracy       <span class="number">0.11</span>  -<span class="number">0.44</span>       <span class="number">1.00</span>    -<span class="number">0.59</span>   <span class="number">0.70</span>   -<span class="number">0.66</span></div><div class="line">Life Exp        -<span class="number">0.07</span>   <span class="number">0.34</span>      -<span class="number">0.59</span>     <span class="number">1.00</span>  -<span class="number">0.78</span>    <span class="number">0.58</span></div><div class="line">Murder           <span class="number">0.34</span>  -<span class="number">0.23</span>       <span class="number">0.70</span>    -<span class="number">0.78</span>   <span class="number">1.00</span>   -<span class="number">0.49</span></div><div class="line">HS Grad         -<span class="number">0.10</span>   <span class="number">0.62</span>      -<span class="number">0.66</span>     <span class="number">0.58</span>  -<span class="number">0.49</span>    <span class="number">1.00</span></div><div class="line">Sample Size </div><div class="line">[<span class="number">1</span>] <span class="number">50</span></div><div class="line">Probability values (Entries above the diagonal are adjusted <span class="keyword">for</span> multiple tests.) </div><div class="line">           Population Income Illiteracy Life Exp Murder HS Grad</div><div class="line">Population       <span class="number">0.00</span>   <span class="number">0.59</span>       <span class="number">1.00</span>      <span class="number">1.0</span>   <span class="number">0.10</span>       <span class="number">1</span></div><div class="line">Income           <span class="number">0.15</span>   <span class="number">0.00</span>       <span class="number">0.01</span>      <span class="number">0.1</span>   <span class="number">0.54</span>       <span class="number">0</span></div><div class="line">Illiteracy       <span class="number">0.46</span>   <span class="number">0.00</span>       <span class="number">0.00</span>      <span class="number">0.0</span>   <span class="number">0.00</span>       <span class="number">0</span></div><div class="line">Life Exp         <span class="number">0.64</span>   <span class="number">0.02</span>       <span class="number">0.00</span>      <span class="number">0.0</span>   <span class="number">0.00</span>       <span class="number">0</span></div><div class="line">Murder           <span class="number">0.01</span>   <span class="number">0.11</span>       <span class="number">0.00</span>      <span class="number">0.0</span>   <span class="number">0.00</span>       <span class="number">0</span></div><div class="line">HS Grad          <span class="number">0.50</span>   <span class="number">0.00</span>       <span class="number">0.00</span>      <span class="number">0.0</span>   <span class="number">0.00</span>       <span class="number">0</span></div><div class="line"></div><div class="line"> To see confidence intervals of the correlations, print with the short=<span class="literal">FALSE</span> option</div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#use=的取值可为"pairwise"或"complete"（分别表示对缺失值执行成对删除或行删</span></div><div class="line">&gt; <span class="comment">#除） 。参数method=的取值可为"pearson"（默认值）、 "spearman"或"kendall"。</span></div><div class="line">&gt; <span class="comment">#偏相关显著性检验可使用pcor.test(r, q, n) r=偏相关系数，q=控制变量的位置，n=样本大小</span></div><div class="line">&gt; </div><div class="line">&gt; pcor.test(pcor(c(<span class="number">1</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">6</span>), cov(state)),<span class="number">2</span>,<span class="number">50</span>)</div><div class="line">$tval</div><div class="line">[<span class="number">1</span>] <span class="number">2.503409</span></div><div class="line"></div><div class="line">$df</div><div class="line">[<span class="number">1</span>] <span class="number">46</span></div><div class="line"></div><div class="line">$pvalue</div><div class="line">[<span class="number">1</span>] <span class="number">0.01591253</span></div></pre></td></tr></table></figure>
<h2 id="4、T检验"><a href="#4、T检验" class="headerlink" title="4、T检验"></a>4、T检验</h2><h3 id="（1）独立样本的T检验"><a href="#（1）独立样本的T检验" class="headerlink" title="（1）独立样本的T检验"></a>（1）独立样本的T检验</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#t检验</span></div><div class="line">&gt; <span class="comment">#使用MASS包中的UScrime数据集。它包含了1960年美国47个州的刑</span></div><div class="line">&gt; <span class="comment">#罚制度对犯罪率影响的信息。我们感兴趣的结果变量为Prob（监禁的概率） 、 U1（14~24岁年龄</span></div><div class="line">&gt; <span class="comment">#段城市男性失业率）和U2（35~39岁年龄段城市男性失业率）。类别型变量So（指示该州是否位</span></div><div class="line">&gt; <span class="comment">#于南方的指示变量）将作为分组变量使用。</span></div><div class="line">&gt; <span class="keyword">library</span>(MASS)</div><div class="line">&gt; </div><div class="line">&gt; describe(UScrime)</div><div class="line">     vars  n   mean     sd median trimmed    mad    min     max   range  skew kurtosis    se</div><div class="line">M       <span class="number">1</span> <span class="number">47</span> <span class="number">138.57</span>  <span class="number">12.57</span> <span class="number">136.00</span>  <span class="number">137.54</span>  <span class="number">11.86</span> <span class="number">119.00</span>  <span class="number">177.00</span>   <span class="number">58.00</span>  <span class="number">0.82</span>     <span class="number">0.38</span>  <span class="number">1.83</span></div><div class="line">So      <span class="number">2</span> <span class="number">47</span>   <span class="number">0.34</span>   <span class="number">0.48</span>   <span class="number">0.00</span>    <span class="number">0.31</span>   <span class="number">0.00</span>   <span class="number">0.00</span>    <span class="number">1.00</span>    <span class="number">1.00</span>  <span class="number">0.65</span>    -<span class="number">1.61</span>  <span class="number">0.07</span></div><div class="line">Ed      <span class="number">3</span> <span class="number">47</span> <span class="number">105.64</span>  <span class="number">11.19</span> <span class="number">108.00</span>  <span class="number">105.90</span>  <span class="number">11.86</span>  <span class="number">87.00</span>  <span class="number">122.00</span>   <span class="number">35.00</span> -<span class="number">0.32</span>    -<span class="number">1.15</span>  <span class="number">1.63</span></div><div class="line">Po1     <span class="number">4</span> <span class="number">47</span>  <span class="number">85.00</span>  <span class="number">29.72</span>  <span class="number">78.00</span>   <span class="number">82.13</span>  <span class="number">28.17</span>  <span class="number">45.00</span>  <span class="number">166.00</span>  <span class="number">121.00</span>  <span class="number">0.89</span>     <span class="number">0.16</span>  <span class="number">4.33</span></div><div class="line">Po2     <span class="number">5</span> <span class="number">47</span>  <span class="number">80.23</span>  <span class="number">27.96</span>  <span class="number">73.00</span>   <span class="number">77.59</span>  <span class="number">28.17</span>  <span class="number">41.00</span>  <span class="number">157.00</span>  <span class="number">116.00</span>  <span class="number">0.84</span>     <span class="number">0.01</span>  <span class="number">4.08</span></div><div class="line">LF      <span class="number">6</span> <span class="number">47</span> <span class="number">561.19</span>  <span class="number">40.41</span> <span class="number">560.00</span>  <span class="number">559.87</span>  <span class="number">45.96</span> <span class="number">480.00</span>  <span class="number">641.00</span>  <span class="number">161.00</span>  <span class="number">0.27</span>    -<span class="number">0.89</span>  <span class="number">5.89</span></div><div class="line">M.F     <span class="number">7</span> <span class="number">47</span> <span class="number">983.02</span>  <span class="number">29.47</span> <span class="number">977.00</span>  <span class="number">980.23</span>  <span class="number">19.27</span> <span class="number">934.00</span> <span class="number">1071.00</span>  <span class="number">137.00</span>  <span class="number">0.99</span>     <span class="number">0.65</span>  <span class="number">4.30</span></div><div class="line">Pop     <span class="number">8</span> <span class="number">47</span>  <span class="number">36.62</span>  <span class="number">38.07</span>  <span class="number">25.00</span>   <span class="number">29.95</span>  <span class="number">22.24</span>   <span class="number">3.00</span>  <span class="number">168.00</span>  <span class="number">165.00</span>  <span class="number">1.85</span>     <span class="number">3.08</span>  <span class="number">5.55</span></div><div class="line">NW      <span class="number">9</span> <span class="number">47</span> <span class="number">101.13</span> <span class="number">102.83</span>  <span class="number">76.00</span>   <span class="number">85.56</span>  <span class="number">77.10</span>   <span class="number">2.00</span>  <span class="number">423.00</span>  <span class="number">421.00</span>  <span class="number">1.38</span>     <span class="number">1.08</span> <span class="number">15.00</span></div><div class="line">U1     <span class="number">10</span> <span class="number">47</span>  <span class="number">95.47</span>  <span class="number">18.03</span>  <span class="number">92.00</span>   <span class="number">93.69</span>  <span class="number">17.79</span>  <span class="number">70.00</span>  <span class="number">142.00</span>   <span class="number">72.00</span>  <span class="number">0.77</span>    -<span class="number">0.13</span>  <span class="number">2.63</span></div><div class="line">U2     <span class="number">11</span> <span class="number">47</span>  <span class="number">33.98</span>   <span class="number">8.45</span>  <span class="number">34.00</span>   <span class="number">33.49</span>   <span class="number">8.90</span>  <span class="number">20.00</span>   <span class="number">58.00</span>   <span class="number">38.00</span>  <span class="number">0.54</span>     <span class="number">0.17</span>  <span class="number">1.23</span></div><div class="line">GDP    <span class="number">12</span> <span class="number">47</span> <span class="number">525.38</span>  <span class="number">96.49</span> <span class="number">537.00</span>  <span class="number">528.67</span> <span class="number">111.19</span> <span class="number">288.00</span>  <span class="number">689.00</span>  <span class="number">401.00</span> -<span class="number">0.38</span>    -<span class="number">0.61</span> <span class="number">14.07</span></div><div class="line">Ineq   <span class="number">13</span> <span class="number">47</span> <span class="number">194.00</span>  <span class="number">39.90</span> <span class="number">176.00</span>  <span class="number">192.79</span>  <span class="number">35.58</span> <span class="number">126.00</span>  <span class="number">276.00</span>  <span class="number">150.00</span>  <span class="number">0.37</span>    -<span class="number">1.14</span>  <span class="number">5.82</span></div><div class="line">Prob   <span class="number">14</span> <span class="number">47</span>   <span class="number">0.05</span>   <span class="number">0.02</span>   <span class="number">0.04</span>    <span class="number">0.05</span>   <span class="number">0.02</span>   <span class="number">0.01</span>    <span class="number">0.12</span>    <span class="number">0.11</span>  <span class="number">0.88</span>     <span class="number">0.75</span>  <span class="number">0.00</span></div><div class="line">Time   <span class="number">15</span> <span class="number">47</span>  <span class="number">26.60</span>   <span class="number">7.09</span>  <span class="number">25.80</span>   <span class="number">26.35</span>   <span class="number">6.37</span>  <span class="number">12.20</span>   <span class="number">44.00</span>   <span class="number">31.80</span>  <span class="number">0.37</span>    -<span class="number">0.41</span>  <span class="number">1.03</span></div><div class="line">y      <span class="number">16</span> <span class="number">47</span> <span class="number">905.09</span> <span class="number">386.76</span> <span class="number">831.00</span>  <span class="number">863.05</span> <span class="number">314.31</span> <span class="number">342.00</span> <span class="number">1993.00</span> <span class="number">1651.00</span>  <span class="number">1.05</span>     <span class="number">0.78</span> <span class="number">56.42</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#独立样本T检验</span></div><div class="line">&gt; <span class="comment">#t检验的假设两组数据独立且源自正太总体，调用格式</span></div><div class="line">&gt; <span class="comment">#t.test(y~x, data) y为数值型，x为二分型变量</span></div><div class="line">&gt; <span class="comment">#t.test(y1,y2) 均为数值型变量，data为可选，表示包含这些变量的矩阵或数据框</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#t检验默认方差不相等，var.equal=TRUE以假定方差相等</span></div><div class="line">&gt; <span class="comment">#默认备择假设是双侧（均值不相等，大小的方向不确定）</span></div><div class="line">&gt; <span class="comment">#可添加alternative="less" 或 alternative="greater"进行有方向的检验</span></div><div class="line">&gt; </div><div class="line">&gt; t.test(Prob~So, data=UScrime)</div><div class="line"></div><div class="line">	Welch Two Sample t-test</div><div class="line"></div><div class="line">data:  Prob by So</div><div class="line">t = -<span class="number">3.8954</span>, df = <span class="number">24.925</span>, p-value = <span class="number">0.0006506</span></div><div class="line">alternative hypothesis: true difference <span class="keyword">in</span> means is not equal to <span class="number">0</span></div><div class="line"><span class="number">95</span> percent confidence interval:</div><div class="line"> -<span class="number">0.03852569</span> -<span class="number">0.01187439</span></div><div class="line">sample estimates:</div><div class="line">mean <span class="keyword">in</span> group <span class="number">0</span> mean <span class="keyword">in</span> group <span class="number">1</span> </div><div class="line">     <span class="number">0.03851265</span>      <span class="number">0.06371269</span></div></pre></td></tr></table></figure>
<h3 id="（2）非独立样本的T检验"><a href="#（2）非独立样本的T检验" class="headerlink" title="（2）非独立样本的T检验"></a>（2）非独立样本的T检验</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#非独立样本T检验</span></div><div class="line">&gt; <span class="comment">#t.test(y1, y2, paired=TRUE)</span></div><div class="line">&gt; </div><div class="line">&gt; with(UScrime, t.test(U1,U2, paired = <span class="literal">TRUE</span>))</div><div class="line"></div><div class="line">	Paired t-test</div><div class="line"></div><div class="line">data:  U1 and U2</div><div class="line">t = <span class="number">32.407</span>, df = <span class="number">46</span>, p-value &lt; <span class="number">2.2e-16</span></div><div class="line">alternative hypothesis: true difference <span class="keyword">in</span> means is not equal to <span class="number">0</span></div><div class="line"><span class="number">95</span> percent confidence interval:</div><div class="line"> <span class="number">57.67003</span> <span class="number">65.30870</span></div><div class="line">sample estimates:</div><div class="line">mean of the differences </div><div class="line">               <span class="number">61.48936</span> </div><div class="line"></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#多组使用方差分析，参见第七章</span></div></pre></td></tr></table></figure>
<h2 id="5、组间差异的非参数检验"><a href="#5、组间差异的非参数检验" class="headerlink" title="5、组间差异的非参数检验"></a>5、组间差异的非参数检验</h2><h3 id="（1）两组的情况"><a href="#（1）两组的情况" class="headerlink" title="（1）两组的情况"></a>（1）两组的情况</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#组间差异的非参数检验</span></div><div class="line">&gt; <span class="comment">#数据无法满足t检验或ANOVA的参数假设，可以转而使用非参数方法。即结果变量</span></div><div class="line">&gt; <span class="comment">#在本质上就严重偏倚或呈现有序关系，</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#两组的比较Wilcoxon秩和检验</span></div><div class="line">&gt; <span class="comment">#wilcox.test(y~x, data)</span></div><div class="line">&gt; <span class="comment">#或者 wilcox.test(y1,y2) data可选，类似t检验</span></div><div class="line">&gt; </div><div class="line">&gt; with(UScrime, by(Prob,So,median))</div><div class="line">So: <span class="number">0</span></div><div class="line">[<span class="number">1</span>] <span class="number">0.038201</span></div><div class="line">------------------------------------------------------------------------------- </div><div class="line">So: <span class="number">1</span></div><div class="line">[<span class="number">1</span>] <span class="number">0.055552</span></div><div class="line">&gt; </div><div class="line">&gt; </div><div class="line">&gt; wilcox.test(Prob~So, data=UScrime)</div><div class="line"></div><div class="line">	Wilcoxon rank sum test</div><div class="line"></div><div class="line">data:  Prob by So</div><div class="line">W = <span class="number">81</span>, p-value = <span class="number">8.488e-05</span></div><div class="line">alternative hypothesis: true location shift is not equal to <span class="number">0</span></div><div class="line"></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#p&lt;0.001拒绝0假设</span></div><div class="line">&gt; <span class="comment">#Wilcoxon符号秩检验是非独立样本t检验的一种非参数替代方法。它适用于两组成对数据和</span></div><div class="line">&gt; <span class="comment">#无法保证正态性假设的情境。</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#非独立的情况</span></div><div class="line">&gt; with(UScrime,wilcox.test(U1, U2, paired=<span class="literal">TRUE</span>))</div><div class="line"></div><div class="line">	Wilcoxon signed rank test with continuity correction</div><div class="line"></div><div class="line">data:  U1 and U2</div><div class="line">V = <span class="number">1128</span>, p-value = <span class="number">2.464e-09</span></div><div class="line">alternative hypothesis: true location shift is not equal to <span class="number">0</span></div><div class="line"></div><div class="line">Warning message:</div><div class="line">In wilcox.test.default(U1, U2, paired = <span class="literal">TRUE</span>) :</div><div class="line">  cannot compute exact p-value with ties</div></pre></td></tr></table></figure>
<h3 id="（2）多于两组的情况"><a href="#（2）多于两组的情况" class="headerlink" title="（2）多于两组的情况"></a>（2）多于两组的情况</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#多于两组的情况</span></div><div class="line">&gt; <span class="comment">#如果各组独立，则Kruskal—Wallis检验将是一种实用的方法。如果各组不独立（如重复测量设计或随机区</span></div><div class="line">&gt; <span class="comment">#组设计），那么Friedman检验会更合适。</span></div><div class="line">&gt; <span class="comment">#</span></div><div class="line">&gt; <span class="comment">#kruskal.test(y~A, data) y是一个数值型变量，A是一个拥有两个或更多水平的分组变量</span></div><div class="line">&gt; <span class="comment">#</span></div><div class="line">&gt; <span class="comment">#friedman.test(y~A|B, data) y是数值变量，A是分组变量，B用于认定匹配观测的区组变量</span></div><div class="line">&gt; <span class="comment">#</span></div><div class="line">&gt; <span class="comment">#文盲率问题</span></div><div class="line">&gt; <span class="comment">#添加地区名称数据</span></div><div class="line">&gt; states&lt;- as.data.frame(cbind(state.region, state.x77))</div><div class="line">&gt; </div><div class="line">&gt; kruskal.test(Illiteracy~state.region,data=states)</div><div class="line"></div><div class="line">	Kruskal-Wallis rank sum test</div><div class="line"></div><div class="line">data:  Illiteracy by state.region</div><div class="line">Kruskal-Wallis chi-squared = <span class="number">22.672</span>, df = <span class="number">3</span>, p-value = <span class="number">4.726e-05</span></div><div class="line"></div><div class="line">&gt; <span class="comment">#结果表明各地区的文盲率不同(p&lt;0.001)</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;基本统计分析&quot;&gt;&lt;a href=&quot;#基本统计分析&quot; class=&quot;headerlink&quot; title=&quot;基本统计分析&quot;&gt;&lt;/a&gt;基本统计分析&lt;/h1&gt;&lt;h2 id=&quot;1、描述性统计分析&quot;&gt;&lt;a href=&quot;#1、描述性统计分析&quot; class=&quot;headerlink
    
    </summary>
    
      <category term="R语言" scheme="https://pingansheng.github.io/categories/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R语言" scheme="https://pingansheng.github.io/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="R基本统计分析" scheme="https://pingansheng.github.io/tags/R%E5%9F%BA%E6%9C%AC%E7%BB%9F%E8%AE%A1%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>chapter06 基本图形</title>
    <link href="https://pingansheng.github.io/2017/01/06/chapter06-%E5%9F%BA%E6%9C%AC%E5%9B%BE%E5%BD%A2/"/>
    <id>https://pingansheng.github.io/2017/01/06/chapter06-基本图形/</id>
    <published>2017-01-06T05:58:07.000Z</published>
    <updated>2024-02-24T02:35:06.725Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本图形"><a href="#基本图形" class="headerlink" title="基本图形"></a>基本图形</h1><h2 id="1、条形图"><a href="#1、条形图" class="headerlink" title="1、条形图"></a>1、条形图</h2><p>安装包<code>install.packages(&quot;vcd&quot;)</code></p>
<p>安装包包含测试数据<code>Arthritis</code>，以及用户荆棘图组件<code>spinogram</code></p>
<h3 id="（1）简单的条形图"><a href="#（1）简单的条形图" class="headerlink" title="（1）简单的条形图"></a>（1）简单的条形图</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(<span class="string">"vcd"</span>)</div><div class="line">counts=table(Arthritis$Improved)</div><div class="line"><span class="comment">#简单条形图</span></div><div class="line">barplot(counts,main=<span class="string">"Simple Bar"</span>,xlab=<span class="string">"Improvement"</span>,ylab=<span class="string">"Count"</span>)</div><div class="line"><span class="comment">#水平条形图</span></div><div class="line">barplot(counts,main=<span class="string">"Simple Bar"</span>,xlab=<span class="string">"Improvement"</span>,ylab=<span class="string">"Count"</span>,horiz = <span class="literal">TRUE</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/01/06/chapter06-基本图形/image001.png" alt=""><br><img src="/2017/01/06/chapter06-基本图形/image002.png" alt=""></p>
<p>如果要绘制的类别型变量是一个因子或有序型因子，就可以使用函数plot()快速创建一幅垂直条形图。</p>
<h3 id="（2）堆砌条形图和分组条形图"><a href="#（2）堆砌条形图和分组条形图" class="headerlink" title="（2）堆砌条形图和分组条形图"></a>（2）堆砌条形图和分组条形图</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">count&lt;-table(Arthritis$Improved, Arthritis$Treatment)</div><div class="line"><span class="comment">#堆砌柱状图</span></div><div class="line">barplot(count,main=<span class="string">"Stacked Bar Plot"</span>, xlab=<span class="string">"Treatment"</span>, ylab=<span class="string">"Frequency"</span>, col=c(<span class="string">"red"</span>,<span class="string">"yellow"</span>,<span class="string">"green"</span>))</div><div class="line"><span class="comment">#用于调整不合适的图例位置，xpd表示可以在图外绘制</span></div><div class="line">legend(x=<span class="number">2</span>,y=<span class="number">50</span>,rownames(count),pch=c(<span class="number">15</span>,<span class="number">15</span>,<span class="number">15</span>),col=c(<span class="string">"red"</span>,<span class="string">"yellow"</span>,<span class="string">"green"</span>),horiz = <span class="literal">FALSE</span>,xpd=<span class="literal">TRUE</span>);</div><div class="line"><span class="comment">#分组柱状图</span></div><div class="line">barplot(count,main=<span class="string">"Stacked Bar Plot"</span>, xlab=<span class="string">"Treatment"</span>, ylab=<span class="string">"Frequency"</span>, col=c(<span class="string">"red"</span>,<span class="string">"yellow"</span>,<span class="string">"green"</span>),legend=rownames(count), beside=<span class="literal">TRUE</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/01/06/chapter06-基本图形/image003.png" alt=""><br><img src="/2017/01/06/chapter06-基本图形/image004.png" alt=""></p>
<h3 id="（3）均值条形图"><a href="#（3）均值条形图" class="headerlink" title="（3）均值条形图"></a>（3）均值条形图</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">states&lt;-data.frame(state.region,state.x77)</div><div class="line"></div><div class="line">means&lt;-aggregate(states$Illiteracy, by=list(state.region), FUN=mean)</div><div class="line">means&lt;-means[order(means$x),]</div><div class="line">bar&lt;-barplot(means$x,names.arg = means$Group.1)</div><div class="line"><span class="comment">#lines()可以加线，注意x=bar，不可以x= means$Group.1，原因是lines会使用不同的比例画线</span></div><div class="line"><span class="comment">#而bar则返回柱状图真正的x轴值</span></div><div class="line">lines(x=bar,y=means$x,type=<span class="string">"b"</span>,pch=<span class="number">22</span>,col=<span class="string">"red"</span>,lty=<span class="number">3</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/01/06/chapter06-基本图形/image005.png" alt=""></p>
<h3 id="（4）微调柱状图"><a href="#（4）微调柱状图" class="headerlink" title="（4）微调柱状图"></a>（4）微调柱状图</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">par(mar=c(<span class="number">5</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">2</span>))</div><div class="line">par(las=<span class="number">2</span>)</div><div class="line">counts=table(Arthritis$Improved)</div><div class="line"><span class="comment"># cex.names = 0.8字体比例</span></div><div class="line">barplot(counts,main=<span class="string">"Treatment Outcome"</span>,horiz = <span class="literal">TRUE</span>,cex.names = <span class="number">0.8</span>,</div><div class="line">        names.arg = c(<span class="string">"No Improvement"</span>,<span class="string">"Some Improvement"</span>,<span class="string">"Marked Improvement"</span>))</div></pre></td></tr></table></figure>
<p><img src="/2017/01/06/chapter06-基本图形/image006.png" alt=""></p>
<h3 id="（5）棘状图"><a href="#（5）棘状图" class="headerlink" title="（5）棘状图"></a>（5）棘状图</h3><p>棘状图对堆砌条形图进行了重缩放，这样每个条形的高度均为1，每一段的高度即表示比例。棘状图可由vcd包中的函数spine()绘制</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#棘状图</span></div><div class="line"><span class="keyword">library</span>(vcd)</div><div class="line"><span class="keyword">attach</span>(Arthritis)</div><div class="line">counts&lt;-table(Treatment, Improved)</div><div class="line">spine(counts, main=<span class="string">"Spinogram Example"</span>)</div><div class="line"><span class="keyword">detach</span>(Arthritis)</div></pre></td></tr></table></figure>
<p><img src="/2017/01/06/chapter06-基本图形/image007.png" alt=""></p>
<h2 id="2、饼图"><a href="#2、饼图" class="headerlink" title="2、饼图"></a>2、饼图</h2><h3 id="（1）饼图（表达信息能力弱，不推荐）"><a href="#（1）饼图（表达信息能力弱，不推荐）" class="headerlink" title="（1）饼图（表达信息能力弱，不推荐）"></a>（1）饼图（表达信息能力弱，不推荐）</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#饼图</span></div><div class="line">par(mfrow=c(<span class="number">2</span>,<span class="number">2</span>))</div><div class="line">slices &lt;- c(<span class="number">10</span>,<span class="number">12</span>,<span class="number">4</span>,<span class="number">16</span>,<span class="number">8</span>)</div><div class="line">lbls&lt;-c(<span class="string">"US"</span>,<span class="string">"UK"</span>,<span class="string">"Australia"</span>,<span class="string">"Germany"</span>,<span class="string">"France"</span>)</div><div class="line">pie(slices,labels = lbls,main=<span class="string">"Simple Pie Chart"</span>)</div><div class="line"></div><div class="line">pct&lt;-round(slices/sum(slices)*<span class="number">100</span>)</div><div class="line">lbls2&lt;-paste(lbls, <span class="string">" "</span>,pct,<span class="string">"%"</span>,sep=<span class="string">""</span>)</div><div class="line">pie(slices, labels = lbls2,col=rainbow(length(lbls2)),main=<span class="string">"Pie Chart with Percentages"</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">library</span>(plotrix)</div><div class="line">pie3D(slices, labels=lbls, explode=<span class="number">0.1</span>, main=<span class="string">"3D Pie"</span>)</div><div class="line"></div><div class="line">mytable&lt;-table(state.region)</div><div class="line">lbls3&lt;-paste(names(mytable),<span class="string">"\n"</span>,mytable, sep=<span class="string">""</span>)</div><div class="line">pie(mytable, labels = lbls3,main=<span class="string">"Pie Chart from a Table"</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/01/06/chapter06-基本图形/image008.png" alt=""></p>
<h3 id="（2）折叠扇图"><a href="#（2）折叠扇图" class="headerlink" title="（2）折叠扇图"></a>（2）折叠扇图</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#折叠扇形</span></div><div class="line"><span class="keyword">library</span>(plotrix)</div><div class="line">slices &lt;- c(<span class="number">10</span>,<span class="number">12</span>,<span class="number">4</span>,<span class="number">16</span>,<span class="number">8</span>)</div><div class="line">lbls&lt;-c(<span class="string">"US"</span>,<span class="string">"UK"</span>,<span class="string">"Australia"</span>,<span class="string">"Germany"</span>,<span class="string">"France"</span>)</div><div class="line">fan.plot(slices,labels = lbls,main=<span class="string">"Simple Pie Chart"</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/01/06/chapter06-基本图形/image009.png" alt=""></p>
<h2 id="3、直方图"><a href="#3、直方图" class="headerlink" title="3、直方图"></a>3、直方图</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#直方图</span></div><div class="line">par(mfrow=c(<span class="number">2</span>,<span class="number">2</span>))</div><div class="line"></div><div class="line">hist(mtcars$mpg)</div><div class="line"></div><div class="line">hist(mtcars$mpg,breaks=<span class="number">12</span>,col=<span class="string">"red"</span>,xlab=<span class="string">"Miles Per Gallon"</span>, main=<span class="string">"Colored histogram with 12 bins"</span>)</div><div class="line"></div><div class="line">hist(mtcars$mpg,</div><div class="line">     freq=<span class="literal">FALSE</span>,</div><div class="line">     breaks=<span class="number">12</span>,</div><div class="line">     col=<span class="string">"red"</span>,</div><div class="line">     xlab=<span class="string">"Miles Per Gallon"</span>,</div><div class="line">     main=<span class="string">"HIstogram, rug plot, density curve"</span>)</div><div class="line"><span class="comment">#打散数据并添加一维数据图 jitter函数使得每个数随机增减一个值</span></div><div class="line">rug(jitter(mtcars$mpg))</div><div class="line"></div><div class="line">lines(density(mtcars$mpg), col=<span class="string">"blue"</span>, lwd=<span class="number">2</span>)</div><div class="line"></div><div class="line">x&lt;-mtcars$mpg</div><div class="line">h&lt;-hist(x,breaks=<span class="number">12</span>,col=<span class="string">"red"</span>,xlab=<span class="string">"Miles Per Gallon"</span>, main=<span class="string">"Histogram with normal curve and box"</span>)</div><div class="line"><span class="comment">#叠加正太曲线</span></div><div class="line">xfit&lt;-seq(min(x),max(x),length=<span class="number">40</span>)</div><div class="line">yfit&lt;-dnorm(xfit, mean=mean(x), sd=sd(x))</div><div class="line"></div><div class="line"><span class="comment">#此处对于y的处理参考一个建议公式，使得形态较好</span></div><div class="line">yfit&lt;-yfit*diff(h$mids[<span class="number">1</span>:<span class="number">2</span>])*length(x)</div><div class="line"></div><div class="line">lines(xfit,yfit,col=<span class="string">"blue"</span>, lwd=<span class="number">2</span>)</div><div class="line">box()</div></pre></td></tr></table></figure>
<p><img src="/2017/01/06/chapter06-基本图形/image010.png" alt=""></p>
<h2 id="4、核密度图"><a href="#4、核密度图" class="headerlink" title="4、核密度图"></a>4、核密度图</h2><p>估计随机变量的概率密度函数。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#核密度图</span></div><div class="line">par(mfrow=c(<span class="number">2</span>,<span class="number">1</span>))</div><div class="line"></div><div class="line">d&lt;-density(mtcars$mpg)</div><div class="line"></div><div class="line">plot(d)</div><div class="line"></div><div class="line">d&lt;-density(mtcars$mpg)</div><div class="line">plot(d,main=<span class="string">"Kernel Density of Miles Per Gallon"</span>)</div><div class="line">polygon(d, col=<span class="string">"red"</span>, border = <span class="string">"blue"</span>)</div><div class="line">rug(mtcars$mpg, col=<span class="string">"brown"</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/01/06/chapter06-基本图形/image011.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#用于对比多个组间差异的核密度图 使用sm包</span></div><div class="line">par(lwd=<span class="number">2</span>)</div><div class="line"><span class="keyword">library</span>(sm)</div><div class="line"><span class="keyword">attach</span>(mtcars)</div><div class="line"></div><div class="line">cyl.f &lt;- factor(cyl, levels= c(<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>), </div><div class="line">                labels = c(<span class="string">"4 cylinder"</span>, <span class="string">"6 cylinder"</span>,</div><div class="line">                           <span class="string">"8 cylinder"</span>))</div><div class="line"><span class="comment">#绘制对比类型的核密度图需要因子变量</span></div><div class="line">sm.density.compare(mpg, cyl, xlab=<span class="string">"Miles Per Gallon"</span>)</div><div class="line">title(main=<span class="string">"MPG Distribution by Car Cylinders"</span>)</div><div class="line"></div><div class="line"><span class="comment">#颜色用于填充图例</span></div><div class="line">colfill&lt;-c(<span class="number">2</span>:(<span class="number">1</span>+length(levels(cyl.f))))</div><div class="line"><span class="comment">#第一个参数表示用交互的方式放置图例</span></div><div class="line">legend(locator(<span class="number">1</span>), levels(cyl.f), fill=colfill)</div><div class="line"></div><div class="line"><span class="keyword">detach</span>(mtcars)</div></pre></td></tr></table></figure>
<p><img src="/2017/01/06/chapter06-基本图形/image012.png" alt=""></p>
<h2 id="5、箱线图"><a href="#5、箱线图" class="headerlink" title="5、箱线图"></a>5、箱线图</h2><p>箱线图（又称盒须图）通过绘制连续型变量的五数总括，即最小值、下四分位数（第25百分位数） 、中位数（第50百分位数）、上四分位数（第75百分位数）以及最大值，描述了连续型变量的分布。formula 参数例如：y ~ A*B则将为类别型变量A和B所有水平的两两组合生成数值型变量y的箱线图。</p>
<p><code>boxplot(formula, data=dataframe)</code></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#箱线图</span></div><div class="line">boxplot(mtcars$mpg, main=<span class="string">"Box plot"</span>, ylab=<span class="string">"Miles per Gallon"</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/01/06/chapter06-基本图形/image013.png" alt=""></p>
<h3 id="（1）并列箱线图跨组比较"><a href="#（1）并列箱线图跨组比较" class="headerlink" title="（1）并列箱线图跨组比较"></a>（1）并列箱线图跨组比较</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#对比箱线图</span></div><div class="line">boxplot(mpg ~ cyl, data=mtcars, main=<span class="string">"Car Mileage Data"</span>, xlab=<span class="string">"Number of Cylinders"</span>, ylab=<span class="string">"Miles Per Gallon"</span>,varwidth=<span class="literal">TRUE</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/01/06/chapter06-基本图形/image014.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#凹槽箱线图notch=TRUE,研究表明若两个箱的凹槽互不重叠，则表明它们的中位数有显著差异</span></div><div class="line">boxplot(notch=<span class="literal">TRUE</span>,</div><div class="line">        mpg ~ cyl, </div><div class="line">        data=mtcars,</div><div class="line">        col=<span class="string">"red"</span>,</div><div class="line">        main=<span class="string">"Car Mileage Data"</span>, </div><div class="line">        xlab=<span class="string">"Number of Cylinders"</span>, </div><div class="line">        ylab=<span class="string">"Miles Per Gallon"</span>,</div><div class="line">        varwidth=<span class="literal">TRUE</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/01/06/chapter06-基本图形/image015.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#多交叉因子箱线图</span></div><div class="line">mtcars$cyl.f&lt;- factor(mtcars$cyl,levels = c(<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>),</div><div class="line">                      labels = c(<span class="string">"4"</span>,<span class="string">"6"</span>,<span class="string">"8"</span>))</div><div class="line"></div><div class="line">mtcars$am.f&lt;- factor(mtcars$am,levels = c(<span class="number">0</span>,<span class="number">1</span>),</div><div class="line">                      labels = c(<span class="string">"auto"</span>,<span class="string">"standard"</span>))</div><div class="line"></div><div class="line"></div><div class="line">boxplot(mpg~am.f*cyl.f,</div><div class="line">        data=mtcars,</div><div class="line">        varwidth=<span class="literal">TRUE</span>,</div><div class="line">        col=c(<span class="string">"gold"</span>,<span class="string">"darkgreen"</span>),</div><div class="line">        main=<span class="string">"MPG Distribution by Auto Type"</span>, </div><div class="line">        xlab=<span class="string">"Auto Type"</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/01/06/chapter06-基本图形/image016.png" alt=""></p>
<h3 id="（2）小提琴图"><a href="#（2）小提琴图" class="headerlink" title="（2）小提琴图"></a>（2）小提琴图</h3><p><code>Vioplot(x1,x2,…,names=,col=)</code></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(vioplot)</div><div class="line">x1&lt;-mtcars$mpg[mtcars$cyl==<span class="number">4</span>]</div><div class="line">x2&lt;-mtcars$mpg[mtcars$cyl==<span class="number">6</span>]</div><div class="line">x3&lt;-mtcars$mpg[mtcars$cyl==<span class="number">8</span>]</div><div class="line">vioplot(x1,x2,x3,names=c(<span class="string">"4 cyl"</span>,<span class="string">"6 cyl"</span>,<span class="string">"8 cyl"</span>),</div><div class="line">        col=<span class="string">"gold"</span>)</div><div class="line">title(<span class="string">"公里数与油耗的小提琴图"</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/01/06/chapter06-基本图形/image017.png" alt=""></p>
<ul>
<li>在图中，白点是中位数，黑色盒型的范围是下四分位点到上四分位点，细黑线表示须。外部形状即为核密度估计。</li>
</ul>
<h2 id="6、点图"><a href="#6、点图" class="headerlink" title="6、点图"></a>6、点图</h2><p><code>dotchart(x,labels=)</code></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#点图</span></div><div class="line">dotchart(mtcars$mpg,labels = row.names(mtcars), cex=<span class="number">.7</span>, main=<span class="string">"Gas Mileage for Car Models"</span>, xlab=<span class="string">"Miles Per Gallon"</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/01/06/chapter06-基本图形/image018.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">x&lt;- mtcars[order(mtcars$mpg),]</div><div class="line">x$cyl &lt;- factor(x$cyl)</div><div class="line">x$color[x$cyl==<span class="number">4</span>]&lt;-<span class="string">"red"</span></div><div class="line">x$color[x$cyl==<span class="number">6</span>]&lt;-<span class="string">"blue"</span></div><div class="line">x$color[x$cyl==<span class="number">8</span>]&lt;-<span class="string">"darkgreen"</span></div><div class="line"></div><div class="line">dotchart(x$mpg,labels = row.names(x),</div><div class="line">         cex=<span class="number">.7</span>,</div><div class="line">         groups=x$cyl,</div><div class="line">         gcolor = <span class="string">"black"</span>,</div><div class="line">         color=x$color,</div><div class="line">         pch=<span class="number">19</span>,</div><div class="line">         main=<span class="string">"每种车型的加仑公里数，通过气缸分组"</span>,</div><div class="line">         xlab=<span class="string">"每加仑的公里数"</span></div><div class="line">         )</div></pre></td></tr></table></figure>
<p><img src="/2017/01/06/chapter06-基本图形/image019.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;基本图形&quot;&gt;&lt;a href=&quot;#基本图形&quot; class=&quot;headerlink&quot; title=&quot;基本图形&quot;&gt;&lt;/a&gt;基本图形&lt;/h1&gt;&lt;h2 id=&quot;1、条形图&quot;&gt;&lt;a href=&quot;#1、条形图&quot; class=&quot;headerlink&quot; title=&quot;1、条形图&quot;&gt;
    
    </summary>
    
      <category term="R语言" scheme="https://pingansheng.github.io/categories/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R语言" scheme="https://pingansheng.github.io/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="R基本图形" scheme="https://pingansheng.github.io/tags/R%E5%9F%BA%E6%9C%AC%E5%9B%BE%E5%BD%A2/"/>
    
  </entry>
  
  <entry>
    <title>chapter05 高级数据管理</title>
    <link href="https://pingansheng.github.io/2017/01/06/chapter05-%E9%AB%98%E7%BA%A7%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86/"/>
    <id>https://pingansheng.github.io/2017/01/06/chapter05-高级数据管理/</id>
    <published>2017-01-06T03:22:41.000Z</published>
    <updated>2024-02-24T02:35:06.614Z</updated>
    
    <content type="html"><![CDATA[<h1 id="高级数据管理"><a href="#高级数据管理" class="headerlink" title="高级数据管理"></a>高级数据管理</h1><h2 id="1、数值和字符处理函数"><a href="#1、数值和字符处理函数" class="headerlink" title="1、数值和字符处理函数"></a>1、数值和字符处理函数</h2><h3 id="（1）数学函数"><a href="#（1）数学函数" class="headerlink" title="（1）数学函数"></a>（1）数学函数</h3><table>
<thead>
<tr>
<th>函数</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>abs(x)</td>
<td>绝对值</td>
</tr>
<tr>
<td>sqrt(x)</td>
<td>平方根和25^(0.5)等价</td>
</tr>
<tr>
<td>ceiling(x)</td>
<td>不小于x的最小整数，正无穷方向取整</td>
</tr>
<tr>
<td>floor(x)</td>
<td>不大于x的最大整数，负无穷方向取整</td>
</tr>
<tr>
<td>trunc(x)</td>
<td>向 0 的方向截取的x中的整数部分</td>
</tr>
<tr>
<td>round(x, digits=n)</td>
<td>将x舍入为指定位的小数</td>
</tr>
<tr>
<td>signif(x, digits=n)</td>
<td>将x舍入为指定的有效数字位数，</td>
</tr>
<tr>
<td>signif(3.475, digits=2)</td>
<td>返回值为3.5</td>
</tr>
<tr>
<td>cos(x)、 sin(x) 、 tan(x)</td>
<td>余弦、正弦和正切</td>
</tr>
<tr>
<td>acos(x) 、 asin(x) 、 atan(x)</td>
<td>反余弦、反正弦和反正切</td>
</tr>
<tr>
<td>cosh(x) 、 sinh(x) 、 tanh(x)</td>
<td>双曲余弦、双曲正弦和双曲正切</td>
</tr>
<tr>
<td>acosh(x) 、 asinh(x) 、 atanh(x)</td>
<td>反双曲余弦、反双曲正弦和反双曲正切</td>
</tr>
<tr>
<td>log(x,base=n)</td>
<td>n为底，x的对数</td>
</tr>
<tr>
<td>log(x)</td>
<td>e为底，x的对数</td>
</tr>
<tr>
<td>log10(x)</td>
<td>10为底，x的对数</td>
</tr>
<tr>
<td>exp(x)</td>
<td>e指数函数</td>
</tr>
</tbody>
</table>
<p>以上函数如果用于向量、矩阵或者数据框，则对每个元素进行运算。</p>
<h3 id="（2）统计函数"><a href="#（2）统计函数" class="headerlink" title="（2）统计函数"></a>（2）统计函数</h3><table>
<thead>
<tr>
<th>函数</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>mean(x)</td>
<td>均值</td>
</tr>
<tr>
<td>median(x)</td>
<td>中位数</td>
</tr>
<tr>
<td>sd(x)</td>
<td>标准差</td>
</tr>
<tr>
<td>var(x)</td>
<td>方差</td>
</tr>
<tr>
<td>mad(x)</td>
<td>绝对中位差</td>
</tr>
<tr>
<td>quantile(x,probs)</td>
<td>分位数，probs一个[0,1]之间的概率数值向量</td>
</tr>
<tr>
<td>range(x)</td>
<td>求值域</td>
</tr>
<tr>
<td>sum(x)</td>
<td>求和</td>
</tr>
<tr>
<td>diff(x, lag=n)</td>
<td>滞后差分，lag为滞后几项，默认为1</td>
</tr>
<tr>
<td>min(x)</td>
<td>最小值</td>
</tr>
<tr>
<td>max(x)</td>
<td>最大值</td>
</tr>
<tr>
<td>scale(x, center=TRUE, scale=TRUE)</td>
<td>为数据对象x按列进行中心化（center=TRUE）或标准化（center=TRUE,scale=TRUE）</td>
</tr>
</tbody>
</table>
<h3 id="（3）概率函数"><a href="#（3）概率函数" class="headerlink" title="（3）概率函数"></a>（3）概率函数</h3><table>
<thead>
<tr>
<th>分布</th>
<th>函数</th>
</tr>
</thead>
<tbody>
<tr>
<td>Beta分布</td>
<td>beta</td>
</tr>
<tr>
<td>Logistic分布</td>
<td>logis</td>
</tr>
<tr>
<td>二项分布</td>
<td>binom</td>
</tr>
<tr>
<td>多项分布</td>
<td>multinom</td>
</tr>
<tr>
<td>柯西分布</td>
<td>cauchy</td>
</tr>
<tr>
<td>负二项分布</td>
<td>nbinom</td>
</tr>
<tr>
<td>（非中心）卡方分布</td>
<td>chisq</td>
</tr>
<tr>
<td>正态分布</td>
<td>norm</td>
</tr>
<tr>
<td>指数分布</td>
<td>exp</td>
</tr>
<tr>
<td>泊松分布</td>
<td>pois</td>
</tr>
<tr>
<td>F分布</td>
<td>f</td>
</tr>
<tr>
<td>Wilcoxon符号秩分布</td>
<td>signrank</td>
</tr>
<tr>
<td>Gamma分布</td>
<td>gamma</td>
</tr>
<tr>
<td>t分布</td>
<td>t</td>
</tr>
<tr>
<td>几何分布</td>
<td>geom</td>
</tr>
<tr>
<td>均匀分布</td>
<td>unif</td>
</tr>
<tr>
<td>超几何分布</td>
<td>hyper</td>
</tr>
<tr>
<td>Weibull分布</td>
<td>weibull</td>
</tr>
<tr>
<td>对数正态分布</td>
<td>lnorm</td>
</tr>
<tr>
<td>Wilcoxon秩和分布</td>
<td>wilcox</td>
</tr>
</tbody>
</table>
<h4 id="1）、设定随机数种子"><a href="#1）、设定随机数种子" class="headerlink" title="1）、设定随机数种子"></a>1）、设定随机数种子</h4><p>set.seed(),这样可以重现结果</p>
<h4 id="2）、生成多元正态数据"><a href="#2）、生成多元正态数据" class="headerlink" title="2）、生成多元正态数据"></a>2）、生成多元正态数据</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(MASS)</div><div class="line"></div><div class="line">options(digits=<span class="number">3</span>)</div><div class="line">set.seed(<span class="number">1234</span>)</div><div class="line">mean=c(<span class="number">230.4</span>,<span class="number">123.2</span>,<span class="number">3.7</span>)</div><div class="line">sigma=matrix(c(<span class="number">15360.8</span>,<span class="number">6721.2</span>,-<span class="number">47.1</span>,<span class="number">6721.2</span>,<span class="number">4700.9</span>,-<span class="number">16.5</span>,-<span class="number">47.1</span>,-<span class="number">16.5</span>,<span class="number">0.3</span>),nrow=<span class="number">3</span>,ncol=<span class="number">3</span>)</div><div class="line"><span class="comment">#多元正态数据</span></div><div class="line">mydata=mvrnorm(<span class="number">50000</span>,mean,sigma)</div><div class="line">mydata=as.data.frame(mydata)</div><div class="line">names(mydata)=c(<span class="string">"x"</span>,<span class="string">"y"</span>,<span class="string">"z"</span>)</div><div class="line"></div><div class="line"><span class="comment">#三维散点图</span></div><div class="line"><span class="keyword">library</span>(scatterplot3d)</div><div class="line">scatterplot3d(mydata$x, mydata$y, mydata$z, highlight.3d=<span class="literal">TRUE</span>,col.axis=<span class="string">"blue"</span>, col.grid=<span class="string">"lightblue"</span>, main=<span class="string">"scatterplot3d - 2"</span>, pch=<span class="number">20</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/01/06/chapter05-高级数据管理/多元正太.png" alt=""></p>
<h3 id="（4）字符处理函数"><a href="#（4）字符处理函数" class="headerlink" title="（4）字符处理函数"></a>（4）字符处理函数</h3><table>
<thead>
<tr>
<th>函数</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>nchar(x)</td>
<td>返回字符数量</td>
</tr>
<tr>
<td>substr(x,start,stop)</td>
<td>提取货替换一个字符中的字串，substr(x,2,4)&lt;-“xxx”</td>
</tr>
<tr>
<td>grep(pattern, x, ignore. case=FALSE,fixed=FALSE)</td>
<td>在x中搜索某种模式,fixed=FALSE则表示为一个正则表达式，若fixed=TRUE则为文本，返回下标</td>
</tr>
<tr>
<td>sub(pattern, replacement,x, ignore. case=FALSE,fixed=FALSE)</td>
<td>在x中搜索某种模式,并替换为replacement,fixed=FALSE则表示为一个正则表达式，若fixed=TRUE则为文本</td>
</tr>
<tr>
<td>strsplit(x, split, fixed=FALSE)</td>
<td>拆分字符串，fix同上</td>
</tr>
<tr>
<td>paste(…, sep=””)</td>
<td>连接字符串，分隔符为sep</td>
</tr>
<tr>
<td>toupper(x)</td>
<td>to大写</td>
</tr>
<tr>
<td>tolower(x)</td>
<td>to小写</td>
</tr>
</tbody>
</table>
<h3 id="（5）其他函数"><a href="#（5）其他函数" class="headerlink" title="（5）其他函数"></a>（5）其他函数</h3><table>
<thead>
<tr>
<th>函数</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>length(x)</td>
<td>求长度</td>
</tr>
<tr>
<td>seq（from,to,by)</td>
<td>生成序列</td>
</tr>
<tr>
<td>rep（x,n)</td>
<td>X重复n次</td>
</tr>
<tr>
<td>cut(x,n)</td>
<td>将连续型变量x分割为有着n个水平的因子，使用选项ordered_result = TRUE以创建一个有序型因子</td>
</tr>
<tr>
<td>pretty(x,n)</td>
<td>创建美观的分割点。通过选取n+1个等间距的取整值，将一个连续型变量x分割为n个区间。绘图中常用</td>
</tr>
<tr>
<td>cat(. .., file =”myfile”,append =FALSE)</td>
<td>连接…中的对象，并将其输出到屏幕上或文件中（如果声明了一个的话）</td>
</tr>
</tbody>
</table>
<h3 id="（6）函数应用到矩阵或数据框"><a href="#（6）函数应用到矩阵或数据框" class="headerlink" title="（6）函数应用到矩阵或数据框"></a>（6）函数应用到矩阵或数据框</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">apply(x,MARGIN,FUN,…)</div><div class="line"><span class="comment">#x:数据对象</span></div><div class="line"><span class="comment">#MARGIN:1表示行，2表示列</span></div><div class="line"><span class="comment">#FUN：表示函数</span></div><div class="line"><span class="comment">#…：表示参数</span></div></pre></td></tr></table></figure>
<p>一个数据处理问题：按照姓名排序并且对成绩评级</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#初始化数据</span></div><div class="line">options(digits = <span class="number">2</span>)</div><div class="line">Student=c(<span class="string">"J D"</span>,<span class="string">"A W"</span>,<span class="string">"B M"</span>,<span class="string">"D J"</span>,<span class="string">"J M"</span>,<span class="string">"C C"</span>,<span class="string">"R Y"</span>,<span class="string">"G K"</span>,<span class="string">"J E"</span>,<span class="string">"M R"</span>)</div><div class="line">Math=c(<span class="number">502</span>,<span class="number">600</span>,<span class="number">412</span>,<span class="number">358</span>,<span class="number">495</span>,<span class="number">512</span>,<span class="number">410</span>,<span class="number">625</span>,<span class="number">573</span>,<span class="number">522</span>)</div><div class="line">Science=c(<span class="number">95</span>,<span class="number">99</span>,<span class="number">80</span>,<span class="number">82</span>,<span class="number">75</span>,<span class="number">85</span>,<span class="number">80</span>,<span class="number">95</span>,<span class="number">89</span>,<span class="number">86</span>)</div><div class="line">English=c(<span class="number">25</span>,<span class="number">22</span>,<span class="number">18</span>,<span class="number">15</span>,<span class="number">20</span>,<span class="number">28</span>,<span class="number">15</span>,<span class="number">30</span>,<span class="number">27</span>,<span class="number">18</span>)</div><div class="line">roster=data.frame(Student,Math,Science,English,stringsAsFactors = <span class="literal">FALSE</span>)</div><div class="line"></div><div class="line"><span class="comment">#归一化成绩</span></div><div class="line">z&lt;-scale(roster[,<span class="number">2</span>:<span class="number">4</span>])</div><div class="line"><span class="comment">#平均成绩</span></div><div class="line">score&lt;-apply(z,<span class="number">1</span>,mean)</div><div class="line"><span class="comment">#平均成绩加入数据框</span></div><div class="line">roster=cbind(roster,score)</div><div class="line"><span class="comment">#取成绩分位数</span></div><div class="line">y=quantile(score,c(<span class="number">.8</span>,<span class="number">.6</span>,<span class="number">.4</span>,<span class="number">.2</span>))</div><div class="line"></div><div class="line"><span class="comment">#新增级别变量并赋值</span></div><div class="line">roster$grade[score&gt;=y[<span class="number">1</span>]]&lt;-<span class="string">"A"</span></div><div class="line">roster$grade[score&gt;=y[<span class="number">2</span>] &amp; score&lt;y[<span class="number">1</span>]]&lt;-<span class="string">"B"</span></div><div class="line">roster$grade[score&gt;=y[<span class="number">3</span>] &amp; score&lt;y[<span class="number">2</span>]]&lt;-<span class="string">"C"</span></div><div class="line">roster$grade[score&gt;=y[<span class="number">4</span>] &amp; score&lt;y[<span class="number">3</span>]]&lt;-<span class="string">"D"</span></div><div class="line">roster$grade[score&lt;y[<span class="number">4</span>]]&lt;-<span class="string">"F"</span></div><div class="line"></div><div class="line"><span class="comment">#拆分姓名列为两列</span></div><div class="line">name=strsplit(roster$Student,<span class="string">" "</span>)</div><div class="line">lastname=sapply(name, <span class="string">"["</span>,<span class="number">2</span>)</div><div class="line">firstname=sapply(name, <span class="string">"["</span>,<span class="number">1</span>)</div><div class="line"><span class="comment">#重新加入姓名两列至数据框</span></div><div class="line">roster&lt;-cbind(firstname,lastname,roster[,-<span class="number">1</span>])</div><div class="line"><span class="comment">#按照姓名两列排序</span></div><div class="line">roster=roster[order(lastname,firstname),]</div></pre></td></tr></table></figure>
<h2 id="2、控制流"><a href="#2、控制流" class="headerlink" title="2、控制流"></a>2、控制流</h2><h3 id="（1）重复和循环"><a href="#（1）重复和循环" class="headerlink" title="（1）重复和循环"></a>（1）重复和循环</h3><ul>
<li>低效费时，尽量使用内建函数与apply函数</li>
</ul>
<p>1)</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#for:</span></div><div class="line"><span class="keyword">for</span> (var <span class="keyword">in</span> seq) statement</div><div class="line">		</div><div class="line"><span class="comment">#eg. </span></div><div class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:<span class="number">10</span>) print(<span class="string">"Hello world"</span>)</div></pre></td></tr></table></figure>
<p>2)</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#while：</span></div><div class="line"><span class="keyword">while</span>(cond) statement</div><div class="line"></div><div class="line"><span class="comment">#eg.</span></div><div class="line">i=<span class="number">0</span>;</div><div class="line"><span class="keyword">while</span>(i&lt;<span class="number">10</span>)</div><div class="line">&#123;</div><div class="line">  print(<span class="string">"x"</span>);i=i+<span class="number">1</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="（2）条件执行"><a href="#（2）条件执行" class="headerlink" title="（2）条件执行"></a>（2）条件执行</h3><p>1)</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#if-else结构</span></div><div class="line"><span class="keyword">if</span>(!is.character(date)) &#123;date2&lt;-as.factor(date)&#125; <span class="keyword">else</span> &#123;print(<span class="string">"Done"</span>)&#125;</div></pre></td></tr></table></figure>
<p>2) </p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#switch结构</span></div><div class="line">feeling&lt;-c(<span class="string">"sad"</span>,<span class="string">"afraid"</span>)</div><div class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> feeling)</div><div class="line">print(</div><div class="line">  <span class="keyword">switch</span>(i,</div><div class="line">         happy=<span class="string">"Happy"</span>,</div><div class="line">         sad=<span class="string">"Sad"</span>,</div><div class="line">         afraid=<span class="string">"afraid"</span>)</div><div class="line">)</div></pre></td></tr></table></figure>
<h2 id="3、用户自编函数"><a href="#3、用户自编函数" class="headerlink" title="3、用户自编函数"></a>3、用户自编函数</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#函数：</span></div><div class="line">mystats&lt;-<span class="keyword">function</span>(x,parametric=<span class="literal">TRUE</span>,print=<span class="literal">FALSE</span>)&#123;</div><div class="line">  <span class="keyword">if</span>(parametric)&#123;</div><div class="line">    center&lt;-mean(x);spread&lt;-sd(x)</div><div class="line">    centerStr&lt;- paste(<span class="string">"Mean="</span>,center,<span class="string">"\n"</span>,<span class="string">"SD="</span>,spread,<span class="string">"\n"</span>)</div><div class="line">  &#125;<span class="keyword">else</span>&#123;</div><div class="line">    center&lt;-median(x);spread&lt;-mad(x)</div><div class="line">    centerStr&lt;- paste(<span class="string">"Median="</span>,center,<span class="string">"\n"</span>,<span class="string">"MAD="</span>,spread,<span class="string">"\n"</span>)</div><div class="line">  &#125;</div><div class="line">  </div><div class="line">  <span class="keyword">if</span>(print)&#123;</div><div class="line">    cat(centerStr)</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> (list(center=center,spread=spread))</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">#使用：</span></div><div class="line">set.seed(<span class="number">1234</span>)</div><div class="line">x&lt;-rnorm(<span class="number">500</span>)</div><div class="line">y=mystats(x,parametric = <span class="literal">TRUE</span>,print = <span class="literal">FALSE</span>)</div><div class="line"></div><div class="line"><span class="comment">#函数：</span></div><div class="line">mydate&lt;-<span class="keyword">function</span>(type=<span class="string">"long"</span>)&#123;</div><div class="line">  <span class="keyword">switch</span>(type,</div><div class="line">         long=format(Sys.time(),<span class="string">"%A %B %d %Y"</span>),</div><div class="line">         short=format(Sys.time(),<span class="string">"%m-%d-%y"</span>),</div><div class="line">         cat(type,<span class="string">"is not a recognized type\n"</span>)</div><div class="line">         )</div><div class="line">&#125;</div><div class="line"><span class="comment">#使用：</span></div><div class="line">mydate(<span class="string">"short"</span>)</div></pre></td></tr></table></figure>
<h2 id="4、整合与重构"><a href="#4、整合与重构" class="headerlink" title="4、整合与重构"></a>4、整合与重构</h2><h3 id="（1）转置"><a href="#（1）转置" class="headerlink" title="（1）转置"></a>（1）转置</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cars&lt;-mtcars[<span class="number">1</span>:<span class="number">5</span>,<span class="number">1</span>:<span class="number">4</span>]</div><div class="line">t(cars)</div></pre></td></tr></table></figure>
<h3 id="（2）聚合函数"><a href="#（2）聚合函数" class="headerlink" title="（2）聚合函数"></a>（2）聚合函数</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#整合</span></div><div class="line">options(digits = <span class="number">3</span>)</div><div class="line"><span class="keyword">attach</span>(mtcars)</div><div class="line">aggdata=aggregate(mtcars,  by =list(气缸=cyl,档位=gear),FUN=mean,na.rm=<span class="literal">TRUE</span>)</div><div class="line">aggdata</div><div class="line"></div><div class="line"><span class="comment">#将所有数据按照气缸与档位进行分组，求均值</span></div><div class="line">        气缸 档位  mpg cyl disp  hp drat   wt qsec  vs   am gear carb</div><div class="line">    <span class="number">1</span>    <span class="number">4</span>    <span class="number">3</span> <span class="number">21.5</span>   <span class="number">4</span>  <span class="number">120</span>  <span class="number">97</span> <span class="number">3.70</span> <span class="number">2.46</span> <span class="number">20.0</span> <span class="number">1.0</span> <span class="number">0.00</span>    <span class="number">3</span> <span class="number">1.00</span></div><div class="line">    <span class="number">2</span>    <span class="number">6</span>    <span class="number">3</span> <span class="number">19.8</span>   <span class="number">6</span>  <span class="number">242</span> <span class="number">108</span> <span class="number">2.92</span> <span class="number">3.34</span> <span class="number">19.8</span> <span class="number">1.0</span> <span class="number">0.00</span>    <span class="number">3</span> <span class="number">1.00</span></div><div class="line">    <span class="number">3</span>    <span class="number">8</span>    <span class="number">3</span> <span class="number">15.1</span>   <span class="number">8</span>  <span class="number">358</span> <span class="number">194</span> <span class="number">3.12</span> <span class="number">4.10</span> <span class="number">17.1</span> <span class="number">0.0</span> <span class="number">0.00</span>    <span class="number">3</span> <span class="number">3.08</span></div><div class="line">    <span class="number">4</span>    <span class="number">4</span>    <span class="number">4</span> <span class="number">26.9</span>   <span class="number">4</span>  <span class="number">103</span>  <span class="number">76</span> <span class="number">4.11</span> <span class="number">2.38</span> <span class="number">19.6</span> <span class="number">1.0</span> <span class="number">0.75</span>    <span class="number">4</span> <span class="number">1.50</span></div><div class="line">    <span class="number">5</span>    <span class="number">6</span>    <span class="number">4</span> <span class="number">19.8</span>   <span class="number">6</span>  <span class="number">164</span> <span class="number">116</span> <span class="number">3.91</span> <span class="number">3.09</span> <span class="number">17.7</span> <span class="number">0.5</span> <span class="number">0.50</span>    <span class="number">4</span> <span class="number">4.00</span></div><div class="line">    <span class="number">6</span>    <span class="number">4</span>    <span class="number">5</span> <span class="number">28.2</span>   <span class="number">4</span>  <span class="number">108</span> <span class="number">102</span> <span class="number">4.10</span> <span class="number">1.83</span> <span class="number">16.8</span> <span class="number">0.5</span> <span class="number">1.00</span>    <span class="number">5</span> <span class="number">2.00</span></div><div class="line">    <span class="number">7</span>    <span class="number">6</span>    <span class="number">5</span> <span class="number">19.7</span>   <span class="number">6</span>  <span class="number">145</span> <span class="number">175</span> <span class="number">3.62</span> <span class="number">2.77</span> <span class="number">15.5</span> <span class="number">0.0</span> <span class="number">1.00</span>    <span class="number">5</span> <span class="number">6.00</span></div><div class="line">    <span class="number">8</span>    <span class="number">8</span>    <span class="number">5</span> <span class="number">15.4</span>   <span class="number">8</span>  <span class="number">326</span> <span class="number">300</span> <span class="number">3.88</span> <span class="number">3.37</span> <span class="number">14.6</span> <span class="number">0.0</span> <span class="number">1.00</span>    <span class="number">5</span> <span class="number">6.00</span></div></pre></td></tr></table></figure>
<h3 id="（3）reshape包"><a href="#（3）reshape包" class="headerlink" title="（3）reshape包"></a>（3）reshape包</h3><h4 id="1）融合"><a href="#1）融合" class="headerlink" title="1）融合"></a>1）融合</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#测试数据</span></div><div class="line">id=c(<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>)</div><div class="line">time=c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>)</div><div class="line">x1=c(<span class="number">5</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">2</span>)</div><div class="line">x2=c(<span class="number">6</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">4</span>)</div><div class="line"></div><div class="line">textData=data.frame(id,time,x1,x2,stringsAsFactors = <span class="literal">FALSE</span>)</div><div class="line">		</div><div class="line"><span class="keyword">library</span>(reshape)</div><div class="line"></div><div class="line">md&lt;-melt(textData, id=(c(<span class="string">"id"</span>,<span class="string">"time"</span>)))</div><div class="line"></div><div class="line">           id time x1 x2</div><div class="line">        <span class="number">1</span>  <span class="number">1</span>    <span class="number">1</span>  <span class="number">5</span>  <span class="number">6</span></div><div class="line">        <span class="number">2</span>  <span class="number">1</span>    <span class="number">2</span>  <span class="number">3</span>  <span class="number">5</span></div><div class="line">        <span class="number">3</span>  <span class="number">2</span>    <span class="number">1</span>  <span class="number">6</span>  <span class="number">1</span></div><div class="line">        <span class="number">4</span>  <span class="number">2</span>    <span class="number">2</span>  <span class="number">2</span>  <span class="number">4</span></div><div class="line"><span class="comment">#转换为</span></div><div class="line">           id time variable value</div><div class="line">        <span class="number">1</span>  <span class="number">1</span>    <span class="number">1</span>       x1     <span class="number">5</span></div><div class="line">        <span class="number">2</span>  <span class="number">1</span>    <span class="number">2</span>       x1     <span class="number">3</span></div><div class="line">        <span class="number">3</span>  <span class="number">2</span>    <span class="number">1</span>       x1     <span class="number">6</span></div><div class="line">        <span class="number">4</span>  <span class="number">2</span>    <span class="number">2</span>       x1     <span class="number">2</span></div><div class="line">        <span class="number">5</span>  <span class="number">1</span>    <span class="number">1</span>       x2     <span class="number">6</span></div><div class="line">        <span class="number">6</span>  <span class="number">1</span>    <span class="number">2</span>       x2     <span class="number">5</span></div><div class="line">        <span class="number">7</span>  <span class="number">2</span>    <span class="number">1</span>       x2     <span class="number">1</span></div><div class="line">        <span class="number">8</span>  <span class="number">2</span>    <span class="number">2</span>       x2     <span class="number">4</span></div></pre></td></tr></table></figure>
<h4 id="2）重铸"><a href="#2）重铸" class="headerlink" title="2）重铸"></a>2）重铸</h4><p><code>cast(md, formula,FUN) #md为已经融合的数据</code></p>
<p><code>formula: rowvar1 + rowvar2 +…~ colvar1 + colvar2 +…</code></p>
<p>在这一公式中， rowvar1 + rowvar2 + …定义了要划掉的变量集合，以确定各行的内容，</p>
<p>而colvar1 + colvar2 + …则定义了要划掉的、确定各列内容的变量集合。</p>
<p>参见图中的示例。</p>
<p><img src="/2017/01/06/chapter05-高级数据管理/rebuild.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;高级数据管理&quot;&gt;&lt;a href=&quot;#高级数据管理&quot; class=&quot;headerlink&quot; title=&quot;高级数据管理&quot;&gt;&lt;/a&gt;高级数据管理&lt;/h1&gt;&lt;h2 id=&quot;1、数值和字符处理函数&quot;&gt;&lt;a href=&quot;#1、数值和字符处理函数&quot; class=&quot;header
    
    </summary>
    
      <category term="R语言" scheme="https://pingansheng.github.io/categories/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R语言" scheme="https://pingansheng.github.io/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="R高级数据管理" scheme="https://pingansheng.github.io/tags/R%E9%AB%98%E7%BA%A7%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>chapter04 基本数据管理</title>
    <link href="https://pingansheng.github.io/2017/01/06/chapter04-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86/"/>
    <id>https://pingansheng.github.io/2017/01/06/chapter04-基本数据管理/</id>
    <published>2017-01-06T02:24:53.000Z</published>
    <updated>2024-02-24T02:35:06.548Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本数据管理"><a href="#基本数据管理" class="headerlink" title="基本数据管理"></a>基本数据管理</h1><h2 id="1、创建新变量"><a href="#1、创建新变量" class="headerlink" title="1、创建新变量"></a>1、创建新变量</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#方法1</span></div><div class="line">mydata&lt;-data.frame(x1=c(<span class="number">2</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">4</span>),x2=c(<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">8</span>))</div><div class="line">mydata$sumx&lt;-mydata$x1+mydata$x2</div><div class="line">mydata$meanx&lt;-(mydata$x1+mydata$x2)/<span class="number">2</span></div><div class="line"></div><div class="line"><span class="comment">#方法2</span></div><div class="line"><span class="keyword">attach</span>(mydata)</div><div class="line">mydata$sumx&lt;-x1+x2</div><div class="line">mydata$meanx&lt;-(x1+x2)/<span class="number">2</span></div><div class="line"><span class="keyword">detach</span>(mydata)</div><div class="line"></div><div class="line"><span class="comment">#方法3：推荐</span></div><div class="line">mydata&lt;-transform(mydata,sumx=x1+x2,meanx=(x1+x2)/<span class="number">2</span>)</div></pre></td></tr></table></figure>
<h2 id="2、变量重编码"><a href="#2、变量重编码" class="headerlink" title="2、变量重编码"></a>2、变量重编码</h2><p>需要使用逻辑运算符：<br><img src="/2017/01/06/chapter04-基本数据管理/caculateFlag.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#示例数据：</span></div><div class="line">manager&lt;-c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</div><div class="line">date&lt;- c(<span class="string">"10/24/08"</span>,<span class="string">"10/28/08"</span>,<span class="string">"10/1/08"</span>,<span class="string">"10/12/08"</span>,<span class="string">"5/1/09"</span>)</div><div class="line">country&lt;- c(<span class="string">"US"</span>,<span class="string">"US"</span>,<span class="string">"UK"</span>,<span class="string">"UK"</span>,<span class="string">"UK"</span>)</div><div class="line">gender&lt;-c(<span class="string">"M"</span>,<span class="string">"F"</span>,<span class="string">"F"</span>,<span class="string">"M"</span>,<span class="string">"F"</span>)</div><div class="line">age&lt;-c(<span class="number">32</span>,<span class="number">45</span>,<span class="number">25</span>,<span class="number">39</span>,<span class="number">99</span>)</div><div class="line">q1&lt;-c(<span class="number">5</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">2</span>)</div><div class="line">q2&lt;-c(<span class="number">4</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">2</span>)</div><div class="line">q3&lt;-c(<span class="number">5</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">1</span>)</div><div class="line">q4&lt;-c(<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="literal">NA</span>,<span class="number">2</span>)</div><div class="line">q5&lt;-c(<span class="number">5</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="literal">NA</span>,<span class="number">1</span>)</div><div class="line">leadership&lt;-data.frame(manager,date,country,gender,age,q1,q2,q3,q4,q5,stringsAsFactors = <span class="literal">FALSE</span>)</div><div class="line"></div><div class="line">  manager     date country gender age q1 q2 q3 q4 q5</div><div class="line"><span class="number">1</span>       <span class="number">1</span> <span class="number">10</span>/<span class="number">24</span>/<span class="number">08</span>      US      M  <span class="number">32</span>  <span class="number">5</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">5</span>  <span class="number">5</span></div><div class="line"><span class="number">2</span>       <span class="number">2</span> <span class="number">10</span>/<span class="number">28</span>/<span class="number">08</span>      US      <span class="literal">F</span>  <span class="number">45</span>  <span class="number">3</span>  <span class="number">5</span>  <span class="number">2</span>  <span class="number">5</span>  <span class="number">5</span></div><div class="line"><span class="number">3</span>       <span class="number">3</span>  <span class="number">10</span>/<span class="number">1</span>/<span class="number">08</span>      UK      <span class="literal">F</span>  <span class="number">25</span>  <span class="number">3</span>  <span class="number">5</span>  <span class="number">5</span>  <span class="number">5</span>  <span class="number">2</span></div><div class="line"><span class="number">4</span>       <span class="number">4</span> <span class="number">10</span>/<span class="number">12</span>/<span class="number">08</span>      UK      M  <span class="number">39</span>  <span class="number">3</span>  <span class="number">3</span>  <span class="number">4</span> <span class="literal">NA</span> <span class="literal">NA</span></div><div class="line"><span class="number">5</span>       <span class="number">5</span>   <span class="number">5</span>/<span class="number">1</span>/<span class="number">09</span>      UK      <span class="literal">F</span>  <span class="number">99</span>  <span class="number">2</span>  <span class="number">2</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">1</span></div></pre></td></tr></table></figure>
<p>（1）将年龄99重编码为缺失值</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">leadership$age[leadership$age == <span class="number">99</span>] &lt;-<span class="literal">NA</span></div><div class="line"><span class="comment">#variable[condition] &lt;- expression将仅在condition的值为TRUE时执行赋值</span></div></pre></td></tr></table></figure>
<p>（2）创建agecat变量</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">leadership$agecat[leadership$age&gt;<span class="number">75</span>] &lt;-<span class="string">"Elder"</span></div><div class="line">leadership$agecat[leadership$age&gt;=<span class="number">55</span> &amp; leadership$age&lt;=<span class="number">75</span>] &lt;-<span class="string">"Middle Aged"</span></div><div class="line">leadership$agecat[leadership$age&lt;<span class="number">55</span>] &lt;-<span class="string">"Young"</span></div><div class="line"><span class="comment">#更紧凑的写法：within类似于with不过可以修改数据</span></div><div class="line">leadership&lt;-within(leadership,&#123;</div><div class="line">                    agecat &lt;- <span class="literal">NA</span></div><div class="line">                    agecat[leadership$age&gt;<span class="number">75</span>] &lt;-<span class="string">"Elder"</span></div><div class="line">                    agecat[leadership$age&gt;=<span class="number">55</span> &amp; leadership$age&lt;=<span class="number">75</span>] &lt;-<span class="string">"Middle Aged"</span></div><div class="line">                    agecat[leadership$age&lt;<span class="number">55</span>] &lt;-<span class="string">"Young"</span>&#125;)</div></pre></td></tr></table></figure>
<h2 id="3、变量的重命名"><a href="#3、变量的重命名" class="headerlink" title="3、变量的重命名"></a>3、变量的重命名</h2><p>（1）交互方式：<code>fix(leadership)</code></p>
<p>（2）编程方式：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#(需要安装包library(reshape))</span></div><div class="line">rename(dataframe,c(oldname=<span class="string">"newname"</span>, oldname=<span class="string">"newname"</span>,…))</div><div class="line">names(leadership)[<span class="number">1</span>] &lt;- <span class="string">"managerID"</span></div><div class="line">names(leadership)[<span class="number">6</span>:<span class="number">10</span>]&lt;- c(<span class="string">"1"</span>,<span class="string">"2"</span>,<span class="string">"3"</span>,<span class="string">"4"</span>,<span class="string">"5"</span>)</div></pre></td></tr></table></figure>
<h2 id="4、缺失值处理"><a href="#4、缺失值处理" class="headerlink" title="4、缺失值处理"></a>4、缺失值处理</h2><p>（1）识别：is.na(y),不可使用逻辑测试yvar==NA，永远为false，<font style="color:red">R中NA为关键字表示缺失值</font></p>
<p>（2）重编码为缺失值：见2</p>
<p>（3）分析中排除缺失值：<br>    诸多函数中含有排除缺失值的参数，</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">x&lt;-c(<span class="number">1</span>,<span class="number">2</span>,<span class="literal">NA</span>,<span class="number">3</span>)</div><div class="line">y&lt;-sum(x)<span class="comment">#y=NA</span></div><div class="line">y&lt;-sum(x,na.rm = <span class="literal">TRUE</span>)</div><div class="line"><span class="comment">#另一种方式行删除：na.omit(leadership),删除含有缺失值的行，更复杂的方式见后续。</span></div></pre></td></tr></table></figure>
<h2 id="5、日期值"><a href="#5、日期值" class="headerlink" title="5、日期值"></a>5、日期值</h2><p>（1）字符型变量转化为数值形式的日期变量，<code>as.Date(x,&quot;input_format&quot;)</code></p>
<ul>
<li>%d 数字表示的日期（0~31） 01~31</li>
<li>%a 缩写的星期名 Mon</li>
<li>%A 非缩写星期名 Monday</li>
<li>%m 月份（00~12） 00~12</li>
<li>%b 缩写的月份 Jan</li>
<li>%B 非缩写月份 January</li>
<li>%y 两位数的年份 07</li>
<li>%Y 四位数的年份 2007</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">myformat=<span class="string">"%m/%d/%y"</span></div><div class="line">leadership$date&lt;-as.Date(leadership$date,myformat)<span class="comment">#此处确保myformat形式与date形式相同</span></div><div class="line">Sys.Date()<span class="comment">#获取当前日期</span></div><div class="line">date()<span class="comment">#获取当前日期与时间</span></div></pre></td></tr></table></figure>
<p>（2）输出为特定格式的日期</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">today&lt;-Sys.Date()</div><div class="line">format(today, format=<span class="string">"%B%d%Y"</span>)</div><div class="line">format(today, format=<span class="string">"%A"</span>)</div><div class="line"><span class="comment">#两个日期之间可以进行算术运算：</span></div><div class="line">startdate &lt;- as.Date(<span class="string">"2004-02-13"</span>)</div><div class="line">enddate &lt;- as.Date(<span class="string">"2011-01-22"</span>)</div><div class="line">days &lt;- enddate-startdate</div><div class="line"><span class="comment">#也可以使用difftime计算时间间隔，以星期，天，时，分，秒表示</span></div><div class="line"><span class="comment">#("auto", "secs", "mins", "hours", "days", "weeks")</span></div><div class="line">startdate &lt;- as.Date(<span class="string">"2004-02-13"</span>)</div><div class="line">enddate &lt;- as.Date(<span class="string">"2011-01-22"</span>)</div><div class="line">difftime(startdate,enddate,units=<span class="string">"weeks"</span>)</div></pre></td></tr></table></figure>
<p>（3）日期转换为字符型变量<br><code>strDates &lt;- as.character(dates)</code></p>
<p>（4）更近一步</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">help(as.Date)</div><div class="line">help(strftime)</div><div class="line">help(ISOdatetime)</div><div class="line"><span class="comment">#两个包：lubridate，fCalendar，包含大量日期处理函数</span></div></pre></td></tr></table></figure>
<h2 id="6、类型判断"><a href="#6、类型判断" class="headerlink" title="6、类型判断"></a>6、类型判断</h2><table>
<thead>
<tr>
<th>判 断</th>
<th>转 换</th>
</tr>
</thead>
<tbody>
<tr>
<td>is.numeric()</td>
<td>as.numeric()</td>
</tr>
<tr>
<td>is.character()</td>
<td>as.character()</td>
</tr>
<tr>
<td>is.vector()</td>
<td>as.vector()</td>
</tr>
<tr>
<td>is.matrix()</td>
<td>as.matrix()</td>
</tr>
<tr>
<td>is.data.frame()</td>
<td>as.data.frame()</td>
</tr>
<tr>
<td>is.factor()</td>
<td>as.factor()</td>
</tr>
<tr>
<td>is.logical()</td>
<td>as.logical()</td>
</tr>
</tbody>
</table>
<h2 id="7、数据排序"><a href="#7、数据排序" class="headerlink" title="7、数据排序"></a>7、数据排序</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">attach</span>(leadership)</div><div class="line"><span class="comment">#排序后的数据重新赋值，按照性别年龄排序，默认为升序，排序字段前加’-’为降序</span></div><div class="line">newdata=leadership[order(gender,age),]</div><div class="line"><span class="comment">#降序方式 newdata=leadership[order(gender,-age),]</span></div><div class="line">&gt; newdata</div><div class="line">  manager     date country gender age q1 q2 q3 q4 q5</div><div class="line"><span class="number">3</span>       <span class="number">3</span>  <span class="number">10</span>/<span class="number">1</span>/<span class="number">08</span>      UK      <span class="literal">F</span>  <span class="number">25</span>  <span class="number">3</span>  <span class="number">5</span>  <span class="number">5</span>  <span class="number">5</span>  <span class="number">2</span></div><div class="line"><span class="number">2</span>       <span class="number">2</span> <span class="number">10</span>/<span class="number">28</span>/<span class="number">08</span>      US      <span class="literal">F</span>  <span class="number">45</span>  <span class="number">3</span>  <span class="number">5</span>  <span class="number">2</span>  <span class="number">5</span>  <span class="number">5</span></div><div class="line"><span class="number">5</span>       <span class="number">5</span>   <span class="number">5</span>/<span class="number">1</span>/<span class="number">09</span>      UK      <span class="literal">F</span>  <span class="number">99</span>  <span class="number">2</span>  <span class="number">2</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">1</span></div><div class="line"><span class="number">1</span>       <span class="number">1</span> <span class="number">10</span>/<span class="number">24</span>/<span class="number">08</span>      US      M  <span class="number">32</span>  <span class="number">5</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">5</span>  <span class="number">5</span></div><div class="line"><span class="number">4</span>       <span class="number">4</span> <span class="number">10</span>/<span class="number">12</span>/<span class="number">08</span>      UK      M  <span class="number">39</span>  <span class="number">3</span>  <span class="number">3</span>  <span class="number">4</span> <span class="literal">NA</span> <span class="literal">NA</span></div><div class="line"><span class="keyword">detach</span>(leadership)</div></pre></td></tr></table></figure>
<h2 id="8、数据集合并"><a href="#8、数据集合并" class="headerlink" title="8、数据集合并"></a>8、数据集合并</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#增加列</span></div><div class="line">&gt; newdata</div><div class="line">  manager     date country gender age q1 q2 q3 q4 q5</div><div class="line"><span class="number">3</span>       <span class="number">3</span>  <span class="number">10</span>/<span class="number">1</span>/<span class="number">08</span>      UK      <span class="literal">F</span>  <span class="number">25</span>  <span class="number">3</span>  <span class="number">5</span>  <span class="number">5</span>  <span class="number">5</span>  <span class="number">2</span></div><div class="line"><span class="number">2</span>       <span class="number">2</span> <span class="number">10</span>/<span class="number">28</span>/<span class="number">08</span>      US      <span class="literal">F</span>  <span class="number">45</span>  <span class="number">3</span>  <span class="number">5</span>  <span class="number">2</span>  <span class="number">5</span>  <span class="number">5</span></div><div class="line"><span class="number">5</span>       <span class="number">5</span>   <span class="number">5</span>/<span class="number">1</span>/<span class="number">09</span>      UK      <span class="literal">F</span>  <span class="number">99</span>  <span class="number">2</span>  <span class="number">2</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">1</span></div><div class="line"><span class="number">1</span>       <span class="number">1</span> <span class="number">10</span>/<span class="number">24</span>/<span class="number">08</span>      US      M  <span class="number">32</span>  <span class="number">5</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">5</span>  <span class="number">5</span></div><div class="line"><span class="number">4</span>       <span class="number">4</span> <span class="number">10</span>/<span class="number">12</span>/<span class="number">08</span>      UK      M  <span class="number">39</span>  <span class="number">3</span>  <span class="number">3</span>  <span class="number">4</span> <span class="literal">NA</span> <span class="literal">NA</span></div><div class="line">&gt; newcol=data.frame(meta=c(<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>),manager=c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>),country=c(<span class="string">"US"</span>,<span class="string">"US"</span>,<span class="string">"US"</span>,<span class="string">"US"</span>,<span class="string">"US"</span>))</div><div class="line">&gt; newcol</div><div class="line">  meta manager country</div><div class="line"><span class="number">1</span>   <span class="number">11</span>       <span class="number">1</span>      US</div><div class="line"><span class="number">2</span>   <span class="number">12</span>       <span class="number">2</span>      US</div><div class="line"><span class="number">3</span>   <span class="number">13</span>       <span class="number">3</span>      US</div><div class="line"><span class="number">4</span>   <span class="number">14</span>       <span class="number">4</span>      US</div><div class="line"><span class="number">5</span>   <span class="number">15</span>       <span class="number">5</span>      US</div><div class="line">&gt; <span class="comment">#按照by=中的列合并数据框，结果为inner join,取交集</span></div><div class="line">&gt; total=merge(newdata,newcol,by=c(<span class="string">"manager"</span>,<span class="string">"country"</span>))</div><div class="line">&gt; total</div><div class="line">  manager country     date gender age q1 q2 q3 q4 q5 meta</div><div class="line"><span class="number">1</span>       <span class="number">1</span>      US <span class="number">10</span>/<span class="number">24</span>/<span class="number">08</span>      M  <span class="number">32</span>  <span class="number">5</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">5</span>  <span class="number">5</span>   <span class="number">11</span></div><div class="line"><span class="number">2</span>       <span class="number">2</span>      US <span class="number">10</span>/<span class="number">28</span>/<span class="number">08</span>      <span class="literal">F</span>  <span class="number">45</span>  <span class="number">3</span>  <span class="number">5</span>  <span class="number">2</span>  <span class="number">5</span>  <span class="number">5</span>   <span class="number">12</span></div><div class="line">&gt; <span class="comment">#直接合并不进行列字段匹配，需要行数一致</span></div><div class="line">&gt; total=merge(newdata,newcol,by=c(<span class="string">"manager"</span>))</div><div class="line">&gt; total</div><div class="line">  manager     date country.x gender age q1 q2 q3 q4 q5 meta country.y</div><div class="line"><span class="number">1</span>       <span class="number">1</span> <span class="number">10</span>/<span class="number">24</span>/<span class="number">08</span>        US      M  <span class="number">32</span>  <span class="number">5</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">5</span>  <span class="number">5</span>   <span class="number">11</span>        US</div><div class="line"><span class="number">2</span>       <span class="number">2</span> <span class="number">10</span>/<span class="number">28</span>/<span class="number">08</span>        US      <span class="literal">F</span>  <span class="number">45</span>  <span class="number">3</span>  <span class="number">5</span>  <span class="number">2</span>  <span class="number">5</span>  <span class="number">5</span>   <span class="number">12</span>        US</div><div class="line"><span class="number">3</span>       <span class="number">3</span>  <span class="number">10</span>/<span class="number">1</span>/<span class="number">08</span>        UK      <span class="literal">F</span>  <span class="number">25</span>  <span class="number">3</span>  <span class="number">5</span>  <span class="number">5</span>  <span class="number">5</span>  <span class="number">2</span>   <span class="number">13</span>        US</div><div class="line"><span class="number">4</span>       <span class="number">4</span> <span class="number">10</span>/<span class="number">12</span>/<span class="number">08</span>        UK      M  <span class="number">39</span>  <span class="number">3</span>  <span class="number">3</span>  <span class="number">4</span> <span class="literal">NA</span> <span class="literal">NA</span>   <span class="number">14</span>        US</div><div class="line"><span class="number">5</span>       <span class="number">5</span>   <span class="number">5</span>/<span class="number">1</span>/<span class="number">09</span>        UK      <span class="literal">F</span>  <span class="number">99</span>  <span class="number">2</span>  <span class="number">2</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">1</span>   <span class="number">15</span>        US</div><div class="line">&gt; total=cbind(total,newcol)</div><div class="line">&gt; total</div><div class="line">  manager     date country.x gender age q1 q2 q3 q4 q5 meta country.y meta manager country</div><div class="line"><span class="number">1</span>       <span class="number">1</span> <span class="number">10</span>/<span class="number">24</span>/<span class="number">08</span>        US      M  <span class="number">32</span>  <span class="number">5</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">5</span>  <span class="number">5</span>   <span class="number">11</span>        US   <span class="number">11</span>       <span class="number">1</span>      US</div><div class="line"><span class="number">2</span>       <span class="number">2</span> <span class="number">10</span>/<span class="number">28</span>/<span class="number">08</span>        US      <span class="literal">F</span>  <span class="number">45</span>  <span class="number">3</span>  <span class="number">5</span>  <span class="number">2</span>  <span class="number">5</span>  <span class="number">5</span>   <span class="number">12</span>        US   <span class="number">12</span>       <span class="number">2</span>      US</div><div class="line"><span class="number">3</span>       <span class="number">3</span>  <span class="number">10</span>/<span class="number">1</span>/<span class="number">08</span>        UK      <span class="literal">F</span>  <span class="number">25</span>  <span class="number">3</span>  <span class="number">5</span>  <span class="number">5</span>  <span class="number">5</span>  <span class="number">2</span>   <span class="number">13</span>        US   <span class="number">13</span>       <span class="number">3</span>      US</div><div class="line"><span class="number">4</span>       <span class="number">4</span> <span class="number">10</span>/<span class="number">12</span>/<span class="number">08</span>        UK      M  <span class="number">39</span>  <span class="number">3</span>  <span class="number">3</span>  <span class="number">4</span> <span class="literal">NA</span> <span class="literal">NA</span>   <span class="number">14</span>        US   <span class="number">14</span>       <span class="number">4</span>      US</div><div class="line"><span class="number">5</span>       <span class="number">5</span>   <span class="number">5</span>/<span class="number">1</span>/<span class="number">09</span>        UK      <span class="literal">F</span>  <span class="number">99</span>  <span class="number">2</span>  <span class="number">2</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">1</span>   <span class="number">15</span>        US   <span class="number">15</span>       <span class="number">5</span>      US</div><div class="line">&gt; <span class="comment">#追加行，顺序不需要一致，单变量必须相同，如变量不同，需平衡变量（删除多余变量，补充变量为NA）使得列一致</span></div><div class="line">&gt; total=rbind(newdata,newdata)</div><div class="line">&gt; total</div><div class="line">   manager     date country gender age q1 q2 q3 q4 q5</div><div class="line"><span class="number">3</span>        <span class="number">3</span>  <span class="number">10</span>/<span class="number">1</span>/<span class="number">08</span>      UK      <span class="literal">F</span>  <span class="number">25</span>  <span class="number">3</span>  <span class="number">5</span>  <span class="number">5</span>  <span class="number">5</span>  <span class="number">2</span></div><div class="line"><span class="number">2</span>        <span class="number">2</span> <span class="number">10</span>/<span class="number">28</span>/<span class="number">08</span>      US      <span class="literal">F</span>  <span class="number">45</span>  <span class="number">3</span>  <span class="number">5</span>  <span class="number">2</span>  <span class="number">5</span>  <span class="number">5</span></div><div class="line"><span class="number">5</span>        <span class="number">5</span>   <span class="number">5</span>/<span class="number">1</span>/<span class="number">09</span>      UK      <span class="literal">F</span>  <span class="number">99</span>  <span class="number">2</span>  <span class="number">2</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">1</span></div><div class="line"><span class="number">1</span>        <span class="number">1</span> <span class="number">10</span>/<span class="number">24</span>/<span class="number">08</span>      US      M  <span class="number">32</span>  <span class="number">5</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">5</span>  <span class="number">5</span></div><div class="line"><span class="number">4</span>        <span class="number">4</span> <span class="number">10</span>/<span class="number">12</span>/<span class="number">08</span>      UK      M  <span class="number">39</span>  <span class="number">3</span>  <span class="number">3</span>  <span class="number">4</span> <span class="literal">NA</span> <span class="literal">NA</span></div><div class="line"><span class="number">31</span>       <span class="number">3</span>  <span class="number">10</span>/<span class="number">1</span>/<span class="number">08</span>      UK      <span class="literal">F</span>  <span class="number">25</span>  <span class="number">3</span>  <span class="number">5</span>  <span class="number">5</span>  <span class="number">5</span>  <span class="number">2</span></div><div class="line"><span class="number">21</span>       <span class="number">2</span> <span class="number">10</span>/<span class="number">28</span>/<span class="number">08</span>      US      <span class="literal">F</span>  <span class="number">45</span>  <span class="number">3</span>  <span class="number">5</span>  <span class="number">2</span>  <span class="number">5</span>  <span class="number">5</span></div><div class="line"><span class="number">51</span>       <span class="number">5</span>   <span class="number">5</span>/<span class="number">1</span>/<span class="number">09</span>      UK      <span class="literal">F</span>  <span class="number">99</span>  <span class="number">2</span>  <span class="number">2</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">1</span></div><div class="line"><span class="number">11</span>       <span class="number">1</span> <span class="number">10</span>/<span class="number">24</span>/<span class="number">08</span>      US      M  <span class="number">32</span>  <span class="number">5</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">5</span>  <span class="number">5</span></div><div class="line"><span class="number">41</span>       <span class="number">4</span> <span class="number">10</span>/<span class="number">12</span>/<span class="number">08</span>      UK      M  <span class="number">39</span>  <span class="number">3</span>  <span class="number">3</span>  <span class="number">4</span> <span class="literal">NA</span> <span class="literal">NA</span></div></pre></td></tr></table></figure>
<h2 id="9、数据集取子集"><a href="#9、数据集取子集" class="headerlink" title="9、数据集取子集"></a>9、数据集取子集</h2><p>（1）选入（保留）变量</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">dataframe[row indices, column indices]</div><div class="line"><span class="comment">#行标记选择空表示所有行</span></div><div class="line">newdata=leadership[,c(<span class="number">6</span>:<span class="number">10</span>)]</div></pre></td></tr></table></figure>
<p>（2）剔除变量</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#方式1：</span></div><div class="line">myvars=names(leadership) %<span class="keyword">in</span>% c(<span class="string">"q3"</span>,<span class="string">"q4"</span>)<span class="comment">#形成一个布尔数组</span></div><div class="line">newdata=leadership[!myvars]<span class="comment">#只保留布尔数组中为TRUE的列</span></div><div class="line"><span class="comment">#方式2：</span></div><div class="line">newdata=leadership[c(-<span class="number">8</span>,-<span class="number">9</span>)]<span class="comment">#需要知道序号</span></div><div class="line"><span class="comment">#方式3：</span></div><div class="line">newdata$gender=newdata$age=<span class="literal">NULL</span> <span class="comment">#直接删除某几列</span></div></pre></td></tr></table></figure>
<p>（3）选择行</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">dataframe[<span class="number">1</span>:<span class="number">3</span>,]</div><div class="line"><span class="comment">#条件选择</span></div><div class="line">leadership[which(leadership$gender==<span class="string">"M"</span> &amp; leadership$age &gt; <span class="number">30</span>)]</div><div class="line">	</div><div class="line"><span class="keyword">attach</span>(leadership)</div><div class="line">leadership[which(gender==<span class="string">"M"</span> &amp; age &gt; <span class="number">30</span>)]</div><div class="line"><span class="keyword">detach</span>(leadership)</div><div class="line">	</div><div class="line"><span class="comment">#实例：</span></div><div class="line">leadership$date=as.Date(leadership$date,<span class="string">"%m/%d/%y"</span>)</div><div class="line">startdate=as.Date(<span class="string">"2009-01-01"</span>)</div><div class="line">enddate=as.Date(<span class="string">"2009-10-31"</span>)</div><div class="line">newdata=leadership[which(leadership$date &gt;= startdate &amp; leadership$date &lt;= enddate),]</div></pre></td></tr></table></figure>
<p>（4）subset()函数</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">newdata&lt;- subset(leadership, age &gt;= <span class="number">35</span>| age&lt;<span class="number">24</span>,select = c(q1,q2,q3,q4))</div><div class="line">newdata&lt;- subset(leadership, gender==<span class="string">"M"</span> &amp; age&gt;<span class="number">25</span>, select=gender:q4)</div></pre></td></tr></table></figure>
<p>（5）随机抽样<br>    <code>sample(抽取的母集合，抽取数量，是否放回抽样)</code></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysample &lt;- leadership[sample(<span class="number">1</span>:nrow(leadership),<span class="number">3</span>,replace=<span class="literal">FALSE</span>),]</div></pre></td></tr></table></figure>
<h2 id="10、SQL语句操作数据框"><a href="#10、SQL语句操作数据框" class="headerlink" title="10、SQL语句操作数据框"></a>10、SQL语句操作数据框</h2><p><code>install.packages(&quot;sqldf&quot;)</code></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">newdf &lt;- sqldf(<span class="string">"select AVG(mpg),am from mtcars where carb=1 group by am"</span>,row.names=<span class="literal">TRUE</span>)</div><div class="line"><span class="comment">#row.names=TRUE表示是否沿用原来的行名称</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;基本数据管理&quot;&gt;&lt;a href=&quot;#基本数据管理&quot; class=&quot;headerlink&quot; title=&quot;基本数据管理&quot;&gt;&lt;/a&gt;基本数据管理&lt;/h1&gt;&lt;h2 id=&quot;1、创建新变量&quot;&gt;&lt;a href=&quot;#1、创建新变量&quot; class=&quot;headerlink&quot; ti
    
    </summary>
    
      <category term="R语言" scheme="https://pingansheng.github.io/categories/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R语言" scheme="https://pingansheng.github.io/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="R基本数据管理" scheme="https://pingansheng.github.io/tags/R%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>chapter03 图形初步</title>
    <link href="https://pingansheng.github.io/2017/01/05/chapter03-%E5%9B%BE%E5%BD%A2%E5%88%9D%E6%AD%A5/"/>
    <id>https://pingansheng.github.io/2017/01/05/chapter03-图形初步/</id>
    <published>2017-01-05T05:04:43.000Z</published>
    <updated>2024-02-24T02:35:05.798Z</updated>
    
    <content type="html"><![CDATA[<h1 id="图形初步"><a href="#图形初步" class="headerlink" title="图形初步"></a>图形初步</h1><h2 id="1、基本图形"><a href="#1、基本图形" class="headerlink" title="1、基本图形"></a>1、基本图形</h2><p>plot(o_data,type=”b”,main=”主标题”,sub=”子标题”,xlab=”年龄”,ylab=”周长”)</p>
<p><img src="/2017/01/05/chapter03-图形初步/o_data.png" alt=""><br><img src="/2017/01/05/chapter03-图形初步/plotFirst.png" alt=""></p>
<h2 id="2、符号与线条"><a href="#2、符号与线条" class="headerlink" title="2、符号与线条"></a>2、符号与线条</h2><table>
<thead>
<tr>
<th>参数</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>pch</td>
<td>指定绘制点时使用的符号</td>
</tr>
<tr>
<td>cex</td>
<td>指定符号的大小。cex是一个数值，表示绘图符号相对于默认大小的缩放倍数。默认大小为1， 1.5表示放大为默认值的1.5倍， 0.5表示缩小为默认值的50%，等等</td>
</tr>
<tr>
<td>lty</td>
<td>指定线条类型</td>
</tr>
<tr>
<td>lwd</td>
<td>指定线条宽度。 lwd是以默认值的相对大小来表示的（默认值为1）。例如， lwd=2将生成一条两倍于默认宽度的线条</td>
</tr>
</tbody>
</table>
<p><img src="/2017/01/05/chapter03-图形初步/plotFlag1.png" alt=""><br><img src="/2017/01/05/chapter03-图形初步/plotFlag2.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">plot(o_data,type=<span class="string">"b"</span>, pch=<span class="string">"8"</span>, cex=<span class="number">1</span>, lty=<span class="number">6</span>, lwd=<span class="number">2</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/01/05/chapter03-图形初步/plotFlagEg.png" alt=""></p>
<h2 id="3、颜色"><a href="#3、颜色" class="headerlink" title="3、颜色"></a>3、颜色</h2><table>
<thead>
<tr>
<th>参数</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>col</td>
<td>默认的绘图颜色。某些函数（如lines和pie）可以接受一个含有颜色值的向量并自动循环使用。 例如， 如果设定col=c(“red”, “blue”)并需要绘制三条线，则第一条线将为红色，第二条线为蓝色，第三条线又将为红色</td>
</tr>
<tr>
<td>col.axis</td>
<td>坐标轴刻度文字的颜色</td>
</tr>
<tr>
<td>col.lab</td>
<td>坐标轴标签（名称）的颜色</td>
</tr>
<tr>
<td>col.main</td>
<td>标题颜色</td>
</tr>
<tr>
<td>col.sub</td>
<td>副标题颜色</td>
</tr>
<tr>
<td>fg</td>
<td>图形的前景色</td>
</tr>
<tr>
<td>bg</td>
<td>图形的背景色</td>
</tr>
</tbody>
</table>
<p>在R中，可以通过颜色下标、颜色名称、十六进制的颜色值、 RGB值或HSV值来指定颜色。举例来说， col=1、 col=”white”、 col=”#FFFFFF”、 col=rgb(1,1,1)和col=hsv(0,0,1)都是表示白色的等价方式。</p>
<p><img src="/2017/01/05/chapter03-图形初步/rColor.png" alt=""><br><img src="/2017/01/05/chapter03-图形初步/rColorSort.png" alt=""></p>
<p><code>rainbow(n)</code> 生成n种连续的彩虹色<br><code>gran(0:n/n)</code> 生成N阶灰度色<br><img src="/2017/01/05/chapter03-图形初步/rainColor.png" alt=""><br><img src="/2017/01/05/chapter03-图形初步/grey.png" alt=""></p>
<h2 id="4、文本属性"><a href="#4、文本属性" class="headerlink" title="4、文本属性"></a>4、文本属性</h2><p>用于指定文本大小的参数：</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>cex</td>
<td>表示相对于默认大小缩放倍数的数值。默认大小为1， 1.5表示放大为默认值的1.5倍， 0.5表示缩小为默认值的50%，等等</td>
</tr>
<tr>
<td>cex.axis</td>
<td>坐标轴刻度文字的缩放倍数。类似于cex</td>
</tr>
<tr>
<td>cex.lab</td>
<td>坐标轴标签（名称）的缩放倍数。类似于cex</td>
</tr>
<tr>
<td>cex.main</td>
<td>标题的缩放倍数。类似于cex</td>
</tr>
<tr>
<td>cex.sub</td>
<td>副标题的缩放倍数。类似于cex</td>
</tr>
</tbody>
</table>
<p>用于指定字体族、字号和字样的参数：</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>font</td>
<td>整数。用于指定绘图使用的字体样式。 1=常规， 2=粗体， 3=斜体， 4=粗斜体，5=符号字体（以Adobe符号编码表示）</td>
</tr>
<tr>
<td>font.axis</td>
<td>坐标轴刻度文字的字体样式</td>
</tr>
<tr>
<td>font.lab</td>
<td>坐标轴标签（名称）的字体样式</td>
</tr>
<tr>
<td>font.main</td>
<td>标题的字体样式</td>
</tr>
<tr>
<td>font.sub</td>
<td>副标题的字体样式</td>
</tr>
<tr>
<td>ps</td>
<td>字体磅值（1磅约为1/72英寸）。文本的最终大小为 ps*cex</td>
</tr>
<tr>
<td>family</td>
<td>绘制文本时使用的字体族。标准的取值为serif （衬线）、 sans （无衬线）和mono（等宽）</td>
</tr>
</tbody>
</table>
<p><img src="/2017/01/05/chapter03-图形初步/textPro.png" alt=""></p>
<p>在Windows中，可以通过函数windowsFont()来创建字体簇这类映射。在Mac上，请改用quartzFonts()。<br><img src="/2017/01/05/chapter03-图形初步/font.png" alt=""><br>使用时为<code>par(family=A)</code></p>
<p>默认在Windows系统中，等宽字体映射为TT Courier New，衬线字体映射为TT Times New Roman，无衬线字体则映射为TT Arial（TT代表True Type）</p>
<p>若使用pdf输出图形，可以使用<code>names(pdfFonts())</code>找出那些字体可用，然后使用<code>pdf(file=&quot;myplot.pdf&quot;, family=&quot;fontname&quot;)</code></p>
<h2 id="5、图形尺寸"><a href="#5、图形尺寸" class="headerlink" title="5、图形尺寸"></a>5、图形尺寸</h2><p>用于控制图形尺寸和边界大小的参数：</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>pin</td>
<td>以英寸表示的图形尺寸（宽和高）</td>
</tr>
<tr>
<td>mai</td>
<td>以数值向量表示的边界大小，顺序为“下、左、上、右”，单位为英寸</td>
</tr>
<tr>
<td>mar</td>
<td>以数值向量表示的边界大小，顺序为“下、左、上、右”，单位为英分(1/12英寸)。默认值为c(5, 4, 4, 2) + 0.1</td>
</tr>
</tbody>
</table>
<p><code>par(pin=c(4,3),mar=c(5,0.5,5,0.5))</code></p>
<h2 id="6、自定义文本坐标轴和图例"><a href="#6、自定义文本坐标轴和图例" class="headerlink" title="6、自定义文本坐标轴和图例"></a>6、自定义文本坐标轴和图例</h2><p><code>par()</code>或者<code>plot()</code>中添加<code>ann=FALSE</code>来移除默认的标题和标签</p>
<p><img src="/2017/01/05/chapter03-图形初步/userdefinedXY.png" alt=""></p>
<h3 id="1、自定义坐标轴"><a href="#1、自定义坐标轴" class="headerlink" title="1、自定义坐标轴"></a>1、自定义坐标轴</h3><p><code>axis(side,at=,labels=,pos=,lty=,col=,las=,tck=,…)</code></p>
<p>使用自定义坐标轴应当禁用自动坐标轴：<code>axes=FALSE</code></p>
<ul>
<li>将禁用全部坐标轴（包括坐标轴框架线，除非你添加了参数frame.plot=TRUE）。参数xaxt=”n”和yaxt=”n”将分别禁用X轴或Y轴（会留下框架线，只是去除了刻度）。</li>
</ul>
<p>坐标轴选项</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>side</td>
<td>一个整数，表示在图形的哪边绘制坐标轴（1=下， 2=左， 3=上， 4=右）</td>
</tr>
<tr>
<td>at</td>
<td>一个数值型向量，表示需要绘制刻度线的位置</td>
</tr>
<tr>
<td>labels</td>
<td>一个字符型向量，表示置于刻度线旁边的文字标签（如果为NULL，则将直接使用at中的值）</td>
</tr>
<tr>
<td>pos</td>
<td>坐标轴线绘制位置的坐标（即与另一条坐标轴相交位置的值）</td>
</tr>
<tr>
<td>lty</td>
<td>线条类型</td>
</tr>
<tr>
<td>col</td>
<td>线条和刻度线颜色</td>
</tr>
<tr>
<td>las</td>
<td>标签是否平行于（=0）或垂直于（=2）坐标轴</td>
</tr>
<tr>
<td>tck</td>
<td>刻度线的长度，以相对于绘图区域大小的分数表示（负值表示在图形外侧，正值表示在图形内侧， 0表示禁用刻度， 1表示绘制网格线）；默认值为-0.01</td>
</tr>
</tbody>
</table>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#实例：</span></div><div class="line">opar&lt;-par(no.readonly = <span class="literal">TRUE</span>)</div><div class="line">par(mar=c(<span class="number">5</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">8</span>)+<span class="number">0.1</span>)</div><div class="line">plot(x,y,type=<span class="string">"b"</span>,pch=<span class="number">21</span>,col=<span class="string">"red"</span>,yaxt=<span class="string">"n"</span>,lty=<span class="number">3</span>,ann=<span class="literal">FALSE</span>)</div><div class="line"><span class="comment">#yaxt=”n”表示不绘制Y轴刻度</span></div><div class="line">lines(x,z,type=<span class="string">"b"</span>,pch=<span class="number">22</span>,col=<span class="string">"blue"</span>,lty=<span class="number">2</span>)</div><div class="line">axis(<span class="number">2</span>,at=x,labels=x,col.axis=<span class="string">"red"</span>,las=<span class="number">2</span>)</div><div class="line">axis(<span class="number">4</span>,at=z,labels=round(z,digits=<span class="number">2</span>),col.axis=<span class="string">"blue"</span>,las=<span class="number">2</span>,cex.axis=<span class="number">0.7</span>,tck=-<span class="number">.01</span>)</div><div class="line">mtext(<span class="string">"y=10/x"</span>,side=<span class="number">4</span>,line=<span class="number">3</span>,cex.lab=<span class="number">1</span>,las=<span class="number">2</span>,col=<span class="string">"blue"</span>)</div><div class="line">title(<span class="string">"Axes"</span>,xlab=<span class="string">"X values"</span>, ylab=<span class="string">"Y=X"</span>)</div><div class="line">par(opar)</div></pre></td></tr></table></figure>
<p><img src="/2017/01/05/chapter03-图形初步/userdefinedXYEg.png" alt=""></p>
<h3 id="2、次要刻度线"><a href="#2、次要刻度线" class="headerlink" title="2、次要刻度线"></a>2、次要刻度线</h3><p>使用包Hmisc 中的minor.tick()函数。</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">minor.tick(nx=n,ny=n,tick.ratio=n)</div><div class="line">//nx、ny: X、Y轴两条主刻度线之间需要的区间个数</div><div class="line">//tick.ratio: 次要刻度线相对于主刻度线的大小比例</div></pre></td></tr></table></figure>
<h3 id="3、参考线"><a href="#3、参考线" class="headerlink" title="3、参考线"></a>3、参考线</h3><p><code>abline()</code>为图形添加参考线:<br><code>abline(h=yvalues,v=xvalues)</code>,其中也可以指定其他参数</p>
<h3 id="4、图例"><a href="#4、图例" class="headerlink" title="4、图例"></a>4、图例</h3><p><code>legend(location,title,legend,…)</code></p>
<table>
<thead>
<tr>
<th>参数</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>location</td>
<td>有许多方式可以指定图例的位置。你可以直接给定图例左上角的x、 y坐标，也可以执行locator(1)，然后通过鼠标单击给出图例的位置，还可以使用关键字bottom、 bottomleft、left、 topleft、 top、 topright、 right、 bottomright或center放置图例。如果你使用了以上某个关键字，那么可以同时使用参数inset=指定图例向图形内侧移动的小（以绘图区域大小的分数表示）</td>
</tr>
<tr>
<td>title</td>
<td>图例标题的字符串（可选）</td>
</tr>
<tr>
<td>legend</td>
<td>图例标签组成的字符型向量</td>
</tr>
<tr>
<td>…</td>
<td>其他选项。如果图例标示的是颜色不同的线条，需要指定col=加上颜色值组成的向量。如果图例标示的是符号不同的点，则需指定pch=加上符号的代码组成的向量。如果图例标示的是不同的线条宽度或线条类型，请使用lwd=或lty=加上宽度值或类型值组成的向量。要为图例创建颜色填充的盒形（常见于条形图、箱线图或饼图），需要使用参数fill=加上颜色值组成的向量</td>
</tr>
</tbody>
</table>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#实例：</span></div><div class="line">dose&lt;-c(<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">45</span>,<span class="number">60</span>);</div><div class="line">dA&lt;-c(<span class="number">16</span>,<span class="number">20</span>,<span class="number">27</span>,<span class="number">40</span>,<span class="number">60</span>);</div><div class="line">dB&lt;-c(<span class="number">15</span>,<span class="number">18</span>,<span class="number">25</span>,<span class="number">31</span>,<span class="number">40</span>);</div><div class="line">opar&lt;-par(no.readonly = <span class="literal">TRUE</span>);</div><div class="line">par(lwd=<span class="number">2</span>,cex=<span class="number">1.5</span>,font.lab=<span class="number">2</span>);</div><div class="line">plot(dose,dA,type=<span class="string">"b"</span>,pch=<span class="number">15</span>,lty=<span class="number">1</span>,col=<span class="string">"red"</span>,ylim=c(<span class="number">0</span>,<span class="number">60</span>),main=<span class="string">"Drug A vs. Drug B"</span>,xlab=<span class="string">"Drug Dosage"</span>, ylab=<span class="string">"Drug REsponse"</span>);</div><div class="line">lines(dose,dB,type=<span class="string">"b"</span>,pch=<span class="number">17</span>,lty=<span class="number">2</span>,col=<span class="string">"blue"</span>);</div><div class="line">abline(h=c(<span class="number">30</span>),lwd=<span class="number">1.5</span>,lty=<span class="number">2</span>,col=<span class="string">"gray"</span>);</div><div class="line">minor.tick(nx=<span class="number">3</span>,ny=<span class="number">3</span>,tick.ratio=<span class="number">0.5</span>);</div><div class="line">legend(<span class="string">"topleft"</span>,inset=<span class="number">.05</span>,title=<span class="string">"Drug Type"</span>,c(<span class="string">"A"</span>,<span class="string">"B"</span>),lty=c(<span class="number">1</span>,<span class="number">2</span>),pch=c(<span class="number">15</span>,<span class="number">17</span>),col=c(<span class="string">"red"</span>,<span class="string">"blue"</span>));</div><div class="line"><span class="comment">#inset表示图例距离主图边框的距离百分比，当位置是用关键字表示时</span></div><div class="line">par(opar)</div></pre></td></tr></table></figure>
<p><img src="/2017/01/05/chapter03-图形初步/LegendXYEg.png" alt=""></p>
<h3 id="5、文本标注"><a href="#5、文本标注" class="headerlink" title="5、文本标注"></a>5、文本标注</h3><p>向绘图区域内部添加文本（同时可以绘制点）：<code>text(location, &quot;text to place&quot;, pos,…)</code><br>向图形四个边界之一添加文本：<code>mtext(&quot;text to place&quot;, side, line=n,…)</code></p>
<table>
<thead>
<tr>
<th>参数</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>location</td>
<td>文本的位置参数。可为一对x,y坐标，也可通过指定location为locator(1)使用鼠标交互式地确定摆放位置</td>
</tr>
<tr>
<td>pos</td>
<td>文本相对于位置参数的方位。1=下，2=左，3=上，4=右。如果指定了pos，就可以同时指定参数offset=作为偏移量，以相对于单个字符宽度的比例表示</td>
</tr>
<tr>
<td>side</td>
<td>指定用来放置文本的边。 1=下， 2=左， 3=上， 4=右。你可以指定参数line=来内移或外移文本，随着值的增加，文本将外移。也可使用adj=0将文本向左下对齐，或使用adj=1右上对齐</td>
</tr>
</tbody>
</table>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#实例：</span></div><div class="line">plot(dA,dose,pch=<span class="number">18</span>,col=<span class="string">"blue"</span>)</div><div class="line">text(<span class="number">40</span>,<span class="number">33</span>,family=<span class="string">"serif"</span>,<span class="string">"TEST"</span>)</div><div class="line">text(dA,dose,row.names(dA),cex=<span class="number">0.6</span>,pos=<span class="number">4</span>)</div><div class="line"><span class="comment">#从某个数据框的行名称中读取文本</span></div></pre></td></tr></table></figure>
<p><img src="/2017/01/05/chapter03-图形初步/textXY.png" alt=""></p>
<h3 id="6、数学标注"><a href="#6、数学标注" class="headerlink" title="6、数学标注"></a>6、数学标注</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#在（1,1.9）点输出公式，hat(x)表示x拔</span></div><div class="line">text(<span class="number">1</span>,<span class="number">1.9</span>,expression (hat(x)))</div><div class="line"><span class="comment">#expression中语句会解释为数学公式</span></div></pre></td></tr></table></figure>
<p><img src="/2017/01/05/chapter03-图形初步/mathFlag.png" alt=""></p>
<h2 id="7、-图形组合"><a href="#7、-图形组合" class="headerlink" title="7、 图形组合"></a>7、 图形组合</h2><ul>
<li><p><code>par</code>参数<code>mfrow=c(nrows,ncols)</code>来创建图形矩阵，<code>mfrow</code>表示按行排列，<code>nfcol</code>表示按列排列。</p>
</li>
<li><p><code>layout()</code>函数可控制更多参数</p>
</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#图形组合</span></div><div class="line"><span class="keyword">attach</span>(mtcars)</div><div class="line">opar&lt;-par(no.readonly = <span class="literal">TRUE</span>)</div><div class="line">par(mfrow=c(<span class="number">2</span>,<span class="number">2</span>))</div><div class="line">plot(wt,mpg,main=<span class="string">"wt vs. mpg"</span>)</div><div class="line">plot(wt,disp,main=<span class="string">"wt vs. disp"</span>)</div><div class="line">hist(wt,main=<span class="string">"histogram of wt"</span>)</div><div class="line">boxplot(wt, main=<span class="string">"Boxplot of wt"</span>)</div><div class="line">par(opar)</div><div class="line"><span class="keyword">detach</span>(mtcars)</div></pre></td></tr></table></figure>
<p><img src="/2017/01/05/chapter03-图形初步/plotUnit1.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#图形组合layout()</span></div><div class="line"><span class="keyword">attach</span>(mtcars)</div><div class="line">layout(matrix(c(<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>),<span class="number">2</span>,<span class="number">2</span>,byrow=<span class="literal">TRUE</span>),widths=c(<span class="number">3</span>,<span class="number">1</span>),heights=c(<span class="number">1</span>,<span class="number">2</span>))</div><div class="line">hist(wt)</div><div class="line">hist(mpg)</div><div class="line">hist(disp)</div><div class="line"><span class="keyword">detach</span>(mtcars)</div><div class="line"><span class="comment">#矩阵表示每个图排列的位置，1123表示第一行的两个位置均排列第一个图片，第二个图片在左下角位置，第三个图片在右下角位置，widths表示一行内不同图片的宽度比例，height为不同行的图高度比例</span></div></pre></td></tr></table></figure>
<p><img src="/2017/01/05/chapter03-图形初步/plotUnit2.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;图形初步&quot;&gt;&lt;a href=&quot;#图形初步&quot; class=&quot;headerlink&quot; title=&quot;图形初步&quot;&gt;&lt;/a&gt;图形初步&lt;/h1&gt;&lt;h2 id=&quot;1、基本图形&quot;&gt;&lt;a href=&quot;#1、基本图形&quot; class=&quot;headerlink&quot; title=&quot;1、基本图
    
    </summary>
    
      <category term="R语言" scheme="https://pingansheng.github.io/categories/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R语言" scheme="https://pingansheng.github.io/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="R图形初步" scheme="https://pingansheng.github.io/tags/R%E5%9B%BE%E5%BD%A2%E5%88%9D%E6%AD%A5/"/>
    
  </entry>
  
  <entry>
    <title>chapter02 创建数据集</title>
    <link href="https://pingansheng.github.io/2017/01/05/chapter02-%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E9%9B%86/"/>
    <id>https://pingansheng.github.io/2017/01/05/chapter02-创建数据集/</id>
    <published>2017-01-05T03:11:24.000Z</published>
    <updated>2024-02-24T02:35:05.409Z</updated>
    
    <content type="html"><![CDATA[<h1 id="创建数据集"><a href="#创建数据集" class="headerlink" title="创建数据集"></a>创建数据集</h1><p><img src="/2017/01/05/chapter02-创建数据集/R_dataSet.png" alt=""></p>
<h2 id="1-向量"><a href="#1-向量" class="headerlink" title="1. 向量"></a>1. 向量</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">a&lt;-c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>);b&lt;-c(<span class="string">"one"</span>,<span class="string">"two"</span>,<span class="string">"three"</span>)</div><div class="line">cc&lt;-c(<span class="literal">TRUE</span>,<span class="literal">FALSE</span>,<span class="literal">TRUE</span>)</div></pre></td></tr></table></figure>
<ul>
<li>单个向量的数据类型必须一致</li>
</ul>
<h2 id="2-标量"><a href="#2-标量" class="headerlink" title="2. 标量"></a>2. 标量</h2><p>只含一个元素的向量：<code>f&lt;-3</code></p>
<h2 id="3-向量的访问："><a href="#3-向量的访问：" class="headerlink" title="3. 向量的访问："></a>3. 向量的访问：</h2><p><img src="/2017/01/05/chapter02-创建数据集/vectorAccess.png" alt=""></p>
<h2 id="4-矩阵"><a href="#4-矩阵" class="headerlink" title="4. 矩阵"></a>4. 矩阵</h2><p>矩阵每个元素相同的模式</p>
<p><img src="/2017/01/05/chapter02-创建数据集/matrix.png" alt=""></p>
<h2 id="5-数组："><a href="#5-数组：" class="headerlink" title="5. 数组："></a>5. 数组：</h2><p><img src="/2017/01/05/chapter02-创建数据集/array.png" alt=""></p>
<h2 id="6-数据框"><a href="#6-数据框" class="headerlink" title="6. 数据框"></a>6. 数据框</h2><p>最常用的数据结构，可以包含不同的数据模式（数据类型）<br><code>mydaya &lt;- data.frame(col1,col2,col3),col1~col3</code>可以为任何类型</p>
<p><img src="/2017/01/05/chapter02-创建数据集/dataFrame1.png" alt=""></p>
<p>数据框变量内容的读取：</p>
<p><img src="/2017/01/05/chapter02-创建数据集/dataFrame2.png" alt=""></p>
<p>其中，变量名可以进行局部化：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">attach</span>(patientData)</div><div class="line">table(diabetes,age)<span class="comment">#此处直接可以使用</span></div><div class="line"><span class="keyword">detach</span>()<span class="comment">#移除搜索路径</span></div><div class="line"></div><div class="line">with(patientData,&#123;</div><div class="line">data1&lt;- table(diabetes,age)</div><div class="line">data2&lt;&lt;- table(diabetes,age)</div><div class="line">&#125;)<span class="comment">#单行可以直接写语句不需要大括号, 但普通方式赋值的变量外部无法使用，&lt;&lt;-可以外部使用</span></div></pre></td></tr></table></figure>
<p><img src="/2017/01/05/chapter02-创建数据集/dataFrame3.png" alt=""></p>
<h2 id="7-因子"><a href="#7-因子" class="headerlink" title="7. 因子"></a>7. 因子</h2><pre><code>变量可归结为名义型、有序型或连续型变量，
</code></pre><ul>
<li>名义型-无顺序(类别标识，男，女)-因子</li>
<li>有序型-有递进顺序，但不连续(病情的情况，好转，一般，差)-因子    </li>
<li>连续型-有顺序的任意范围内值(年龄)    </li>
</ul>
<p><img src="/2017/01/05/chapter02-创建数据集/factor1.png" alt=""><br><img src="/2017/01/05/chapter02-创建数据集/factor2.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">str(pData)<span class="comment">#显示数据的结构</span></div><div class="line">summary(pData)<span class="comment">#显示简要的描述性统计</span></div></pre></td></tr></table></figure>
<h2 id="8-列表"><a href="#8-列表" class="headerlink" title="8. 列表"></a>8. 列表</h2><p>对象的有序集合，可以为任意对象：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">list&lt;-list(o1,…,o2)</div><div class="line">list&lt;-list(name1=o1,…,name2=o2)</div></pre></td></tr></table></figure>
<p><img src="/2017/01/05/chapter02-创建数据集/list.png" alt=""></p>
<h2 id="9-自动扩展特性"><a href="#9-自动扩展特性" class="headerlink" title="9. 自动扩展特性"></a>9. 自动扩展特性</h2><p>将一个值赋给某个向量、矩阵、数组或列表中一个不存在的元素时， R将自动扩展这个数据结构以容纳新值。</p>
<p><img src="/2017/01/05/chapter02-创建数据集/autoextend.png" alt=""></p>
<h2 id="10-删除变量"><a href="#10-删除变量" class="headerlink" title="10. 删除变量"></a>10. 删除变量</h2><p><code>rm(var1)</code></p>
<h2 id="11-导入csv"><a href="#11-导入csv" class="headerlink" title="11. 导入csv:"></a>11. 导入csv:</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">read.csv(<span class="string">"area.csv"</span>,header = <span class="literal">TRUE</span>, sep=<span class="string">","</span>, row.names=<span class="string">"ID"</span>)</div><div class="line">read.table(<span class="string">"area.csv"</span>,header = <span class="literal">TRUE</span>, sep=<span class="string">","</span>, row.names=<span class="string">"ID"</span>)</div><div class="line">fread(<span class="string">"finaldata.csv"</span>, integer64=<span class="string">"numeric"</span>, na.strings=c(<span class="string">"NULL"</span>,<span class="string">"NA"</span>, <span class="string">""</span>, <span class="string">"\\N"</span>))</div></pre></td></tr></table></figure>
<h2 id="12-变量标签与值标签"><a href="#12-变量标签与值标签" class="headerlink" title="12. 变量标签与值标签"></a>12. 变量标签与值标签</h2><p><img src="/2017/01/05/chapter02-创建数据集/varFlag1.png" alt=""><br><img src="/2017/01/05/chapter02-创建数据集/varFlag2.png" alt=""></p>
<h2 id="13-实用函数"><a href="#13-实用函数" class="headerlink" title="13. 实用函数"></a>13. 实用函数</h2><ul>
<li><code>length(object)</code>         显示对象中元素/成分的数量</li>
<li><code>dim(object)</code>         显示某个对象的维度</li>
<li><code>str(object)</code>         显示某个对象的结构</li>
<li><code>class(object)</code>         显示某个对象的类或类型</li>
<li><code>mode(object)</code>         显示某个对象的模式</li>
<li><code>names(object)</code>         显示某对象中各成分的名称</li>
<li><code>c(objectt,…)</code>         将对象合并入一个向量</li>
<li><code>cbind(object,…)</code>     按列合并对象</li>
<li><code>rbind(object, …)</code>    按行合并对象</li>
<li><code>Object</code>                 输出某个对象</li>
<li><code>head(object)</code>         列出某个对象的开始部分</li>
<li><code>tail(object)</code>         列出某个对象的最后部分</li>
<li><code>ls()</code>                 显示当前的对象列表</li>
<li><code>rm(object, …)</code>       删除一个或更多个对象。语句rm(list = ls())将删除当前工作环境中的几乎所有对象</li>
<li><code>newobject &lt;- edit(object)</code> 编辑对象并另存为newobject fix(object) 直接编辑对象</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;创建数据集&quot;&gt;&lt;a href=&quot;#创建数据集&quot; class=&quot;headerlink&quot; title=&quot;创建数据集&quot;&gt;&lt;/a&gt;创建数据集&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2017/01/05/chapter02-创建数据集/R_dataSet.png&quot; alt=&quot;
    
    </summary>
    
      <category term="R语言" scheme="https://pingansheng.github.io/categories/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R语言" scheme="https://pingansheng.github.io/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="R数据集" scheme="https://pingansheng.github.io/tags/R%E6%95%B0%E6%8D%AE%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>chapter01 初窥</title>
    <link href="https://pingansheng.github.io/2017/01/05/chapter01-%E5%88%9D%E7%AA%A5/"/>
    <id>https://pingansheng.github.io/2017/01/05/chapter01-初窥/</id>
    <published>2017-01-05T02:56:30.000Z</published>
    <updated>2024-02-24T02:35:05.244Z</updated>
    
    <content type="html"><![CDATA[<h1 id="初窥"><a href="#初窥" class="headerlink" title="初窥"></a>初窥</h1><ol>
<li>c()函数，输入向量，x &lt;- c(1,2,3,4,5)</li>
<li><p>帮助函数：<br><img src="/2017/01/05/chapter01-初窥/help.png" alt=""></p>
</li>
<li><p>工作空间：<br><img src="/2017/01/05/chapter01-初窥/workspace.png" alt=""></p>
</li>
<li><p>输入输出：<code>sink(“filename”,append=TRUE,split=TRUE)</code>,将程序的输出定向至文件中，append表示追加，split表示是否同时在屏幕与文件同时输出，不加参数<code>sink()</code>仅指向屏幕，并且释放文件句柄。</p>
</li>
<li><p>图形输出使用以下命令：dev.off()释放文件句柄并将输出返回终端。<br><img src="/2017/01/05/chapter01-初窥/imgsave.png" alt=""></p>
</li>
<li><p><code>.libPaths()</code>显示库所在的位置; <code>library()</code>显示库中有哪些包。<code>Search()</code>显示那些包已经加载</p>
</li>
<li><p>包的管理</p>
<ul>
<li><code>install.packages(&quot;xxx&quot;)</code> 安装包</li>
<li><code>update.packages()</code>       更新包</li>
<li><code>installed.packages()</code>    已安装的包</li>
<li><code>library(gclus)</code>          载入包</li>
<li><code>help(package=&quot;xx&quot;)</code>      查看包的信息与函数</li>
</ul>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;初窥&quot;&gt;&lt;a href=&quot;#初窥&quot; class=&quot;headerlink&quot; title=&quot;初窥&quot;&gt;&lt;/a&gt;初窥&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;c()函数，输入向量，x &amp;lt;- c(1,2,3,4,5)&lt;/li&gt;
&lt;li&gt;&lt;p&gt;帮助函数：&lt;br&gt;&lt;img src=&quot;/
    
    </summary>
    
      <category term="R语言" scheme="https://pingansheng.github.io/categories/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R语言" scheme="https://pingansheng.github.io/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="初窥" scheme="https://pingansheng.github.io/tags/%E5%88%9D%E7%AA%A5/"/>
    
  </entry>
  
  <entry>
    <title>chapter09 方差分析</title>
    <link href="https://pingansheng.github.io/2017/01/04/chapter09-%E6%96%B9%E5%B7%AE%E5%88%86%E6%9E%90/"/>
    <id>https://pingansheng.github.io/2017/01/04/chapter09-方差分析/</id>
    <published>2017-01-04T02:31:34.000Z</published>
    <updated>2024-02-24T02:35:04.957Z</updated>
    
    <content type="html"><![CDATA[<h1 id="方差分析"><a href="#方差分析" class="headerlink" title="方差分析"></a>方差分析</h1><ul>
<li>当包含的因子是解释变量时，我们关注的重点通常会从预测转向组别差异的分析，这种分析法称作方差分析 （ANOVA）。<h2 id="1、术语"><a href="#1、术语" class="headerlink" title="1、术语"></a>1、术语</h2></li>
<li>均衡/非均衡设计：不同观测方案的观测数相同/不同</li>
<li>单因素方差分析：仅有一个类别型变量，一般为组间两水平因子（两种药物）</li>
<li>单因素组内方差分析：仅有一个类型形变量，一般为组内两水平因子（同种药物，作用时间不同）</li>
<li>因素方差分析：设计包含两个甚至更多的因子</li>
<li>混合模型方差分析：因子设计包括组内和组间因子</li>
<li>混淆因素/干扰因子：你不关心的因素，但其能解释你关心的组间差异</li>
<li>协方差分析（ANCOVA）：度量并将混淆因子作为协变量考虑在模型中的方差分析</li>
<li>多元方差分析（MANOVA）：因变量不止一个</li>
<li>多元协方差分析（MANCOVA）：因变量不止一个的协方差分析</li>
</ul>
<h2 id="2、ANOVA模型拟合"><a href="#2、ANOVA模型拟合" class="headerlink" title="2、ANOVA模型拟合"></a>2、ANOVA模型拟合</h2><ul>
<li>lm函数与aov函数都可以分析方差分析模型，ANOVA和回归本质上都属于广义线性模型<h3 id="2-1、aov-函数"><a href="#2-1、aov-函数" class="headerlink" title="2.1、aov()函数"></a>2.1、aov()函数</h3></li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">aov(formula, data = dataframe)</div><div class="line"><span class="comment">#formula可使用的参数符号见回归（一）</span></div></pre></td></tr></table></figure>
<p>一些常见的研究设计表达式：</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#单因素ANOVA</span></div><div class="line">y ~ A</div><div class="line"><span class="comment">#含单个协变量的单因素ANCOVA </span></div><div class="line">y ~ x + A</div><div class="line"><span class="comment">#双因素ANOVA </span></div><div class="line">y ~ A * B</div><div class="line"><span class="comment">#含两个协变量的双因素ANCOVA </span></div><div class="line">y ~ x1 + x2 + A*B</div><div class="line"><span class="comment">#随机化区组 </span></div><div class="line">y ~ B + A（B是区组因子）</div><div class="line"><span class="comment">#单因素组内ANOVA  Subject标识一个独特的被试者</span></div><div class="line">y ~ A + Error(Subject/A)</div><div class="line"><span class="comment">#含单个组内因子（W）和单个组间因子（B）的重复测量ANOVA </span></div><div class="line">y ~ B * W + Error(Subject/W)</div></pre></td></tr></table></figure>
<h3 id="2-2、顺序很重要"><a href="#2-2、顺序很重要" class="headerlink" title="2.2、顺序很重要"></a>2.2、顺序很重要</h3><ul>
<li>例如，对于双因素方差分析，不同的处理方式观测数不同，则y~A<em>B与y~B</em>A结果不同</li>
</ul>
<p>假设你正使用如下表达式对数据进行建模：</p>
<ul>
<li>Y ~ A + B + A:B</li>
</ul>
<p>有三种类型的方法可以分解等式右边各效应对y所解释的方差。</p>
<ul>
<li>类型I（序贯型）：效应根据表达式中先出现的效应做调整。 A不做调整， B根据A调整， A:B交互项根据A和B调整。</li>
<li>类型II（分层型）：效应根据同水平或低水平的效应做调整。 A根据B调整， B依据A调整，A:B交互项同时根据A和B调整。</li>
<li>类型III（边界型）：每个效应根据模型其他各效应做相应调整。 A根据B和A:B做调整， A:B交互项根据A和B调整。</li>
</ul>
<blockquote>
<p>样本大小越不平衡，效应项的顺序对结果的影响越大。一般来说，越基础性的效应越需要放在表达式前面。具体来讲，首先是协变量，然后是主效应，接着是双因素的交互项，再接着是三因素的交互项，以此类推。</p>
<ul>
<li>R默认调用类型I方法，其他软件（比如SAS和SPSS）默认调用类型III方法。</li>
<li>car包中的Anova()函数（不要与标准anova()函数混淆）提供了使用类型II或类型III方法的选项。</li>
</ul>
</blockquote>
<h2 id="3、单因素方差分析"><a href="#3、单因素方差分析" class="headerlink" title="3、单因素方差分析"></a>3、单因素方差分析</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#单因素方差分析</span></div><div class="line">&gt; <span class="keyword">library</span>(multcomp)</div><div class="line">&gt; <span class="keyword">attach</span>(cholesterol)</div><div class="line">The following objects are masked from cholesterol (pos = <span class="number">4</span>):</div><div class="line"></div><div class="line">    response, trt</div><div class="line"></div><div class="line">&gt; table(trt)<span class="comment">#各组样本大小</span></div><div class="line">trt</div><div class="line"> 1time 2times 4times  drugD  drugE </div><div class="line">    <span class="number">10</span>     <span class="number">10</span>     <span class="number">10</span>     <span class="number">10</span>     <span class="number">10</span> </div><div class="line">&gt; aggregate(response,by=list(trt),FUN=mean)<span class="comment">#计算response的均值</span></div><div class="line">  Group.1        x</div><div class="line"><span class="number">1</span>   1time  <span class="number">5.78197</span></div><div class="line"><span class="number">2</span>  2times  <span class="number">9.22497</span></div><div class="line"><span class="number">3</span>  4times <span class="number">12.37478</span></div><div class="line"><span class="number">4</span>   drugD <span class="number">15.36117</span></div><div class="line"><span class="number">5</span>   drugE <span class="number">20.94752</span></div><div class="line">&gt; aggregate(response,by=list(trt),FUN=sd)<span class="comment">#计算response的标准差</span></div><div class="line">  Group.1        x</div><div class="line"><span class="number">1</span>   1time <span class="number">2.878113</span></div><div class="line"><span class="number">2</span>  2times <span class="number">3.483054</span></div><div class="line"><span class="number">3</span>  4times <span class="number">2.923119</span></div><div class="line"><span class="number">4</span>   drugD <span class="number">3.454636</span></div><div class="line"><span class="number">5</span>   drugE <span class="number">3.345003</span></div><div class="line">&gt; fit&lt;-aov(response~trt)</div><div class="line">&gt; summary(fit)</div><div class="line">            Df Sum Sq Mean Sq <span class="literal">F</span> value   Pr(&gt;<span class="literal">F</span>)    </div><div class="line">trt          <span class="number">4</span> <span class="number">1351.4</span>   <span class="number">337.8</span>   <span class="number">32.43</span> <span class="number">9.82e-13</span> ***</div><div class="line">Residuals   <span class="number">45</span>  <span class="number">468.8</span>    <span class="number">10.4</span>                     </div><div class="line">---</div><div class="line">Signif. codes:  <span class="number">0</span> ‘***’ <span class="number">0.001</span> ‘**’ <span class="number">0.01</span> ‘*’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></div><div class="line">&gt; <span class="comment">#ANOVA对治疗方式（trt）的F检验非常显著（p&lt;0.0001），说明五种疗法的效果不同</span></div><div class="line">&gt; <span class="keyword">library</span>(gplots)</div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#图形展示了带有95%的置信区间的各疗法均值，可以清楚看到它们之间的差异</span></div><div class="line">&gt; plotmeans(response~trt, xlab=<span class="string">"Treatment"</span>, ylab=<span class="string">"Response"</span>, main=<span class="string">"Mean Plot"</span>)</div><div class="line">&gt; <span class="keyword">detach</span>(cholesterol)</div></pre></td></tr></table></figure>
<p><img src="/2017/01/04/chapter09-方差分析/均值对比图.png" alt=""></p>
<h3 id="3-1、多重比较"><a href="#3-1、多重比较" class="headerlink" title="3.1、多重比较"></a>3.1、多重比较</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">TukeyHSD(fit)</div><div class="line">par(las=<span class="number">2</span>)</div><div class="line">par(mar=c(<span class="number">5</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">2</span>))</div><div class="line">plot(TukeyHSD(fit))</div><div class="line"><span class="comment">#图形中置信区间包含0的疗法说明差异不显著（p&gt;0.05）。</span></div></pre></td></tr></table></figure>
<p><img src="/2017/01/04/chapter09-方差分析/成对比较图.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(multcomp)</div><div class="line">par(mar=c(<span class="number">5</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">2</span>))</div><div class="line">tuk&lt;-glht(fit,linfct=mcp(trt=<span class="string">"Tukey"</span>))</div><div class="line">plot(cld(tuk, level = <span class="number">.05</span>),col=<span class="string">"lightgrey"</span>)</div><div class="line"><span class="comment">#有相同字母的组差异不显著，图中，1time和2times差异不显著，1time和4times差异显著</span></div></pre></td></tr></table></figure>
<p><img src="/2017/01/04/chapter09-方差分析/glht多重比较方法.png" alt=""></p>
<h3 id="3-2、检验的假设条件"><a href="#3-2、检验的假设条件" class="headerlink" title="3.2、检验的假设条件"></a>3.2、检验的假设条件</h3><ul>
<li>样本随机独立</li>
<li>因变量的正态性</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#单因素方差分析中，我们假设因变量服从正态分布，各组方差相等。可以使用Q-Q图来检验正态性假设</span></div><div class="line"><span class="keyword">library</span>(car)</div><div class="line">qqPlot(lm(response~trt,data=cholesterol),simulate=<span class="literal">TRUE</span>,main=<span class="string">"Q-Q Plot"</span>, labels=<span class="literal">FALSE</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/01/04/chapter09-方差分析/QQ.png" alt=""></p>
<ul>
<li>样本的方差齐性（总体方差相等）</li>
</ul>
<blockquote>
<p><font color="red">注意：</font>F检验对于数据的正态性非常敏感，因此在检验方差齐性的时候，Levene检验, Bartlett检验或者Brown–Forsythe检验的稳健性都要优于F检验。 F检验还可以用于三组或者多组之间的均值比较，但是如果被检验的数据无法满足均是正态分布的条件时，该数据的稳健型会大打折扣，特别是当显著性水平比较低时。但是，如果数据符合正态分布，而且alpha值至少为0.05，该检验的稳健型还是相当可靠的。</p>
</blockquote>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#Bartlett检验</span></div><div class="line">&gt; bartlett.test(response~trt,data=cholesterol)</div><div class="line"></div><div class="line">	Bartlett test of homogeneity of variances</div><div class="line"></div><div class="line">data:  response by trt</div><div class="line">Bartlett K-squared = <span class="number">0.57975</span>, df = <span class="number">4</span>,</div><div class="line">p-value = <span class="number">0.9653</span></div><div class="line"></div><div class="line"><span class="comment">#Bartlett检验表明五组的方差并没有显著不同（p=0.97）。</span></div><div class="line"><span class="comment">#方差齐性分析对离群点非常敏感</span></div><div class="line">&gt; fit&lt;-aov(response~trt)</div><div class="line">&gt; outlierTest(fit) <span class="comment">#识别离群</span></div><div class="line"></div><div class="line">No Studentized residuals with Bonferonni p &lt; <span class="number">0.05</span></div><div class="line">Largest |rstudent|:</div><div class="line">   rstudent unadjusted p-value Bonferonni p</div><div class="line"><span class="number">19</span> <span class="number">2.251149</span>           <span class="number">0.029422</span>           <span class="literal">NA</span></div><div class="line"><span class="comment">#从输出结果来看，并没有证据说明胆固醇数据中含有离群点（当p&gt;1时将产生NA） 。</span></div></pre></td></tr></table></figure>
<h2 id="4、协方差分析"><a href="#4、协方差分析" class="headerlink" title="4、协方差分析"></a>4、协方差分析</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#协方差分析</span></div><div class="line">&gt; <span class="comment">#怀孕小鼠分组接收不同剂量药物，因变量幼崽体重，协变量怀孕时间</span></div><div class="line">&gt; data(litter,package = <span class="string">"multcomp"</span>)</div><div class="line">&gt; <span class="keyword">attach</span>(litter)</div><div class="line">The following objects are masked from litter (pos = <span class="number">4</span>):</div><div class="line"></div><div class="line">    dose, gesttime, number, weight</div><div class="line"></div><div class="line">&gt; table(dose)</div><div class="line">dose</div><div class="line">  <span class="number">0</span>   <span class="number">5</span>  <span class="number">50</span> <span class="number">500</span> </div><div class="line"> <span class="number">20</span>  <span class="number">19</span>  <span class="number">18</span>  <span class="number">17</span> </div><div class="line">&gt; aggregate(weight,by=list(dose),FUN=mean)<span class="comment">#计算weight的均值</span></div><div class="line">  Group.1        x</div><div class="line"><span class="number">1</span>       <span class="number">0</span> <span class="number">32.30850</span></div><div class="line"><span class="number">2</span>       <span class="number">5</span> <span class="number">29.30842</span></div><div class="line"><span class="number">3</span>      <span class="number">50</span> <span class="number">29.86611</span></div><div class="line"><span class="number">4</span>     <span class="number">500</span> <span class="number">29.64647</span></div><div class="line">&gt; </div><div class="line">&gt; fit&lt;-aov(weight~gesttime+dose)</div><div class="line">&gt; summary(fit)</div><div class="line">            Df Sum Sq Mean Sq <span class="literal">F</span> value  Pr(&gt;<span class="literal">F</span>)   </div><div class="line">gesttime     <span class="number">1</span>  <span class="number">134.3</span>  <span class="number">134.30</span>   <span class="number">8.049</span> <span class="number">0.00597</span> **</div><div class="line">dose         <span class="number">3</span>  <span class="number">137.1</span>   <span class="number">45.71</span>   <span class="number">2.739</span> <span class="number">0.04988</span> * </div><div class="line">Residuals   <span class="number">69</span> <span class="number">1151.3</span>   <span class="number">16.69</span>                   </div><div class="line">---</div><div class="line">Signif. codes:  <span class="number">0</span> ‘***’ <span class="number">0.001</span> ‘**’ <span class="number">0.01</span> ‘*’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></div><div class="line">&gt; <span class="comment">#我们得到：(a)怀孕时间与幼崽出生体重相关； (b)控制怀孕时间，药物剂量与出生体重相关。</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#去除协变量效应后的组均值</span></div><div class="line">&gt; <span class="keyword">library</span>(effects)</div><div class="line">&gt; effect(<span class="string">"dose"</span>,fit)</div><div class="line"></div><div class="line"> dose effect</div><div class="line">dose</div><div class="line">       <span class="number">0</span>        <span class="number">5</span>       <span class="number">50</span>      <span class="number">500</span> </div><div class="line"><span class="number">32.35367</span> <span class="number">28.87672</span> <span class="number">30.56614</span> <span class="number">29.33460</span> </div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#multcomp包校验用户自定义的均值假设</span></div><div class="line">&gt; <span class="keyword">library</span>(multcomp)</div><div class="line">&gt; <span class="comment">#c(3, -1, -1, -1)设定第一组和其他三组的均值进行比较</span></div><div class="line">&gt; contrast&lt;-rbind(<span class="string">"no drug vs. drug"</span>=c(<span class="number">3</span>,-<span class="number">1</span>,-<span class="number">1</span>,-<span class="number">1</span>))</div><div class="line">&gt; summary(glht(fit,linfct=mcp(dose=contrast)))</div><div class="line"></div><div class="line">	 Simultaneous Tests <span class="keyword">for</span> General Linear Hypotheses</div><div class="line"></div><div class="line">Multiple Comparisons of Means: User-defined Contrasts</div><div class="line"></div><div class="line"></div><div class="line">Fit: aov(formula = weight ~ gesttime + dose)</div><div class="line"></div><div class="line">Linear Hypotheses:</div><div class="line">                      Estimate Std. Error t value Pr(&gt;|t|)  </div><div class="line">no drug vs. drug == <span class="number">0</span>    <span class="number">8.284</span>      <span class="number">3.209</span>   <span class="number">2.581</span>    <span class="number">0.012</span> *</div><div class="line">---</div><div class="line">Signif. codes:  <span class="number">0</span> ‘***’ <span class="number">0.001</span> ‘**’ <span class="number">0.01</span> ‘*’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></div><div class="line">(Adjusted p values reported -- single-step method)</div><div class="line"></div><div class="line">&gt; <span class="comment">#可以得出未用药组比其他用药条件下的出生体重高的结论</span></div></pre></td></tr></table></figure>
<h3 id="4-1、检验的假设条件"><a href="#4-1、检验的假设条件" class="headerlink" title="4.1、检验的假设条件"></a>4.1、检验的假设条件</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#假设条件</span></div><div class="line">&gt; <span class="comment">#正态性和同方差性同方差分析</span></div><div class="line">&gt; <span class="comment">#回归斜率相同</span></div><div class="line">&gt; fit2&lt;-aov(weight~gesttime*dose,data = litter)</div><div class="line">&gt; summary(fit2)</div><div class="line">              Df Sum Sq Mean Sq <span class="literal">F</span> value  Pr(&gt;<span class="literal">F</span>)   </div><div class="line">gesttime       <span class="number">1</span>  <span class="number">134.3</span>  <span class="number">134.30</span>   <span class="number">8.289</span> <span class="number">0.00537</span> **</div><div class="line">dose           <span class="number">3</span>  <span class="number">137.1</span>   <span class="number">45.71</span>   <span class="number">2.821</span> <span class="number">0.04556</span> * </div><div class="line">gesttime:dose  <span class="number">3</span>   <span class="number">81.9</span>   <span class="number">27.29</span>   <span class="number">1.684</span> <span class="number">0.17889</span>   </div><div class="line">Residuals     <span class="number">66</span> <span class="number">1069.4</span>   <span class="number">16.20</span>                   </div><div class="line">---</div><div class="line">Signif. codes:  <span class="number">0</span> ‘***’ <span class="number">0.001</span> ‘**’ <span class="number">0.01</span> ‘*’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></div><div class="line">&gt; <span class="comment">#可以看到交互效应不显著，支持了斜率相等的假设。</span></div></pre></td></tr></table></figure>
<h3 id="4-2、可视化"><a href="#4-2、可视化" class="headerlink" title="4.2、可视化"></a>4.2、可视化</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#可视化</span></div><div class="line"><span class="keyword">library</span>(HH)</div><div class="line">ancova(weight~gesttime+dose,data=litter)</div><div class="line"><span class="comment">#可以看到，用怀孕时间来预测出生体重的回归线相互平行，只是截距项不同。随着怀</span></div><div class="line"><span class="comment">#孕时间增加，幼崽出生体重也会增加。另外，还可以看到0剂量组截距项最大， 5剂量组截距项最小。</span></div></pre></td></tr></table></figure>
<p><img src="/2017/01/04/chapter09-方差分析/covaVisual.png" alt=""></p>
<h2 id="5、双因素方差分析"><a href="#5、双因素方差分析" class="headerlink" title="5、双因素方差分析"></a>5、双因素方差分析</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#双因素方差分析</span></div><div class="line">&gt; <span class="keyword">attach</span>(ToothGrowth)</div><div class="line">The following objects are masked from ToothGrowth (pos = <span class="number">3</span>):</div><div class="line"></div><div class="line">    dose, len, supp</div><div class="line"></div><div class="line">&gt; table(supp,dose)</div><div class="line">    dose</div><div class="line">supp <span class="number">0.5</span>  <span class="number">1</span>  <span class="number">2</span></div><div class="line">  OJ  <span class="number">10</span> <span class="number">10</span> <span class="number">10</span></div><div class="line">  VC  <span class="number">10</span> <span class="number">10</span> <span class="number">10</span></div><div class="line">&gt; aggregate(len,by=list(supp,dose),FUN=mean)</div><div class="line">  Group.1 Group.2     x</div><div class="line"><span class="number">1</span>      OJ     <span class="number">0.5</span> <span class="number">13.23</span></div><div class="line"><span class="number">2</span>      VC     <span class="number">0.5</span>  <span class="number">7.98</span></div><div class="line"><span class="number">3</span>      OJ     <span class="number">1.0</span> <span class="number">22.70</span></div><div class="line"><span class="number">4</span>      VC     <span class="number">1.0</span> <span class="number">16.77</span></div><div class="line"><span class="number">5</span>      OJ     <span class="number">2.0</span> <span class="number">26.06</span></div><div class="line"><span class="number">6</span>      VC     <span class="number">2.0</span> <span class="number">26.14</span></div><div class="line">&gt; aggregate(len,by=list(supp,dose),FUN=sd)</div><div class="line">  Group.1 Group.2        x</div><div class="line"><span class="number">1</span>      OJ     <span class="number">0.5</span> <span class="number">4.459709</span></div><div class="line"><span class="number">2</span>      VC     <span class="number">0.5</span> <span class="number">2.746634</span></div><div class="line"><span class="number">3</span>      OJ     <span class="number">1.0</span> <span class="number">3.910953</span></div><div class="line"><span class="number">4</span>      VC     <span class="number">1.0</span> <span class="number">2.515309</span></div><div class="line"><span class="number">5</span>      OJ     <span class="number">2.0</span> <span class="number">2.655058</span></div><div class="line"><span class="number">6</span>      VC     <span class="number">2.0</span> <span class="number">4.797731</span></div><div class="line">&gt; fit&lt;-aov(len~supp*dose)</div><div class="line">&gt; summary(fit)</div><div class="line">            Df Sum Sq Mean Sq <span class="literal">F</span> value   Pr(&gt;<span class="literal">F</span>)    </div><div class="line">supp         <span class="number">1</span>  <span class="number">205.4</span>   <span class="number">205.4</span>  <span class="number">12.317</span> <span class="number">0.000894</span> ***</div><div class="line">dose         <span class="number">1</span> <span class="number">2224.3</span>  <span class="number">2224.3</span> <span class="number">133.415</span>  &lt; <span class="number">2e-16</span> ***</div><div class="line">supp:dose    <span class="number">1</span>   <span class="number">88.9</span>    <span class="number">88.9</span>   <span class="number">5.333</span> <span class="number">0.024631</span> *  </div><div class="line">Residuals   <span class="number">56</span>  <span class="number">933.6</span>    <span class="number">16.7</span>                     </div><div class="line">---</div><div class="line">Signif. codes:  <span class="number">0</span> ‘***’ <span class="number">0.001</span> ‘**’ <span class="number">0.01</span> ‘*’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></div><div class="line">&gt; <span class="comment">#可以看到主效应（supp和dose）和交互效应都非常显著</span></div><div class="line"></div><div class="line"><span class="comment">#可视化 推荐interaction2wt可展示双因素、三因素等</span></div><div class="line">interaction2wt(len~supp*dose)</div></pre></td></tr></table></figure>
<p><img src="/2017/01/04/chapter09-方差分析/协方差可视化.png" alt=""></p>
<h2 id="6、重复测量方差分析"><a href="#6、重复测量方差分析" class="headerlink" title="6、重复测量方差分析"></a>6、重复测量方差分析</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#重复测量方差分析</span></div><div class="line">&gt; <span class="comment">#数据为不同浓度二氧化碳环境下两种植物对其的吸收量</span></div><div class="line">&gt; w1b1&lt;-subset(CO2,Treatment==<span class="string">'chilled'</span>)</div><div class="line">&gt; fit&lt;-aov(uptake~conc*Type+Error(Plant/conc),w1b1)</div><div class="line">&gt; summary(fit)</div><div class="line"></div><div class="line">Error: Plant</div><div class="line">          Df Sum Sq Mean Sq <span class="literal">F</span> value  Pr(&gt;<span class="literal">F</span>)   </div><div class="line">Type       <span class="number">1</span> <span class="number">2667.2</span>  <span class="number">2667.2</span>   <span class="number">60.41</span> <span class="number">0.00148</span> **</div><div class="line">Residuals  <span class="number">4</span>  <span class="number">176.6</span>    <span class="number">44.1</span>                   </div><div class="line">---</div><div class="line">Signif. codes:  <span class="number">0</span> ‘***’ <span class="number">0.001</span> ‘**’ <span class="number">0.01</span> ‘*’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></div><div class="line"></div><div class="line">Error: Plant:conc</div><div class="line">          Df Sum Sq Mean Sq <span class="literal">F</span> value   Pr(&gt;<span class="literal">F</span>)    </div><div class="line">conc       <span class="number">1</span>  <span class="number">888.6</span>   <span class="number">888.6</span>  <span class="number">215.46</span> <span class="number">0.000125</span> ***</div><div class="line">conc:Type  <span class="number">1</span>  <span class="number">239.2</span>   <span class="number">239.2</span>   <span class="number">58.01</span> <span class="number">0.001595</span> ** </div><div class="line">Residuals  <span class="number">4</span>   <span class="number">16.5</span>     <span class="number">4.1</span>                     </div><div class="line">---</div><div class="line">Signif. codes:  <span class="number">0</span> ‘***’ <span class="number">0.001</span> ‘**’ <span class="number">0.01</span> ‘*’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></div><div class="line"></div><div class="line">Error: Within</div><div class="line">          Df Sum Sq Mean Sq <span class="literal">F</span> value Pr(&gt;<span class="literal">F</span>)</div><div class="line">Residuals <span class="number">30</span>    <span class="number">869</span>   <span class="number">28.97</span>               </div><div class="line">&gt; </div><div class="line">&gt; par(las=<span class="number">2</span>)</div><div class="line">&gt; par(mar=c(<span class="number">10</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">2</span>))</div><div class="line">&gt; with(w1b1,interaction.plot(conc,Type,uptake,type=<span class="string">"b"</span>,col=c(<span class="string">"red"</span>,<span class="string">"blue"</span>),pch = c(<span class="number">16</span>,<span class="number">18</span>),main=</div><div class="line">+                              <span class="string">"植物类型和二氧化碳浓度的交互图"</span>))</div><div class="line">&gt; boxplot(uptake~conc*Type,data=w1b1,col=(c(<span class="string">"gold"</span>,<span class="string">"green"</span>)),main=<span class="string">"魁北克与密西西比植物对二氧化碳吸收的交互图"</span>)</div><div class="line">&gt; <span class="comment">#魁北克省的植物比密西西比州的植物二氧化碳吸收率高，而且随着CO2浓度的升高，差异越来越明显。</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#注意 该方法为传统的重复测量方差分析。该方法假设任意组内因子的协方差矩阵为球形，并且任意组内因子两水平间的方差之差都相等。</span></div></pre></td></tr></table></figure>
<p><img src="/2017/01/04/chapter09-方差分析/组间组内交互图.png" alt=""><br><img src="/2017/01/04/chapter09-方差分析/交互箱图.png" alt=""></p>
<h2 id="7、多元方差分析"><a href="#7、多元方差分析" class="headerlink" title="7、多元方差分析"></a>7、多元方差分析</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#研究美国谷物中的卡路</span></div><div class="line">&gt; <span class="comment">#里、脂肪和糖含量是否会因为储存架位置的不同而发生变化。其中1代表底层货架， 2代表中层货</span></div><div class="line">&gt; <span class="comment">#架， 3代表顶层货架。卡路里、脂肪和糖含量是因变量，货架是三水平（1、 2、 3）的自变量。</span></div><div class="line">&gt; <span class="keyword">library</span>(MASS)</div><div class="line">&gt; <span class="keyword">attach</span>(UScereal)</div><div class="line">The following objects are masked from UScereal (pos = <span class="number">7</span>):</div><div class="line"></div><div class="line">    calories, carbo, fat, fibre, mfr, potassium, protein, shelf, sodium, sugars, vitamins</div><div class="line"></div><div class="line">The following objects are masked from UScereal (pos = <span class="number">9</span>):</div><div class="line"></div><div class="line">    calories, carbo, fat, fibre, mfr, potassium, protein, shelf, sodium, sugars, vitamins</div><div class="line"></div><div class="line">&gt; y&lt;-cbind(calories,fat,sugars)</div><div class="line">&gt; aggregate(y,by=list(shelf),FUN=mean)</div><div class="line">  Group.1 calories       fat    sugars</div><div class="line"><span class="number">1</span>       <span class="number">1</span> <span class="number">119.4774</span> <span class="number">0.6621338</span>  <span class="number">6.295493</span></div><div class="line"><span class="number">2</span>       <span class="number">2</span> <span class="number">129.8162</span> <span class="number">1.3413488</span> <span class="number">12.507670</span></div><div class="line"><span class="number">3</span>       <span class="number">3</span> <span class="number">180.1466</span> <span class="number">1.9449071</span> <span class="number">10.856821</span></div><div class="line">&gt; fit&lt;-manova(y~shelf)</div><div class="line">&gt; summary(fit)</div><div class="line">          Df  Pillai approx <span class="literal">F</span> num Df den Df  Pr(&gt;<span class="literal">F</span>)   </div><div class="line">shelf      <span class="number">1</span> <span class="number">0.19594</span>    <span class="number">4.955</span>      <span class="number">3</span>     <span class="number">61</span> <span class="number">0.00383</span> **</div><div class="line">Residuals <span class="number">63</span>                                          </div><div class="line">---</div><div class="line">Signif. codes:  <span class="number">0</span> ‘***’ <span class="number">0.001</span> ‘**’ <span class="number">0.01</span> ‘*’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></div><div class="line">&gt; </div><div class="line">&gt; summary.aov(fit)<span class="comment">#输出单变量结果</span></div><div class="line"> Response calories :</div><div class="line">            Df Sum Sq Mean Sq <span class="literal">F</span> value    Pr(&gt;<span class="literal">F</span>)    </div><div class="line">shelf        <span class="number">1</span>  <span class="number">45313</span>   <span class="number">45313</span>  <span class="number">13.995</span> <span class="number">0.0003983</span> ***</div><div class="line">Residuals   <span class="number">63</span> <span class="number">203982</span>    <span class="number">3238</span>                      </div><div class="line">---</div><div class="line">Signif. codes:  <span class="number">0</span> ‘***’ <span class="number">0.001</span> ‘**’ <span class="number">0.01</span> ‘*’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></div><div class="line"></div><div class="line"> Response fat :</div><div class="line">            Df  Sum Sq Mean Sq <span class="literal">F</span> value   Pr(&gt;<span class="literal">F</span>)   </div><div class="line">shelf        <span class="number">1</span>  <span class="number">18.421</span> <span class="number">18.4214</span>   <span class="number">7.476</span> <span class="number">0.008108</span> **</div><div class="line">Residuals   <span class="number">63</span> <span class="number">155.236</span>  <span class="number">2.4641</span>                    </div><div class="line">---</div><div class="line">Signif. codes:  <span class="number">0</span> ‘***’ <span class="number">0.001</span> ‘**’ <span class="number">0.01</span> ‘*’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></div><div class="line"></div><div class="line"> Response sugars :</div><div class="line">            Df  Sum Sq Mean Sq <span class="literal">F</span> value  Pr(&gt;<span class="literal">F</span>)  </div><div class="line">shelf        <span class="number">1</span>  <span class="number">183.34</span>  <span class="number">183.34</span>   <span class="number">5.787</span> <span class="number">0.01909</span> *</div><div class="line">Residuals   <span class="number">63</span> <span class="number">1995.87</span>   <span class="number">31.68</span>                  </div><div class="line">---</div><div class="line">Signif. codes:  <span class="number">0</span> ‘***’ <span class="number">0.001</span> ‘**’ <span class="number">0.01</span> ‘*’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></div></pre></td></tr></table></figure>
<h3 id="7-1、评估假设检验"><a href="#7-1、评估假设检验" class="headerlink" title="7.1、评估假设检验"></a>7.1、评估假设检验</h3><ul>
<li>多元正太性</li>
</ul>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">center&lt;-colMeans(y)</div><div class="line">n&lt;-nrow(y)</div><div class="line">p&lt;-ncol(y)</div><div class="line">cov&lt;-cov(y)</div><div class="line">d&lt;-mahalanobis(y,center,cov)</div><div class="line">coord&lt;-qqplot(qchisq(ppoints(n),df=p),d,main=<span class="string">"Q-Q Plot"</span>,ylab=<span class="string">"Maalanobis D2"</span>)</div><div class="line">abline(a=<span class="number">0</span>,b=<span class="number">1</span>)</div><div class="line">identify(coord$x,coord$y,labels=row.names(UScereal))</div></pre></td></tr></table></figure>
<p><img src="/2017/01/04/chapter09-方差分析/多元正太性.png" alt=""></p>
<ul>
<li><p>方差-协方差矩阵同质性</p>
<blockquote>
<p>暂时没找到合适的方法来进行检验</p>
</blockquote>
</li>
<li><p>多元离群点</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(mvoutlier)</div><div class="line">aq.plot(y)</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="7-2、稳健多元方差分析"><a href="#7-2、稳健多元方差分析" class="headerlink" title="7.2、稳健多元方差分析"></a>7.2、稳健多元方差分析</h3><ul>
<li>多元正态性或方差-协方差同质性不满足或担心离群点时</li>
<li>rrcov包中Wilks.test(y.dataframe,x,method=”mcp”)</li>
<li>vegan包中的adonis()<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#稳健多元方差分析</span></div><div class="line"><span class="keyword">library</span>(MASS)</div><div class="line"><span class="keyword">attach</span>(UScereal)</div><div class="line"><span class="comment">#稳健多元单因素方差分析</span></div><div class="line"><span class="keyword">library</span>(rrcov)</div><div class="line">y&lt;-cbind(calories,fat,sugars)</div><div class="line">Wilks.test(y,shelf,method=<span class="string">"mcd"</span>)<span class="comment">#性能较慢</span></div><div class="line"><span class="comment">#非参数多元方差分析</span></div><div class="line"><span class="keyword">library</span>(vegan)</div><div class="line">adonis(y~shelf)</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="8、用回归做ANOVA"><a href="#8、用回归做ANOVA" class="headerlink" title="8、用回归做ANOVA"></a>8、用回归做ANOVA</h2><ul>
<li>当lm()函数碰到因子时，它会用一系列与因子水平相对应的数值型对照变量来代替因子。（s1,s2,s3=&gt;(0,0,0),(0,1,0),(0,0,1)）</li>
</ul>
<table>
<thead>
<tr>
<th>创建方法</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>contr.helmert</td>
<td>第二个水平对照第一个水平，第三个水平对照前两个的均值，第四个水平对照前三个的均值，以此类推</td>
</tr>
<tr>
<td>contr.poly</td>
<td>基于正交多项式的对照，用于趋势分析（线性、二次、三次等）和等距水平的有序因子</td>
</tr>
<tr>
<td>contr.sum</td>
<td>对照变量之和限制为0。也称作偏差找对，对各水平的均值与所有水平的均值进行比较</td>
</tr>
<tr>
<td>contr.treatment</td>
<td>各水平对照基线水平（默认第一个水平）。也称作虚拟编码</td>
</tr>
<tr>
<td>contr.SAS</td>
<td>类似于contr.treatment，只是基线水平变成了最后一个水平。生成的系数类似于大部分SAS过程中使用的对照变量</td>
</tr>
</tbody>
</table>
<ul>
<li>fit.lm &lt;- lm(response ~ trt, data=cholesterol, contrasts=”contr.SAS”)的contrasts参数来改变创建方法，默认的创建方法为contr.treatment) <figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">##使用回归进行方差分析</span></div><div class="line">&gt; <span class="keyword">library</span>(multcomp)</div><div class="line">&gt; levels(cholesterol$trt)</div><div class="line">[<span class="number">1</span>] <span class="string">"1time"</span>  <span class="string">"2times"</span> <span class="string">"4times"</span> <span class="string">"drugD"</span>  <span class="string">"drugE"</span> </div><div class="line">&gt; fit.aov &lt;- aov(response ~ trt, data=cholesterol)</div><div class="line">&gt; summary(fit.aov)</div><div class="line">            Df Sum Sq Mean Sq <span class="literal">F</span> value   Pr(&gt;<span class="literal">F</span>)    </div><div class="line">trt          <span class="number">4</span> <span class="number">1351.4</span>   <span class="number">337.8</span>   <span class="number">32.43</span> <span class="number">9.82e-13</span> ***</div><div class="line">Residuals   <span class="number">45</span>  <span class="number">468.8</span>    <span class="number">10.4</span>                     </div><div class="line">---</div><div class="line">Signif. codes:  <span class="number">0</span> ‘***’ <span class="number">0.001</span> ‘**’ <span class="number">0.01</span> ‘*’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></div><div class="line">&gt; </div><div class="line">&gt; fit.lm &lt;- lm(response ~ trt, data=cholesterol)</div><div class="line">&gt; summary(fit.lm) <span class="comment">#二者一致</span></div><div class="line"></div><div class="line">Call:</div><div class="line">lm(formula = response ~ trt, data = cholesterol)</div><div class="line"></div><div class="line">Residuals:</div><div class="line">    Min      1Q  Median      3Q     Max </div><div class="line">-<span class="number">6.5418</span> -<span class="number">1.9672</span> -<span class="number">0.0016</span>  <span class="number">1.8901</span>  <span class="number">6.6008</span> </div><div class="line"></div><div class="line">Coefficients:</div><div class="line">            Estimate Std. Error t value Pr(&gt;|t|)    </div><div class="line">(Intercept)    <span class="number">5.782</span>      <span class="number">1.021</span>   <span class="number">5.665</span> <span class="number">9.78e-07</span> ***</div><div class="line">trt2times      <span class="number">3.443</span>      <span class="number">1.443</span>   <span class="number">2.385</span>   <span class="number">0.0213</span> *  </div><div class="line">trt4times      <span class="number">6.593</span>      <span class="number">1.443</span>   <span class="number">4.568</span> <span class="number">3.82e-05</span> ***</div><div class="line">trtdrugD       <span class="number">9.579</span>      <span class="number">1.443</span>   <span class="number">6.637</span> <span class="number">3.53e-08</span> ***</div><div class="line">trtdrugE      <span class="number">15.166</span>      <span class="number">1.443</span>  <span class="number">10.507</span> <span class="number">1.08e-13</span> ***</div><div class="line">---</div><div class="line">Signif. codes:  <span class="number">0</span> ‘***’ <span class="number">0.001</span> ‘**’ <span class="number">0.01</span> ‘*’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></div><div class="line"></div><div class="line">Residual standard error: <span class="number">3.227</span> on <span class="number">45</span> degrees of freedom</div><div class="line">Multiple R-squared:  <span class="number">0.7425</span>,	Adjusted R-squared:  <span class="number">0.7196</span> </div><div class="line"><span class="literal">F</span>-statistic: <span class="number">32.43</span> on <span class="number">4</span> and <span class="number">45</span> DF,  p-value: <span class="number">9.819e-13</span></div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;方差分析&quot;&gt;&lt;a href=&quot;#方差分析&quot; class=&quot;headerlink&quot; title=&quot;方差分析&quot;&gt;&lt;/a&gt;方差分析&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;当包含的因子是解释变量时，我们关注的重点通常会从预测转向组别差异的分析，这种分析法称作方差分析 （ANOVA）。
    
    </summary>
    
      <category term="R语言" scheme="https://pingansheng.github.io/categories/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R语言" scheme="https://pingansheng.github.io/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="方差分析" scheme="https://pingansheng.github.io/tags/%E6%96%B9%E5%B7%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>chapter08 回归（二）</title>
    <link href="https://pingansheng.github.io/2017/01/03/chapter08-%E5%9B%9E%E5%BD%92%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>https://pingansheng.github.io/2017/01/03/chapter08-回归（二）/</id>
    <published>2017-01-03T09:13:54.000Z</published>
    <updated>2024-02-24T02:35:04.694Z</updated>
    
    <content type="html"><![CDATA[<h2 id="4、异常观测值"><a href="#4、异常观测值" class="headerlink" title="4、异常观测值"></a>4、异常观测值</h2><ul>
<li>一个全面的回归分析要覆盖对异常值的分析，包括离群点、高杠杆值点和强影响点。</li>
</ul>
<h3 id="4-1、离群点"><a href="#4-1、离群点" class="headerlink" title="4.1、离群点"></a>4.1、离群点</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#离群点：模型预测效果不佳的观测点。它们通常有很大的、或正或负的残差。</span></div><div class="line">&gt; <span class="comment">#outlierTest()函数可以求得求得最大标准化残差绝对值Bonferroni（显著水平检验使用预设显著水平的1/2）调整后的p值</span></div><div class="line">&gt; outlierTest(fit)</div><div class="line">       rstudent unadjusted p-value Bonferonni p</div><div class="line">Nevada <span class="number">3.542929</span>         <span class="number">0.00095088</span>     <span class="number">0.047544</span></div><div class="line">&gt; <span class="comment">#可以看到Nevada被判定为离群点（p=0.048）。注意，该函数只是根据单个最大（或</span></div><div class="line">&gt; <span class="comment">#正或负）残差值的显著性来判断是否有离群点。若不显著，则说明数据集中没有离群点；若显著，</span></div><div class="line">&gt; <span class="comment">#则你必须删除该离群点，然后再检验是否还有其他离群点存在。</span></div></pre></td></tr></table></figure>
<h3 id="4-2、高杠杆值点"><a href="#4-2、高杠杆值点" class="headerlink" title="4.2、高杠杆值点"></a>4.2、高杠杆值点</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#高杠杆值点：是与其他预测变量有关的离群点，它们是由许多异常的预测变量值组合起来的，与响应变量值没有关系</span></div><div class="line"><span class="comment">#可根据帽子统计量（hat statistic）判断。对于一个给定的数据集，帽子均值为p/n，其中p 是模型估计的参数数目</span></div><div class="line"><span class="comment">#（包含截距项）， n 是样本量。一般来说，若观测点的帽子值大于帽子均值的2或3倍，即可以认定为高杠杆值点。</span></div><div class="line">hat.plot&lt;-<span class="keyword">function</span>(fit)&#123;</div><div class="line">  p&lt;-length(coefficients(fit))<span class="comment"># 输出模型参数数量，包含截距项</span></div><div class="line">  n&lt;-length(fitted(fit))<span class="comment">#预测值的数量</span></div><div class="line">  plot(hatvalues(fit),main=<span class="string">"Index Plot of Hat Values"</span>)</div><div class="line">  abline(h=c(<span class="number">2</span>,<span class="number">3</span>)*p/n,col=<span class="string">"red"</span>,lty=<span class="number">2</span>)</div><div class="line">  identify(<span class="number">1</span>:n,hatvalues(fit),names(hatvalues(fit)))</div><div class="line">&#125;</div><div class="line">hat.plot(fit)</div></pre></td></tr></table></figure>
<p><img src="/2017/01/03/chapter08-回归（二）/hatValues.png" alt=""></p>
<h3 id="4-3、强影响点"><a href="#4-3、强影响点" class="headerlink" title="4.3、强影响点"></a>4.3、强影响点</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#强影响点：对模型参数估计值影响有些比例失衡的点，例如，若移除模型的一个观测点时模型会发生巨大的改变，</span></div><div class="line"><span class="comment">#那么你就需要检测一下数据中是否存在强影响点了。</span></div><div class="line"><span class="comment">#方法：Cook距离，或称D统计量，以及变量添加图（added variable plot）</span></div><div class="line"><span class="comment">#Cook’s D值大于4/(n-k-1)，则表明它是强影响点，其中n 为样本量大小， k 是预测变量数目。</span></div><div class="line">cutoff&lt;-<span class="number">4</span>/(nrow(states)-length(fit$coefficients)-<span class="number">2</span>)</div><div class="line">plot(fit,which = <span class="number">4</span>,cook.levels = cutoff)</div><div class="line">abline(h=cutoff,lty=<span class="number">2</span>,col=<span class="string">"red"</span>)</div><div class="line"><span class="comment">#注意，虽然该图对搜寻强影响点很有用，但我逐渐发现以1为分割点更具一般性。</span></div><div class="line"><span class="comment">#若设定D=1为判别标准，则数据集中没有点看起来像是强影响点。-作者</span></div></pre></td></tr></table></figure>
<p><img src="/2017/01/03/chapter08-回归（二）/Cook_D.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#所谓变量添加图，即对于每个预测变量Xk，绘制Xk 在其他k-1个预测变量上回归的残差值相对于</span></div><div class="line"><span class="comment">#响应变量在其他k-1个预测变量上回归的残差值的关系图。 </span></div><div class="line"><span class="keyword">library</span>(car)</div><div class="line">avPlots(fit, ask=<span class="literal">FALSE</span>, onepage=<span class="literal">TRUE</span>, id.method=<span class="string">"identify"</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/01/03/chapter08-回归（二）/变量添加图.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#influencePlot 影响图</span></div><div class="line">influencePlot(fit, id.method = <span class="string">"identify"</span>, main=<span class="string">"Influence Plot"</span>,</div><div class="line">              sub=<span class="string">"Circle size is proportional to Cook's distance"</span>)</div><div class="line"></div><div class="line"><span class="comment">#纵坐标超过+2或小于2的州可被认为是离群点，水平轴超过0.2或0.3</span></div><div class="line"><span class="comment">#的州有高杠杆值（通常为预测值的组合）。圆圈大小与影响成比例，圆圈很大</span></div><div class="line"><span class="comment">#的点可能是对模型参数的估计造成的不成比例影响的强影响点</span></div></pre></td></tr></table></figure>
<p><img src="/2017/01/03/chapter08-回归（二）/influencePlot.png" alt=""></p>
<h2 id="5、改进措施"><a href="#5、改进措施" class="headerlink" title="5、改进措施"></a>5、改进措施</h2><h3 id="5-1、删除观测点"><a href="#5-1、删除观测点" class="headerlink" title="5.1、删除观测点"></a>5.1、删除观测点</h3><ul>
<li>删除那些离群点或者强影响点</li>
<li>谨慎！异常点可能是未知规律的表现！</li>
</ul>
<h3 id="5-2、变量变换"><a href="#5-2、变量变换" class="headerlink" title="5.2、变量变换"></a>5.2、变量变换</h3><p>变换一般使用Y^λ替代Y<br>powerTransform()通过λ的极大似然估计来正太化变量X^λ<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">&gt; summary(powerTransform(states$Murder))</div><div class="line">bcPower Transformation to Normality </div><div class="line"></div><div class="line">              Est.Power Std.Err. Wald Lower Bound Wald Upper Bound</div><div class="line">states$Murder    <span class="number">0.6055</span>   <span class="number">0.2639</span>           <span class="number">0.0884</span>           <span class="number">1.1227</span></div><div class="line"></div><div class="line">Likelihood ratio tests about transformation parameters</div><div class="line">                           LRT df       pval</div><div class="line">LR test, lambda = (<span class="number">0</span>) <span class="number">5.665991</span>  <span class="number">1</span> <span class="number">0.01729694</span></div><div class="line">LR test, lambda = (<span class="number">1</span>) <span class="number">2.122763</span>  <span class="number">1</span> <span class="number">0.14512456</span></div><div class="line"><span class="comment">#结果表明可以使用Murder^0.6正则化Murder，但是λ=1的假设北邮被拒绝，所有没有强有力的证据表明需要变换</span></div><div class="line">&gt; <span class="comment">#boxTidwell() 通过预测变量幂数的最大似然估计来改善线性关系</span></div><div class="line">&gt; boxTidwell(Murder~Population+Illiteracy,data=states)</div><div class="line">           Score Statistic   p-value MLE of lambda</div><div class="line">Population      -<span class="number">0.3228003</span> <span class="number">0.7468465</span>     <span class="number">0.8693882</span></div><div class="line">Illiteracy       <span class="number">0.6193814</span> <span class="number">0.5356651</span>     <span class="number">1.3581188</span></div><div class="line"></div><div class="line">iterations =  <span class="number">19</span> </div><div class="line"><span class="comment">#使用变换Population^0.87和Illiteracy^1.36能够大大改善线性关系。但是对Population</span></div><div class="line"><span class="comment">#（p=0.75）和Illiteracy（p=0.54）的计分检验又表明变量并不需要变换。</span></div></pre></td></tr></table></figure></p>
<ul>
<li>谨慎对待变量变换:如果你不能证明A，那就证明B，假装它就是A。（对于统计学家来说，这很滑稽好笑。）如果你变换了变量，你的解释必须基于变换后的变量，而不是初始变量。若变换得没有意义，应该避免。如，你怎样解释自杀意念的频率与抑郁程度的立方根间的关系呢？<h3 id="5-3、增删变量"><a href="#5-3、增删变量" class="headerlink" title="5.3、增删变量"></a>5.3、增删变量</h3></li>
<li>删除变量在处理多重共线性时是一种非常重要的方法。做预测多重共线性没有影响，但是影响对变量的解释，解决通常删除共线性变量，或者使用岭回归<h3 id="5-4、尝试其他方法"><a href="#5-4、尝试其他方法" class="headerlink" title="5.4、尝试其他方法"></a>5.4、尝试其他方法</h3></li>
</ul>
<h2 id="6、选择最佳模型"><a href="#6、选择最佳模型" class="headerlink" title="6、选择最佳模型"></a>6、选择最佳模型</h2><h3 id="6-1、模型比较"><a href="#6-1、模型比较" class="headerlink" title="6.1、模型比较"></a>6.1、模型比较</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#anova()函数可以比较两个嵌套模型（一些项完全包含在另一个模型中）的拟合优度。</span></div><div class="line">&gt; fit1&lt;-lm(Murder~Population+Illiteracy+Income+Frost,data=states)</div><div class="line">&gt; fit2&lt;-lm(Murder~Population+Illiteracy,data=states)</div><div class="line">&gt; anova(fit2,fit1)</div><div class="line">Analysis of Variance Table</div><div class="line"></div><div class="line">Model <span class="number">1</span>: Murder ~ Population + Illiteracy</div><div class="line">Model <span class="number">2</span>: Murder ~ Population + Illiteracy + Income + Frost</div><div class="line">  Res.Df    RSS Df Sum of Sq      <span class="literal">F</span> Pr(&gt;<span class="literal">F</span>)</div><div class="line"><span class="number">1</span>     <span class="number">47</span> <span class="number">289.25</span>                           </div><div class="line"><span class="number">2</span>     <span class="number">45</span> <span class="number">289.17</span>  <span class="number">2</span>  <span class="number">0.078505</span> <span class="number">0.0061</span> <span class="number">0.9939</span></div><div class="line">&gt; <span class="comment">#函数同时还对是否应该添加Income和Frost到线性模型中进行了检验。</span></div><div class="line">&gt; <span class="comment">#检验不显著,所以可以剔除</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#AIC（Akaike Information Criterion，赤池信息准则）也可以用来比较模型，它考虑了模型的</span></div><div class="line">&gt; <span class="comment">#统计拟合度以及用来拟合的参数数目。 AIC值越小越好，说明较少的参数获得了足够的拟合度。</span></div><div class="line">&gt; fit1&lt;-lm(Murder~Population+Illiteracy+Income+Frost,data=states)</div><div class="line">&gt; fit2&lt;-lm(Murder~Population+Illiteracy,data=states)</div><div class="line">&gt; AIC(fit1,fit2)</div><div class="line">     df      AIC</div><div class="line">fit1  <span class="number">6</span> <span class="number">241.6429</span></div><div class="line">fit2  <span class="number">4</span> <span class="number">237.6565</span></div></pre></td></tr></table></figure>
<h3 id="6-2、变量选择"><a href="#6-2、变量选择" class="headerlink" title="6.2、变量选择"></a>6.2、变量选择</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#逐步回归法：变量每次进入一个，但是每一步中，变量都会被重新评价，对模型没有贡献的变量将会被删除，</span></div><div class="line"><span class="comment">#预测变量可能会被添加、删除好几次，直到获得最优模型为止。</span></div><div class="line"><span class="keyword">library</span>(MASS)</div><div class="line">fit1&lt;-lm(Murder~Population+Illiteracy+Income+Frost,data=states)</div><div class="line">stepAIC(fit1)<span class="comment">#默认使用向后逐步回归</span></div><div class="line"></div><div class="line">Start:  AIC=<span class="number">97.75</span></div><div class="line">Murder ~ Population + Illiteracy + Income + Frost</div><div class="line"></div><div class="line">             Df Sum of Sq    RSS     AIC</div><div class="line">- Frost       <span class="number">1</span>     <span class="number">0.021</span> <span class="number">289.19</span>  <span class="number">95.753</span></div><div class="line">- Income      <span class="number">1</span>     <span class="number">0.057</span> <span class="number">289.22</span>  <span class="number">95.759</span></div><div class="line">&lt;none&gt;                    <span class="number">289.17</span>  <span class="number">97.749</span></div><div class="line">- Population  <span class="number">1</span>    <span class="number">39.238</span> <span class="number">328.41</span> <span class="number">102.111</span></div><div class="line">- Illiteracy  <span class="number">1</span>   <span class="number">144.264</span> <span class="number">433.43</span> <span class="number">115.986</span></div><div class="line"></div><div class="line">Step:  AIC=<span class="number">95.75</span></div><div class="line">Murder ~ Population + Illiteracy + Income</div><div class="line"></div><div class="line">             Df Sum of Sq    RSS     AIC</div><div class="line">- Income      <span class="number">1</span>     <span class="number">0.057</span> <span class="number">289.25</span>  <span class="number">93.763</span></div><div class="line">&lt;none&gt;                    <span class="number">289.19</span>  <span class="number">95.753</span></div><div class="line">- Population  <span class="number">1</span>    <span class="number">43.658</span> <span class="number">332.85</span> <span class="number">100.783</span></div><div class="line">- Illiteracy  <span class="number">1</span>   <span class="number">236.196</span> <span class="number">525.38</span> <span class="number">123.605</span></div><div class="line"></div><div class="line">Step:  AIC=<span class="number">93.76</span></div><div class="line">Murder ~ Population + Illiteracy</div><div class="line"></div><div class="line">             Df Sum of Sq    RSS     AIC</div><div class="line">&lt;none&gt;                    <span class="number">289.25</span>  <span class="number">93.763</span></div><div class="line">- Population  <span class="number">1</span>    <span class="number">48.517</span> <span class="number">337.76</span>  <span class="number">99.516</span></div><div class="line">- Illiteracy  <span class="number">1</span>   <span class="number">299.646</span> <span class="number">588.89</span> <span class="number">127.311</span></div><div class="line"></div><div class="line">Call:</div><div class="line">lm(formula = Murder ~ Population + Illiteracy, data = states)</div><div class="line"></div><div class="line">Coefficients:</div><div class="line">(Intercept)   Population   Illiteracy  </div><div class="line">  <span class="number">1.6515497</span>    <span class="number">0.0002242</span>    <span class="number">4.0807366</span></div></pre></td></tr></table></figure>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#全子集回归</span></div><div class="line"><span class="keyword">library</span>(leaps)</div><div class="line">leaps&lt;-regsubsets(Murder~Population+Illiteracy+Income+Frost,data=states,nbest=<span class="number">4</span>)</div><div class="line">plot(leaps, scale=<span class="string">"adjr2"</span>)</div><div class="line"><span class="keyword">library</span>(car)</div><div class="line">subsets(leaps,statistic = <span class="string">"cp"</span>, main=<span class="string">"Cp Plot for All Subsets Regression"</span>)</div><div class="line">abline(<span class="number">1</span>,<span class="number">1</span>,lty=<span class="number">2</span>,col=<span class="string">"red"</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/01/03/chapter08-回归（二）/leaps.png" alt=""></p>
<ul>
<li>可以看出，双变量对应的模型能够得到最多的R平方增量<br><img src="/2017/01/03/chapter08-回归（二）/cp图.png" alt=""></li>
<li>基于Mallows Cp统计量的四个最佳模型。越好的模型离截距项和斜率均为1的直线越近。图中可以得出4个不错的模型（P-Il,P-Il-F,P-Il-In,P-Il-In-F）</li>
</ul>
<h2 id="7、深入分析"><a href="#7、深入分析" class="headerlink" title="7、深入分析"></a>7、深入分析</h2><h3 id="7-1、交叉验证"><a href="#7-1、交叉验证" class="headerlink" title="7.1、交叉验证"></a>7.1、交叉验证</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#交叉验证</span></div><div class="line">shrinkage&lt;-<span class="keyword">function</span>(fit,k=<span class="number">10</span>)&#123;</div><div class="line">  <span class="keyword">require</span>(bootstrap)</div><div class="line">  </div><div class="line">  theta.fit&lt;-<span class="keyword">function</span>(x,y)&#123;lsfit(x,y)&#125;</div><div class="line">  theta.predict&lt;-<span class="keyword">function</span>(fit,x)&#123;cbind(<span class="number">1</span>,x)%*%fit$coef&#125;</div><div class="line">  </div><div class="line">  x&lt;-fit$model[,<span class="number">2</span>:ncol(fit$model)]</div><div class="line">  y&lt;-fit$model[,<span class="number">1</span>]</div><div class="line">  </div><div class="line">  results&lt;-crossval(x,y,theta.fit,theta.predict,ngroup=k)</div><div class="line">  r2&lt;-cor(y,fit$fitted.values)^<span class="number">2</span></div><div class="line">  r2cv&lt;-cor(y,results$cv.fit)^<span class="number">2</span></div><div class="line">  cat(<span class="string">"Original R-square="</span>,r2,<span class="string">"\n"</span>)</div><div class="line">  cat(k,<span class="string">"Fold Cross-Validated R-square="</span>,r2cv,<span class="string">"\n"</span>)</div><div class="line">  cat(<span class="string">"Change="</span>,r2-r2cv,<span class="string">"\n"</span>)</div><div class="line">&#125;</div><div class="line">fit1&lt;-lm(Murder~Population+Income+Illiteracy+Frost,data=states)</div><div class="line"><span class="keyword">library</span>(bootstrap)</div><div class="line">shrinkage(fit1)</div><div class="line"></div><div class="line">&gt; Original R-square= <span class="number">0.5669502</span> </div><div class="line">&gt; <span class="number">10</span> Fold Cross-Validated R-square= <span class="number">0.4174945</span> </div><div class="line">&gt; Change= <span class="number">0.1494558</span> </div><div class="line"></div><div class="line">fit2&lt;-lm(Murder~Population+Illiteracy,data=states)</div><div class="line"><span class="keyword">library</span>(bootstrap)</div><div class="line">shrinkage(fit2)</div><div class="line"></div><div class="line">&gt; Original R-square= <span class="number">0.5668327</span> </div><div class="line">&gt; <span class="number">10</span> Fold Cross-Validated R-square= <span class="number">0.5193488</span> </div><div class="line">&gt; Change= <span class="number">0.04748383</span> </div><div class="line"></div><div class="line"><span class="comment">#双变量比全变量模型交叉验证后R方减少的更少，说明其泛化能力强，R平方减少得越少，预测则越精确</span></div></pre></td></tr></table></figure>
<h3 id="7-2、相对重要性"><a href="#7-2、相对重要性" class="headerlink" title="7.2、相对重要性"></a>7.2、相对重要性</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#相对重要性</span></div><div class="line">&gt; <span class="comment">#scale将数据标准化为均值为0、标准差为1的数据集，这样用R回归即可获得标准化的回归系数。</span></div><div class="line">&gt; <span class="comment">#评价预测变量相对重要性的方法一直在涌现。最简单的莫过于比较标准化的回归系数，它表</span></div><div class="line">&gt; <span class="comment">#示当其他预测变量不变时，该预测变量一个标准差的变化可引起的响应变量的预期变化（以标准</span></div><div class="line">&gt; <span class="comment">#差单位度量）。</span></div><div class="line">&gt; zstates &lt;- as.data.frame(scale(states))</div><div class="line">&gt; zfit&lt;-lm(Murder~Population+Income+Illiteracy+Frost,data=zstates)</div><div class="line">&gt; coef(zfit)</div><div class="line">  (Intercept)    Population        Income    Illiteracy         Frost </div><div class="line">-<span class="number">2.054026e-16</span>  <span class="number">2.705095e-01</span>  <span class="number">1.072372e-02</span>  <span class="number">6.840496e-01</span>  <span class="number">8.185407e-03</span> </div><div class="line">&gt; <span class="comment">#当其他因素不变时，文盲率一个标准差的变化将增加0.68个标准差的谋杀率。</span></div><div class="line">&gt; <span class="comment">#根据标准化的回归系数，我们可认为Illiteracy是最重要的预测变量，而Frost是最不重要的。</span></div><div class="line"></div><div class="line"><span class="comment">#相对权重法：它是对所有可能子模型添加一个预测变量引起的R平方平均增加量的一个近似值</span></div><div class="line">relweights &lt;- <span class="keyword">function</span>(fit, <span class="keyword">...</span>) &#123;</div><div class="line">  R &lt;- cor(fit$model)</div><div class="line">  nvar &lt;- ncol(R)</div><div class="line">  rxx &lt;- R[<span class="number">2</span>:nvar, <span class="number">2</span>:nvar]</div><div class="line">  rxy &lt;- R[<span class="number">2</span>:nvar, <span class="number">1</span>]</div><div class="line">  svd &lt;- eigen(rxx)</div><div class="line">  evec &lt;- svd$vectors</div><div class="line">  ev &lt;- svd$values</div><div class="line">  delta &lt;- diag(sqrt(ev))</div><div class="line">  </div><div class="line">  <span class="comment"># correlations between original predictors and new orthogonal variables</span></div><div class="line">  lambda &lt;- evec %*% delta %*% t(evec)</div><div class="line">  lambdasq &lt;- lambda^<span class="number">2</span></div><div class="line">  </div><div class="line">  <span class="comment"># regression coefficients of Y on orthogonal variables</span></div><div class="line">  beta &lt;- solve(lambda) %*% rxy</div><div class="line">  rsquare &lt;- colSums(beta^<span class="number">2</span>)</div><div class="line">  rawwgt &lt;- lambdasq %*% beta^<span class="number">2</span></div><div class="line">  import &lt;- (rawwgt/rsquare) * <span class="number">100</span></div><div class="line">  lbls &lt;- names(fit$model[<span class="number">2</span>:nvar])</div><div class="line">  rownames(import) &lt;- lbls</div><div class="line">  colnames(import) &lt;- <span class="string">"Weights"</span></div><div class="line">  </div><div class="line">  <span class="comment"># plot results</span></div><div class="line">  barplot(t(import), names.arg = lbls, ylab = <span class="string">"% of R-Square"</span>, </div><div class="line">          xlab = <span class="string">"Predictor Variables"</span>, main = <span class="string">"Relative Importance of Predictor Variables"</span>, </div><div class="line">          sub = paste(<span class="string">"R-Square = "</span>, round(rsquare, digits = <span class="number">3</span>)), </div><div class="line">          <span class="keyword">...</span>)</div><div class="line">  <span class="keyword">return</span>(import)</div><div class="line">&#125;</div><div class="line"></div><div class="line">fit &lt;- lm(Murder ~ Population + Illiteracy + Income + </div><div class="line">            Frost, data = states)</div><div class="line">relweights(fit, col = <span class="string">"lightgrey"</span>)</div><div class="line"></div><div class="line">             Weights</div><div class="line">Population <span class="number">14.723401</span></div><div class="line">Illiteracy <span class="number">59.000195</span></div><div class="line">Income      <span class="number">5.488962</span></div><div class="line">Frost      <span class="number">20.787442</span></div></pre></td></tr></table></figure>
<p><img src="/2017/01/03/chapter08-回归（二）/相对权重.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;4、异常观测值&quot;&gt;&lt;a href=&quot;#4、异常观测值&quot; class=&quot;headerlink&quot; title=&quot;4、异常观测值&quot;&gt;&lt;/a&gt;4、异常观测值&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;一个全面的回归分析要覆盖对异常值的分析，包括离群点、高杠杆值点和强影响点。&lt;/li&gt;
&lt;
    
    </summary>
    
      <category term="R语言" scheme="https://pingansheng.github.io/categories/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R语言" scheme="https://pingansheng.github.io/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="回归" scheme="https://pingansheng.github.io/tags/%E5%9B%9E%E5%BD%92/"/>
    
  </entry>
  
  <entry>
    <title>chapter08 回归（一）</title>
    <link href="https://pingansheng.github.io/2017/01/03/chapter08-%E5%9B%9E%E5%BD%92%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://pingansheng.github.io/2017/01/03/chapter08-回归（一）/</id>
    <published>2017-01-03T04:25:14.000Z</published>
    <updated>2024-02-24T02:35:04.210Z</updated>
    
    <content type="html"><![CDATA[<h1 id="回归"><a href="#回归" class="headerlink" title="回归"></a>回归</h1><h2 id="1、回归的多面性"><a href="#1、回归的多面性" class="headerlink" title="1、回归的多面性"></a>1、回归的多面性</h2><ul>
<li>简单线性：用一个量化的解释变量预测一个量化的响应变量</li>
<li>多项式：用一个量化的解释变量预测一个量化的响应变量，模型的关系是n阶多项式</li>
<li>多元线性：用两个或多个量化的解释变量预测一个量化的响应变量</li>
<li>多变量：用一个或多个解释变量预测多个响应变量</li>
<li>Logistic：用一个或多个解释变量预测一个类别型响应变量</li>
<li>泊松：用一个或多个解释变量预测一个代表频数的响应变量</li>
<li>Cox比例风险：用一个或多个解释变量预测一个事件（死亡、失败或旧病复发）发生的时间</li>
<li>时间序列：对误差项相关的时间序列数据建模</li>
<li>非线性：用一个或多个量化的解释变量预测一个量化的响应变量，不过模型是非线性的</li>
<li>非参数：用一个或多个量化的解释变量预测一个量化的响应变量，模型的形式源自数据形式，不事先设定</li>
<li>稳健：用一个或多个量化的解释变量预测一个量化的响应变量，能抵御强影响点的干扰<h2 id="2、最小二乘回归"><a href="#2、最小二乘回归" class="headerlink" title="2、最小二乘回归"></a>2、最小二乘回归</h2><img src="/2017/01/03/chapter08-回归（一）/OLS公式.png" alt=""><br>为了能够恰当地解释OLS模型的系数，数据必须满足以下统计假设。</li>
<li>正态性: 对于固定的自变量值，因变量值成正态分布。</li>
<li>独立性: <code>Yi</code>值之间相互独立。</li>
<li>线性: 因变量与自变量之间为线性相关。</li>
<li>同方差性: 因变量的方差不随自变量的水平不同而变化。也可称作不变方差，但是说同方差性感觉上更犀利。</li>
</ul>
<h3 id="2-1-使用lm-拟合回归模型"><a href="#2-1-使用lm-拟合回归模型" class="headerlink" title="2.1 使用lm()拟合回归模型"></a>2.1 使用<code>lm()</code>拟合回归模型</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">myfit &lt;- lm(formula, data)</div></pre></td></tr></table></figure>
<p>常用的参数和解释<br><img src="/2017/01/03/chapter08-回归（一）/lm函数的参数解释.png" alt=""></p>
<p>对拟合线性模型非常有用的其他函数:<br><img src="/2017/01/03/chapter08-回归（一）/lm辅助函数.png" alt=""></p>
<h3 id="2-2-简单线性回归"><a href="#2-2-简单线性回归" class="headerlink" title="2.2 简单线性回归"></a>2.2 简单线性回归</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#OLS回归</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#简单线性回归 女性身高体重数据</span></div><div class="line">&gt; </div><div class="line">&gt; fit&lt;-lm(weight~height, data=women)</div><div class="line">&gt; </div><div class="line">&gt; summary(fit)</div><div class="line"></div><div class="line">Call:</div><div class="line">lm(formula = weight ~ height, data = women)</div><div class="line"></div><div class="line">Residuals:</div><div class="line">    Min      1Q  Median      3Q     Max </div><div class="line">-<span class="number">1.7333</span> -<span class="number">1.1333</span> -<span class="number">0.3833</span>  <span class="number">0.7417</span>  <span class="number">3.1167</span> </div><div class="line"></div><div class="line">Coefficients:</div><div class="line">             Estimate Std. Error t value Pr(&gt;|t|)    </div><div class="line">(Intercept) -<span class="number">87.51667</span>    <span class="number">5.93694</span>  -<span class="number">14.74</span> <span class="number">1.71e-09</span> ***</div><div class="line">height        <span class="number">3.45000</span>    <span class="number">0.09114</span>   <span class="number">37.85</span> <span class="number">1.09e-14</span> ***</div><div class="line">---</div><div class="line">Signif. codes:  <span class="number">0</span> ‘***’ <span class="number">0.001</span> ‘**’ <span class="number">0.01</span> ‘*’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></div><div class="line"></div><div class="line">Residual standard error: <span class="number">1.525</span> on <span class="number">13</span> degrees of freedom</div><div class="line">Multiple R-squared:  <span class="number">0.991</span>,	Adjusted R-squared:  <span class="number">0.9903</span> </div><div class="line"><span class="literal">F</span>-statistic:  <span class="number">1433</span> on <span class="number">1</span> and <span class="number">13</span> DF,  p-value: <span class="number">1.091e-14</span></div><div class="line"></div><div class="line">&gt; </div><div class="line">&gt; women$weight</div><div class="line"> [<span class="number">1</span>] <span class="number">115</span> <span class="number">117</span> <span class="number">120</span> <span class="number">123</span> <span class="number">126</span> <span class="number">129</span> <span class="number">132</span> <span class="number">135</span> <span class="number">139</span> <span class="number">142</span> <span class="number">146</span> <span class="number">150</span> <span class="number">154</span> <span class="number">159</span> <span class="number">164</span></div><div class="line">&gt; </div><div class="line">&gt; fitted(fit)</div><div class="line">       <span class="number">1</span>        <span class="number">2</span>        <span class="number">3</span>        <span class="number">4</span>        <span class="number">5</span>        <span class="number">6</span>        <span class="number">7</span>        <span class="number">8</span>        <span class="number">9</span>       <span class="number">10</span>       <span class="number">11</span> </div><div class="line"><span class="number">112.5833</span> <span class="number">116.0333</span> <span class="number">119.4833</span> <span class="number">122.9333</span> <span class="number">126.3833</span> <span class="number">129.8333</span> <span class="number">133.2833</span> <span class="number">136.7333</span> <span class="number">140.1833</span> <span class="number">143.6333</span> <span class="number">147.0833</span> </div><div class="line">      <span class="number">12</span>       <span class="number">13</span>       <span class="number">14</span>       <span class="number">15</span> </div><div class="line"><span class="number">150.5333</span> <span class="number">153.9833</span> <span class="number">157.4333</span> <span class="number">160.8833</span> </div><div class="line">&gt; </div><div class="line">&gt; residuals(fit)</div><div class="line">          <span class="number">1</span>           <span class="number">2</span>           <span class="number">3</span>           <span class="number">4</span>           <span class="number">5</span>           <span class="number">6</span>           <span class="number">7</span>           <span class="number">8</span> </div><div class="line"> <span class="number">2.41666667</span>  <span class="number">0.96666667</span>  <span class="number">0.51666667</span>  <span class="number">0.06666667</span> -<span class="number">0.38333333</span> -<span class="number">0.83333333</span> -<span class="number">1.28333333</span> -<span class="number">1.73333333</span> </div><div class="line">          <span class="number">9</span>          <span class="number">10</span>          <span class="number">11</span>          <span class="number">12</span>          <span class="number">13</span>          <span class="number">14</span>          <span class="number">15</span> </div><div class="line">-<span class="number">1.18333333</span> -<span class="number">1.63333333</span> -<span class="number">1.08333333</span> -<span class="number">0.53333333</span>  <span class="number">0.01666667</span>  <span class="number">1.56666667</span>  <span class="number">3.11666667</span> </div><div class="line">&gt; </div><div class="line">&gt; plot(women)</div><div class="line">&gt; abline(fit)</div><div class="line"><span class="comment"># 此模型的得到的方程式是：weight= -87.51667+3.45*height</span></div></pre></td></tr></table></figure>
<p><img src="/2017/01/03/chapter08-回归（一）/简单线性拟合对比图.png" alt=""></p>
<h3 id="2-3-多项式回归"><a href="#2-3-多项式回归" class="headerlink" title="2.3 多项式回归"></a>2.3 多项式回归</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#增加一个二次项提高精度</span></div><div class="line">&gt; </div><div class="line">&gt; fit2&lt;-lm(weight~height+I(height^<span class="number">2</span>),data=women)</div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#此处I()的含义是height^2表示为一个常规的R表达式，因为^在在表达式中有特殊含义</span></div><div class="line">&gt; </div><div class="line">&gt; summary(fit2)</div><div class="line"></div><div class="line">Call:</div><div class="line">lm(formula = weight ~ height + I(height^<span class="number">2</span>), data = women)</div><div class="line"></div><div class="line">Residuals:</div><div class="line">     Min       1Q   Median       3Q      Max </div><div class="line">-<span class="number">0.50941</span> -<span class="number">0.29611</span> -<span class="number">0.00941</span>  <span class="number">0.28615</span>  <span class="number">0.59706</span> </div><div class="line"></div><div class="line">Coefficients:</div><div class="line">             Estimate Std. Error t value Pr(&gt;|t|)    </div><div class="line">(Intercept) <span class="number">261.87818</span>   <span class="number">25.19677</span>  <span class="number">10.393</span> <span class="number">2.36e-07</span> ***</div><div class="line">height       -<span class="number">7.34832</span>    <span class="number">0.77769</span>  -<span class="number">9.449</span> <span class="number">6.58e-07</span> ***</div><div class="line">I(height^<span class="number">2</span>)   <span class="number">0.08306</span>    <span class="number">0.00598</span>  <span class="number">13.891</span> <span class="number">9.32e-09</span> ***</div><div class="line">---</div><div class="line">Signif. codes:  <span class="number">0</span> ‘***’ <span class="number">0.001</span> ‘**’ <span class="number">0.01</span> ‘*’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></div><div class="line"></div><div class="line">Residual standard error: <span class="number">0.3841</span> on <span class="number">12</span> degrees of freedom</div><div class="line">Multiple R-squared:  <span class="number">0.9995</span>,	Adjusted R-squared:  <span class="number">0.9994</span> </div><div class="line"><span class="literal">F</span>-statistic: <span class="number">1.139e+04</span> on <span class="number">2</span> and <span class="number">12</span> DF,  p-value: &lt; <span class="number">2.2e-16</span></div><div class="line"></div><div class="line">&gt; </div><div class="line">&gt; women$weight</div><div class="line"> [<span class="number">1</span>] <span class="number">115</span> <span class="number">117</span> <span class="number">120</span> <span class="number">123</span> <span class="number">126</span> <span class="number">129</span> <span class="number">132</span> <span class="number">135</span> <span class="number">139</span> <span class="number">142</span> <span class="number">146</span> <span class="number">150</span> <span class="number">154</span> <span class="number">159</span> <span class="number">164</span></div><div class="line">&gt; </div><div class="line">&gt; fitted(fit2)</div><div class="line">       <span class="number">1</span>        <span class="number">2</span>        <span class="number">3</span>        <span class="number">4</span>        <span class="number">5</span>        <span class="number">6</span>        <span class="number">7</span>        <span class="number">8</span>        <span class="number">9</span>       <span class="number">10</span>       <span class="number">11</span>       <span class="number">12</span>       <span class="number">13</span> </div><div class="line"><span class="number">115.1029</span> <span class="number">117.4731</span> <span class="number">120.0094</span> <span class="number">122.7118</span> <span class="number">125.5804</span> <span class="number">128.6151</span> <span class="number">131.8159</span> <span class="number">135.1828</span> <span class="number">138.7159</span> <span class="number">142.4151</span> <span class="number">146.2804</span> <span class="number">150.3118</span> <span class="number">154.5094</span> </div><div class="line">      <span class="number">14</span>       <span class="number">15</span> </div><div class="line"><span class="number">158.8731</span> <span class="number">163.4029</span> </div><div class="line">&gt; </div><div class="line">&gt; residuals(fit2)</div><div class="line">           <span class="number">1</span>            <span class="number">2</span>            <span class="number">3</span>            <span class="number">4</span>            <span class="number">5</span>            <span class="number">6</span>            <span class="number">7</span>            <span class="number">8</span>            <span class="number">9</span> </div><div class="line">-<span class="number">0.102941176</span> -<span class="number">0.473109244</span> -<span class="number">0.009405301</span>  <span class="number">0.288170653</span>  <span class="number">0.419618617</span>  <span class="number">0.384938591</span>  <span class="number">0.184130575</span> -<span class="number">0.182805430</span>  <span class="number">0.284130575</span> </div><div class="line">          <span class="number">10</span>           <span class="number">11</span>           <span class="number">12</span>           <span class="number">13</span>           <span class="number">14</span>           <span class="number">15</span> </div><div class="line">-<span class="number">0.415061409</span> -<span class="number">0.280381383</span> -<span class="number">0.311829347</span> -<span class="number">0.509405301</span>  <span class="number">0.126890756</span>  <span class="number">0.597058824</span> </div><div class="line">&gt; </div><div class="line">&gt; plot(women)</div><div class="line">&gt; lines(women$height,fitted(fit2))</div></pre></td></tr></table></figure>
<p><img src="/2017/01/03/chapter08-回归（一）/二次项对比图.png" alt=""></p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#car包中的scatterplot方便的绘制二元关系图</span></div><div class="line"><span class="keyword">library</span>(car)</div><div class="line">scatterplot(weight~height,</div><div class="line">            data=women,</div><div class="line">            spread=<span class="literal">FALSE</span>,<span class="comment">#spread=FALSE选项删除了残差正负均方根在平滑</span></div><div class="line">            <span class="comment">#曲线上的展开和非对称信息</span></div><div class="line">            pch=<span class="number">19</span>,</div><div class="line">            main=<span class="string">"Women Age 30-39"</span>,</div><div class="line">            xlab=<span class="string">"Height (inches)"</span>,</div><div class="line">            ylab=<span class="string">"Weight (lbs.)"</span></div><div class="line">            )</div></pre></td></tr></table></figure>
<p><img src="/2017/01/03/chapter08-回归（一）/二次项对比图2.png" alt=""></p>
<h3 id="2-4-多元线性回归"><a href="#2-4-多元线性回归" class="headerlink" title="2.4 多元线性回归"></a>2.4 多元线性回归</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#多项式回归</span></div><div class="line">&gt; <span class="comment">#观察谋杀率 人口 文盲率 平均收入 结霜天数关系</span></div><div class="line">&gt; states &lt;- as.data.frame(state.x77[,c(<span class="string">"Murder"</span>, <span class="string">"Population"</span>,<span class="string">"Illiteracy"</span>,<span class="string">"Income"</span>,<span class="string">"Frost"</span>)])</div><div class="line">&gt; <span class="comment">#观察二元关系</span></div><div class="line">&gt; cor(states)</div><div class="line">               Murder Population Illiteracy     Income      Frost</div><div class="line">Murder      <span class="number">1.0000000</span>  <span class="number">0.3436428</span>  <span class="number">0.7029752</span> -<span class="number">0.2300776</span> -<span class="number">0.5388834</span></div><div class="line">Population  <span class="number">0.3436428</span>  <span class="number">1.0000000</span>  <span class="number">0.1076224</span>  <span class="number">0.2082276</span> -<span class="number">0.3321525</span></div><div class="line">Illiteracy  <span class="number">0.7029752</span>  <span class="number">0.1076224</span>  <span class="number">1.0000000</span> -<span class="number">0.4370752</span> -<span class="number">0.6719470</span></div><div class="line">Income     -<span class="number">0.2300776</span>  <span class="number">0.2082276</span> -<span class="number">0.4370752</span>  <span class="number">1.0000000</span>  <span class="number">0.2262822</span></div><div class="line">Frost      -<span class="number">0.5388834</span> -<span class="number">0.3321525</span> -<span class="number">0.6719470</span>  <span class="number">0.2262822</span>  <span class="number">1.0000000</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="keyword">library</span>(car)</div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#大致观察数据图示关系(见下图)</span></div><div class="line">&gt; scatterplotMatrix(states, spread = <span class="literal">FALSE</span>, lty = <span class="number">2</span>, main=<span class="string">"Scatter Plot Matrix"</span>)</div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#回归</span></div><div class="line">&gt; fit &lt;- lm(Murder ~ Population + Illiteracy + Income + Frost, data=states)</div><div class="line">&gt; </div><div class="line">&gt; summary(fit)</div><div class="line"></div><div class="line">Call:</div><div class="line">lm(formula = Murder ~ Population + Illiteracy + Income + Frost, </div><div class="line">    data = states)</div><div class="line"></div><div class="line">Residuals:</div><div class="line">    Min      1Q  Median      3Q     Max </div><div class="line">-<span class="number">4.7960</span> -<span class="number">1.6495</span> -<span class="number">0.0811</span>  <span class="number">1.4815</span>  <span class="number">7.6210</span> </div><div class="line"></div><div class="line">Coefficients:</div><div class="line">             Estimate Std. Error t value Pr(&gt;|t|)    </div><div class="line">(Intercept) <span class="number">1.235e+00</span>  <span class="number">3.866e+00</span>   <span class="number">0.319</span>   <span class="number">0.7510</span>    </div><div class="line">Population  <span class="number">2.237e-04</span>  <span class="number">9.052e-05</span>   <span class="number">2.471</span>   <span class="number">0.0173</span> *  </div><div class="line">Illiteracy  <span class="number">4.143e+00</span>  <span class="number">8.744e-01</span>   <span class="number">4.738</span> <span class="number">2.19e-05</span> ***</div><div class="line">Income      <span class="number">6.442e-05</span>  <span class="number">6.837e-04</span>   <span class="number">0.094</span>   <span class="number">0.9253</span>    </div><div class="line">Frost       <span class="number">5.813e-04</span>  <span class="number">1.005e-02</span>   <span class="number">0.058</span>   <span class="number">0.9541</span>    </div><div class="line">---</div><div class="line">Signif. codes:  <span class="number">0</span> ‘***’ <span class="number">0.001</span> ‘**’ <span class="number">0.01</span> ‘*’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></div><div class="line"></div><div class="line">Residual standard error: <span class="number">2.535</span> on <span class="number">45</span> degrees of freedom</div><div class="line">Multiple R-squared:  <span class="number">0.567</span>,	Adjusted R-squared:  <span class="number">0.5285</span> </div><div class="line"><span class="literal">F</span>-statistic: <span class="number">14.73</span> on <span class="number">4</span> and <span class="number">45</span> DF,  p-value: <span class="number">9.133e-08</span></div><div class="line"></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#当预测变量不止一个时，回归系数的含义为，一个预测变量增加一个单位，其他预测变量保</span></div><div class="line">&gt; <span class="comment">#持不变时，因变量将要增加的数量。</span></div><div class="line">&gt; <span class="comment">#例如本例中，文盲率的回归系数为4.14，表示控制人口、收入和温度不变时，文盲率上升1%，</span></div><div class="line">&gt; <span class="comment">#谋杀率将会上升4.14%，它的系数在p&lt;0.001的水平下显著不为0。</span></div></pre></td></tr></table></figure>
<p><img src="/2017/01/03/chapter08-回归（一）/谋杀率的二元关系.png" alt=""></p>
<h3 id="2-5-有交互项的多元线性回归"><a href="#2-5-有交互项的多元线性回归" class="headerlink" title="2.5 有交互项的多元线性回归"></a>2.5 有交互项的多元线性回归</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#有交互项的回归  y=x-y+xy</span></div><div class="line">&gt; fit &lt;- lm(mpg ~ hp + wt +hp:wt, data=mtcars)</div><div class="line">&gt; summary(fit)</div><div class="line"></div><div class="line">Call:</div><div class="line">lm(formula = mpg ~ hp + wt + hp:wt, data = mtcars)</div><div class="line"></div><div class="line">Residuals:</div><div class="line">    Min      1Q  Median      3Q     Max </div><div class="line">-<span class="number">3.0632</span> -<span class="number">1.6491</span> -<span class="number">0.7362</span>  <span class="number">1.4211</span>  <span class="number">4.5513</span> </div><div class="line"></div><div class="line">Coefficients:</div><div class="line">            Estimate Std. Error t value Pr(&gt;|t|)    </div><div class="line">(Intercept) <span class="number">49.80842</span>    <span class="number">3.60516</span>  <span class="number">13.816</span> <span class="number">5.01e-14</span> ***</div><div class="line">hp          -<span class="number">0.12010</span>    <span class="number">0.02470</span>  -<span class="number">4.863</span> <span class="number">4.04e-05</span> ***</div><div class="line">wt          -<span class="number">8.21662</span>    <span class="number">1.26971</span>  -<span class="number">6.471</span> <span class="number">5.20e-07</span> ***</div><div class="line">hp:wt        <span class="number">0.02785</span>    <span class="number">0.00742</span>   <span class="number">3.753</span> <span class="number">0.000811</span> ***</div><div class="line">---</div><div class="line">Signif. codes:  <span class="number">0</span> ‘***’ <span class="number">0.001</span> ‘**’ <span class="number">0.01</span> ‘*’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></div><div class="line"></div><div class="line">Residual standard error: <span class="number">2.153</span> on <span class="number">28</span> degrees of freedom</div><div class="line">Multiple R-squared:  <span class="number">0.8848</span>,	Adjusted R-squared:  <span class="number">0.8724</span> </div><div class="line"><span class="literal">F</span>-statistic: <span class="number">71.66</span> on <span class="number">3</span> and <span class="number">28</span> DF,  p-value: <span class="number">2.981e-13</span></div><div class="line"></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#若两个预测</span></div><div class="line">&gt; <span class="comment">#变量的交互项显著，说明响应变量与其中一个预测变量的关系依赖于另外一个预测变量的水平。</span></div><div class="line">&gt; <span class="comment">#因此此例说明，每加仑汽油行驶英里数与汽车马力的关系依车重不同而不同。</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#通过effects包中的effect()函数，你可以用图形展示交互项的结果。</span></div><div class="line">&gt; <span class="keyword">library</span>(effects)</div><div class="line">&gt; plot(effect(<span class="string">"hp:wt"</span>, fit, xlevels=list(wt=c(<span class="number">2.2</span>,<span class="number">3.2</span>,<span class="number">4.2</span>))),multiline=<span class="literal">TRUE</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/01/03/chapter08-回归（一）/交互项对比.png" alt=""><br>从图中可以很清晰地看出，随着车重的增加，马力与每加仑汽油行驶英里数的关系减弱了。<br>当wt = 4.2时，直线几乎是水平的，表明随着hp的增加， mpg不会发生改变。</p>
<h2 id="3、回归诊断"><a href="#3、回归诊断" class="headerlink" title="3、回归诊断"></a>3、回归诊断</h2><ul>
<li>对回归结果的信念，都只建立在你的数据满足统计假设的前提之上。<h3 id="3-1-标准方法"><a href="#3-1-标准方法" class="headerlink" title="3.1 标准方法"></a>3.1 标准方法</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#回归诊断</span></div><div class="line">fit&lt;- lm(weight~height,data=women)</div><div class="line"><span class="comment">#将plot()函数绘制的四幅图形组合在一个大的2×2的图中。</span></div><div class="line">par(mfrow=c(<span class="number">2</span>,<span class="number">2</span>))</div><div class="line">plot(fit)</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="/2017/01/03/chapter08-回归（一）/基本回归诊断.png" alt=""></p>
<ul>
<li><p>正态性：当预测变量值固定时，因变量成正态分布，则残差值也应该是一个均值为0的正<br>态分布。正态Q-Q图（Normal Q-Q，右上）是在正态分布对应的值下，标准化残差的概率<br>图。若满足正态假设，那么图上的点应该落在呈45度角的直线上；若不是如此，那么就<br>违反了正态性的假设。</p>
</li>
<li><p>独立性：由样本的数据收集去确保</p>
</li>
<li><p>线性：若因变量与自变量线性相关，那么残差值与预测（拟合）值就没有任何系统关联。<br>换句话说，除了白噪声，模型应该包含数据中所有的系统方差。在“残差图与拟合图”<br>（Residuals vs Fitted，左上）中可以清楚的看到一个曲线关系，这暗示着你可能需要对回<br>归模型加上一个二次项。</p>
</li>
<li><p>同方差性 ：若满足不变方差假设，那么在位置尺度图（Scale-Location Graph，左下）中，<br>水平线周围的点应该随机分布。该图似乎满足此假设。</p>
</li>
<li><p>最后一幅“残差与杠杆图”（Residuals vs Leverage，右下）提供了你可能关注的单个观测点的信息。从图形可以鉴别出离群点、高杠杆值点和强影响点。</p>
</li>
</ul>
<p>看下二次拟合的图：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">fit&lt;- lm(weight~height+I(height^<span class="number">2</span>),data=women)</div><div class="line"><span class="comment">#将plot()函数绘制的四幅图形组合在一个大的2×2的图中。</span></div><div class="line">par(mfrow=c(<span class="number">2</span>,<span class="number">2</span>))</div><div class="line">plot(fit)</div><div class="line"><span class="comment">#这第二组图表明多项式回归拟合效果比较理想，基本符合了线性假设、残差正态性（除了</span></div><div class="line"><span class="comment">#观测点13）和同方差性（残差方差不变）。观测点15看起来像是强影响点（根据是它有较大的</span></div><div class="line"><span class="comment">#Cook距离值），删除它将会影响参数的估计。事实上，删除观测点13和15，模型会拟合得会更好。</span></div></pre></td></tr></table></figure></p>
<p><img src="/2017/01/03/chapter08-回归（一）/基本诊断二次拟合.png" alt=""></p>
<h3 id="3-2-改进的方法"><a href="#3-2-改进的方法" class="headerlink" title="3.2 改进的方法"></a>3.2 改进的方法</h3><p>car包提供多种函数用以评价回归模型：<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">qqPlot() 分位数比较图</div><div class="line"></div><div class="line">durbinWatsonTest() 对误差自相关性做Durbin-Watson检验</div><div class="line"></div><div class="line">crPlots() 成分与残差图</div><div class="line"></div><div class="line">ncvTest() 对非恒定的误差方差做得分检验</div><div class="line"></div><div class="line">spreadLevelPlot() 分散水平检验</div><div class="line"></div><div class="line">outlierTest() Bonferroni离群点检验</div><div class="line"></div><div class="line">avPlots() 添加的变量图形</div><div class="line"></div><div class="line">inluencePlot() 回归影响图</div><div class="line"></div><div class="line">scatterplot() 增强的散点图</div><div class="line"></div><div class="line">scatterplotMatrix() 增强的散点图矩阵</div><div class="line"></div><div class="line">vif() 方差膨胀因子</div></pre></td></tr></table></figure></p>
<ul>
<li>正态性：qqPlot()<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#它画出了在n-p-1个自由度的t分布下的学生化残差（studentized residual，也称学生化删除残差或折叠</span></div><div class="line"><span class="comment">#化残差）图形，其中n是样本大小， p是回归参数的数目（包括截距项）。</span></div><div class="line"><span class="keyword">library</span>(car)</div><div class="line">fit&lt;-lm(Murder ~ Population + Illiteracy + Income + Frost, data=states)</div><div class="line">par(mfrow=c(<span class="number">1</span>,<span class="number">1</span>))</div><div class="line">qqPlot(fit,labels=row.names(states),id.method = <span class="string">"identify"</span>,simulate=<span class="literal">TRUE</span>, main=<span class="string">"Q-Q Plot"</span>)</div><div class="line"><span class="comment">#当simulate=TRUE时， 95%的置信区间将会用参数自助法</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="/2017/01/03/chapter08-回归（一）/qqPlot.png" alt=""></p>
<p>另一种和可视化误差的方法<br><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">residplot&lt;-<span class="keyword">function</span>(fit,nbreaks=<span class="number">10</span>)&#123;</div><div class="line">  z&lt;-rstudent(fit)</div><div class="line">  hist(z,breaks=nbreaks,freq = <span class="literal">FALSE</span>, xlab=<span class="string">"Studentized Residual"</span>,main=<span class="string">"Distribution of Errors"</span>)</div><div class="line">  rug(jitter(z), col = <span class="string">"brown"</span>)</div><div class="line">  curve(dnorm(x,mean=mean(z),sd=sd(z)),</div><div class="line">        add=<span class="literal">TRUE</span>, col=<span class="string">"blue"</span>,lwd=<span class="number">2</span>)</div><div class="line">  lines(density(z)$x,density(z)$y,col=<span class="string">"red"</span>,lwd=<span class="number">2</span>,lty=<span class="number">2</span>)</div><div class="line">  legend(<span class="string">"topright"</span>,legend = c(<span class="string">"Normal Curve"</span>,<span class="string">"Kernel Density Curve"</span>),lty=<span class="number">1</span>:<span class="number">2</span>,col=c(<span class="string">"blue"</span>,<span class="string">"red"</span>),cex=<span class="number">.7</span>)</div><div class="line">&#125;</div><div class="line">residplot(fit)</div></pre></td></tr></table></figure></p>
<p><img src="/2017/01/03/chapter08-回归（一）/residplot.png" alt=""></p>
<ul>
<li><p>独立性</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#误差的独立性</span></div><div class="line">&gt; durbinWatsonTest(fit)</div><div class="line"> lag Autocorrelation D-W Statistic p-value</div><div class="line">   <span class="number">1</span>      -<span class="number">0.2006929</span>      <span class="number">2.317691</span>   <span class="number">0.258</span></div><div class="line"> Alternative hypothesis: rho != <span class="number">0</span></div><div class="line">&gt; <span class="comment">#p值不显著说明无相关性，误差项之间独立，滞后项（lag=1）表明数据集中</span></div><div class="line">&gt; <span class="comment">#每个数据都是与其后一个数据进行比较的。该检验适用于时间独立的数据，对于非聚集型的数据</span></div><div class="line">&gt; <span class="comment">#并不适用。注意， durbinWatsonTest()函数使用自助法（参见第12章）来导出p值，如果添加</span></div><div class="line">&gt; <span class="comment">#了选项simulate=FALSE，则每次运行测试时获得的结果都将略有不同。</span></div></pre></td></tr></table></figure>
</li>
<li><p>线性</p>
<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">crPlots(fit)</div><div class="line"><span class="comment">#若图形存在非线性，则说明你可能对预测变量的函数形式建模不够充分，</span></div><div class="line"><span class="comment">#那么就需要添加一些曲线成分，比如多项式项，或对一个或多个变量进行变换（如用log(X)代</span></div><div class="line"><span class="comment">#替X），或用其他回归变体形式而不是线性回归。</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="/2017/01/03/chapter08-回归（一）/成分残差图.png" alt=""></p>
<ul>
<li>同方差性<figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#线性</span></div><div class="line">&gt; crPlots(fit)</div><div class="line">&gt; <span class="comment">#若图形存在非线性，则说明你可能对预测变量的函数形式建模不够充分，</span></div><div class="line">&gt; <span class="comment">#那么就需要添加一些曲线成分，比如多项式项，或对一个或多个变量进行变换（如用log(X)代</span></div><div class="line">&gt; <span class="comment">#替X），或用其他回归变体形式而不是线性回归。</span></div><div class="line">&gt; </div><div class="line">&gt; <span class="comment">#同方差性</span></div><div class="line">&gt; <span class="comment">#ncvTest()函数生成一个计分检验，零假设为误差方差不变，备择假设为误差方差随着拟合值水平的变化而变化。</span></div><div class="line">&gt; <span class="comment">#若检验显著，则说明存在异方差性（误差方差不恒定）</span></div><div class="line">&gt; ncvTest(fit)</div><div class="line">Non-constant Variance Score Test </div><div class="line">Variance formula: ~ fitted.values </div><div class="line">Chisquare = <span class="number">1.746514</span>    Df = <span class="number">1</span>     p = <span class="number">0.1863156</span> </div><div class="line">&gt; p=<span class="number">0.18</span>不显著接受零假设</div><div class="line">&gt; <span class="comment">#spreadLevelPlot()函数创建一个添加了最佳拟合曲线的散点图，展示标准化残差绝对值与拟合值的关系。</span></div><div class="line">&gt; spreadLevelPlot(fit)</div><div class="line"></div><div class="line">Suggested power transformation:  <span class="number">1.209626</span> </div><div class="line"><span class="comment">#你将会看到一个非水平的曲线。代码结果建议幂次变换（suggested power transformation）的含义</span></div><div class="line"><span class="comment">#是，经过p次幂（Y^p）变换，非恒定的误差方差将会平稳。</span></div><div class="line"><span class="comment">#建议幂次转换为0.5，在回归等式中用 Y 代替Y，可能会使模型满足同方差性。若建议幂次为0，</span></div><div class="line"><span class="comment">#则使用对数变换。对于当前例子，异方差性很不明显，因此建议幂次接近1（不需要进行变换）。</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="/2017/01/03/chapter08-回归（一）/残差分布图.png" alt=""></p>
<h3 id="3-3-线性模型假设的综合验证"><a href="#3-3-线性模型假设的综合验证" class="headerlink" title="3.3 线性模型假设的综合验证"></a>3.3 线性模型假设的综合验证</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="keyword">library</span>(gvlma)</div><div class="line">&gt; gvmodel&lt;-gvlma(fit)</div><div class="line">&gt; summary(gvmodel)</div><div class="line"></div><div class="line">Call:</div><div class="line">lm(formula = Murder ~ Population + Illiteracy + Income + Frost, </div><div class="line">    data = states)</div><div class="line"></div><div class="line">Residuals:</div><div class="line">    Min      1Q  Median      3Q     Max </div><div class="line">-<span class="number">4.7960</span> -<span class="number">1.6495</span> -<span class="number">0.0811</span>  <span class="number">1.4815</span>  <span class="number">7.6210</span> </div><div class="line"></div><div class="line">Coefficients:</div><div class="line">             Estimate Std. Error t value Pr(&gt;|t|)    </div><div class="line">(Intercept) <span class="number">1.235e+00</span>  <span class="number">3.866e+00</span>   <span class="number">0.319</span>   <span class="number">0.7510</span>    </div><div class="line">Population  <span class="number">2.237e-04</span>  <span class="number">9.052e-05</span>   <span class="number">2.471</span>   <span class="number">0.0173</span> *  </div><div class="line">Illiteracy  <span class="number">4.143e+00</span>  <span class="number">8.744e-01</span>   <span class="number">4.738</span> <span class="number">2.19e-05</span> ***</div><div class="line">Income      <span class="number">6.442e-05</span>  <span class="number">6.837e-04</span>   <span class="number">0.094</span>   <span class="number">0.9253</span>    </div><div class="line">Frost       <span class="number">5.813e-04</span>  <span class="number">1.005e-02</span>   <span class="number">0.058</span>   <span class="number">0.9541</span>    </div><div class="line">---</div><div class="line">Signif. codes:  <span class="number">0</span> ‘***’ <span class="number">0.001</span> ‘**’ <span class="number">0.01</span> ‘*’ <span class="number">0.05</span> ‘.’ <span class="number">0.1</span> ‘ ’ <span class="number">1</span></div><div class="line"></div><div class="line">Residual standard error: <span class="number">2.535</span> on <span class="number">45</span> degrees of freedom</div><div class="line">Multiple R-squared:  <span class="number">0.567</span>,	Adjusted R-squared:  <span class="number">0.5285</span> </div><div class="line"><span class="literal">F</span>-statistic: <span class="number">14.73</span> on <span class="number">4</span> and <span class="number">45</span> DF,  p-value: <span class="number">9.133e-08</span></div><div class="line"></div><div class="line"></div><div class="line">ASSESSMENT OF THE LINEAR MODEL ASSUMPTIONS</div><div class="line">USING THE GLOBAL TEST ON <span class="number">4</span> DEGREES-OF-FREEDOM:</div><div class="line">Level of Significance =  <span class="number">0.05</span> </div><div class="line"></div><div class="line">Call:</div><div class="line"> gvlma(x = fit) </div><div class="line"></div><div class="line">                    Value p-value                Decision</div><div class="line">Global Stat        <span class="number">2.7728</span>  <span class="number">0.5965</span> Assumptions acceptable.</div><div class="line">Skewness           <span class="number">1.5374</span>  <span class="number">0.2150</span> Assumptions acceptable.</div><div class="line">Kurtosis           <span class="number">0.6376</span>  <span class="number">0.4246</span> Assumptions acceptable.</div><div class="line">Link Function      <span class="number">0.1154</span>  <span class="number">0.7341</span> Assumptions acceptable.</div><div class="line">Heteroscedasticity <span class="number">0.4824</span>  <span class="number">0.4873</span> Assumptions acceptable.</div><div class="line"></div><div class="line"><span class="comment">#从输出项（Global Stat中的文字栏）我们可以看到数据满足OLS回归模型所有的统计假设</span></div><div class="line"><span class="comment">#（p=0.5965597） 。若Decision下的文字表明违反了假设条件（比如p&lt;0.05） ，你可以使用前几节讨论</span></div><div class="line"><span class="comment">#的方法来判断哪些假设没有被满足。</span></div></pre></td></tr></table></figure>
<h3 id="3-4-多重共线性"><a href="#3-4-多重共线性" class="headerlink" title="3.4 多重共线性"></a>3.4 多重共线性</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="comment">#多重共线性</span></div><div class="line">&gt; <span class="comment">#例如 握力~年龄+DOB(Date Of Birth)</span></div><div class="line">&gt; <span class="comment">#F检验显著， p&lt;0.001。但是当你观察DOB和年龄的回归系数时，却</span></div><div class="line">&gt; <span class="comment">#发现它们都不显著（也就是说无法证明它们与握力相关）</span></div><div class="line">&gt; <span class="comment">#原因是DOB与年龄在四舍五入后相关性极大。回归系数测量的是当其他预测变量不变时，某</span></div><div class="line">&gt; <span class="comment">#个预测变量对响应变量的影响。那么此处就相当于假定年龄不变，然后测量握力与年龄的关系，</span></div><div class="line">&gt; <span class="comment">#这种问题就称作多重共线性（multicollinearity）。它会导致模型参数的置信区间过大，使单个系数</span></div><div class="line">&gt; <span class="comment">#解释起来很困难。</span></div><div class="line"></div><div class="line">&gt; <span class="comment">#使用VIF度量（Variance Inflation Factor，方差膨胀因子），</span></div><div class="line">&gt; <span class="comment">#VIF的平方根表示变量回归参数的置信区间能膨胀为与模型无关的预测变量的程度（因此而得名）</span></div><div class="line">&gt; <span class="keyword">library</span>(car)</div><div class="line">&gt; vif(fit)</div><div class="line">Population Illiteracy     Income      Frost </div><div class="line">  <span class="number">1.245282</span>   <span class="number">2.165848</span>   <span class="number">1.345822</span>   <span class="number">2.082547</span> </div><div class="line">&gt; sqrt(vif(fit))&gt;<span class="number">2</span></div><div class="line">Population Illiteracy     Income      Frost </div><div class="line">     <span class="literal">FALSE</span>      <span class="literal">FALSE</span>      <span class="literal">FALSE</span>      <span class="literal">FALSE</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;回归&quot;&gt;&lt;a href=&quot;#回归&quot; class=&quot;headerlink&quot; title=&quot;回归&quot;&gt;&lt;/a&gt;回归&lt;/h1&gt;&lt;h2 id=&quot;1、回归的多面性&quot;&gt;&lt;a href=&quot;#1、回归的多面性&quot; class=&quot;headerlink&quot; title=&quot;1、回归的多面性&quot;
    
    </summary>
    
      <category term="R语言" scheme="https://pingansheng.github.io/categories/R%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="R语言" scheme="https://pingansheng.github.io/tags/R%E8%AF%AD%E8%A8%80/"/>
    
      <category term="回归" scheme="https://pingansheng.github.io/tags/%E5%9B%9E%E5%BD%92/"/>
    
  </entry>
  
</feed>
